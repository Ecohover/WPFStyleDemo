<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LiteTrading</name>
    </assembly>
    <members>
        <member name="T:CapitalPipe.LiteTrading.Accelerations.HotkeyFlags">
            <summary>
            快速鍵(Hotkey)的Modifier旗標
            </summary>
            <remarks>
            利用這個Enum來定義在快速鍵按下時，是否需要一併判斷有無其他系統按鍵同時被按下。
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.HotkeyFlags.None">
            <summary>
            無任何系統鍵被按下
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.HotkeyFlags.Alt">
            <summary>
            Alt鍵
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.HotkeyFlags.Control">
            <summary>
            Ctrl鍵
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.HotkeyFlags.Shift">
            <summary>
            Shift鍵
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.HotkeyFlags.Windows">
            <summary>
            Windows鍵
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.HotkeyFlags.NoRepeat">
            <summary>
            未重覆按下
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Accelerations.ShortCutEntry">
            <summary>
            快速指令
            </summary>
            <remarks>
            定義一組系統快速鍵。在各Focused表單無重新定義快速鍵情況下，當使用者按下這組快速鍵時，裡面的指令會被執行。ShortCutEntry必須透過向ShortCutManager註冊後才能生效。<para/>
            快速指令指的是一個<c>Action(objet)</c>形式的方法。在快速鍵被按下時，會執行這個方法。這個方法有一個object參數，不同的UI元件可以視本身的需求來回傳這個object值。
            例如：在選擇權的T字報價畫面，可以回傳擁有目前Focus的選擇權。
            <example>
            以下範例示範如何註冊一組系統快速鍵，這個快速鍵會用呼叫"ShowFlashOrder"方法，打開一個閃電下單的畫面。
            <code>
            public static void RegisterShortCuts()
            {
                string ShowFlashOrderUUID = "{1B8FFBE4-4E63-4F08-BC55-31B8BC475741}";
                ShortCutEntry sEntry = new ShortCutEntry(ShowFlashOrderUUID, true, "Action", "開啟閃電下單", ShowFlashOrder);
                ShortCutManager.DefaultManager.RegisterShortCut(sEntry);
                //註冊快速鍵類別
                ShortCutManager.DefaultManager.RegisterClassification("開啟", sEntry);
            }
            
            public static void ShowFlashOrder(object context)
            {
                CommodityInfo cmdInfo = context as CommodityInfo;
                if (cmdInfo != null)
                {
                    FlashOrderControl.CreateFlashOrderWindow(cmdInfo);
                }
                else
                {
                    FlashOrderControl.CreateFlashOrderWindow();
                }
            }
            </code>
            </example>
            </remarks>      
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.ShortCutEntry._shortCutUUID">
            <summary>
            ShortCut的uuid
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.ShortCutEntry._shortCutType">
            <summary>
            ShortCut的類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.ShortCutEntry._isSystemShortCut">
            <summary>
            是否為系統快速指令？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.ShortCutEntry._descriptoin">
            <summary>
            快速指令說明
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.ShortCutEntry._shortCutAction">
            <summary>
            快速指令動作
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.ShortCutEntry._defaultKeyFlags">
            <summary>
            Hokey的Modifier旗標
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Accelerations.ShortCutEntry.ShortCutUUID">
            <summary>
            快速指令的UUID
            </summary>
            <remarks>
            每個快速指令都有自已的GUID
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Accelerations.ShortCutEntry.ShortCutType">
            <summary>
            快速指令的類型
            </summary>
            <remarks>
            其實是個說明及分類用的字串，在程式運行上無實際意義。
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Accelerations.ShortCutEntry.IsSystemShortCut">
            <summary>
            是否為系統快速指令
            </summary>
            <value>
            true:表示由RTS定義的系統快速指令
            <para>false:表示由開發人員定義的快速指令</para>
            </value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Accelerations.ShortCutEntry.Description">
            <summary>
            快速指令說明
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Accelerations.ShortCutEntry.ShortCutAction">
            <summary>
            快速指令的執行項目
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Accelerations.ShortCutEntry.Self">
            <summary>
            傳回this參考，方便Binding時使用
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Accelerations.ShortCutEntry.#ctor(System.String,System.Boolean,System.String,System.String,System.Action{System.Object})">
            <summary>
            建構式，建立一個ShortCutEntry物件
            </summary>
            <remarks>
            建立出ShortCutEntry物件後，必須透過ShortCutManager的RegisterShortCut方法來註冊快速指令。
            </remarks>
            <param name="uuid">快速鍵的GUID</param>
            <param name="isSystemShortCut">是否為系統快速指令</param>
            <param name="shortCutType">快速鍵的類型</param>
            <param name="description">快速指令說明</param>
            <param name="action">快速指令動作</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Accelerations.ShortCutEntryClass">
            <summary>
            快速指令的類型
            </summary>
            <remarks>
            這個物件的作用是提供ShortCutEntry的分類使用，ShortCuts屬性會有這個分類下的所有快速指令。
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.ShortCutEntryClass._classID">
            <summary>
            類型的代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.ShortCutEntryClass._shortCutEntries">
            <summary>
            所有的快速指令資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Accelerations.ShortCutEntryClass.ClassID">
            <summary>
            類型的代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Accelerations.ShortCutEntryClass.ShortCuts">
            <summary>
            這個分類下的所有快速指令資料
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Accelerations.ShortCutEntryClass.#ctor(System.String)">
            <summary>
            建構式，產生一個ShortCutEntryClass
            </summary>
            <param name="clsID">快速指令類型</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Accelerations.ShortCutManager">
            <summary>
            快速指令管理員
            </summary>
            <remarks>
            這個物件是用來管理所有的快速指令以及快速指令分鍒。
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.ShortCutManager._shortCuts">
            <summary>
            快速指令集合
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.ShortCutManager._classifications">
            <summary>
            分類表
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Accelerations.ShortCutManager._defaultManager">
            <summary>
            預設的快速指令管理員
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Accelerations.ShortCutManager.ShortCuts">
            <summary>
            所有的快速指令物件(ObservableCollection，方便WPF的Binding使用)<para/>
            請不要透過這個物件來新增ShortCutEntry，請使用註冊(RegisterShortCut)方式!!
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Accelerations.ShortCutManager.ShortCutEntries">
            <summary>
            所有的快速指令物件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Accelerations.ShortCutManager.Classifications">
            <summary>
            所有的快速指令分類
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Accelerations.ShortCutManager.DefaultManager">
            <summary>
            預設的快速指令管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Accelerations.ShortCutManager.RegisterShortCut(CapitalPipe.LiteTrading.Accelerations.ShortCutEntry)">
            <summary>
            註冊快速指令
            </summary>
            <param name="shortCut">快速指令物件</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Accelerations.ShortCutManager.GetShortCutByActionGUID(System.String)">
            <summary>
            使用GUID取得快速指令物件
            </summary>
            <param name="guid">快速指令的GUID</param>
            <returns>
            有找到：快速指令物物件<para/>
            找不到：null
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Accelerations.ShortCutManager.RegisterClassification(System.String,CapitalPipe.LiteTrading.Accelerations.ShortCutEntry)">
            <summary>
            註冊快速指令
            </summary>
            <param name="clsID">快速指令的類別</param>
            <param name="cEntry">快速指令物件</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.AppAbilityController">
            <summary>
            控制程式開放功能項目組態的物件
            </summary>
            <remarks>
            使用這個物件時，不得修改其屬性資料。在RTS Client端登入時，會自DataService傳回每個帳號應有的設定值，在使用上應該直接使用後檯傳回的設定值，不得任意修改。<para/>
            在使用時應該使用DefaultController這個static property來取得系統設定值。
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController._cmdFileMode">
            <summary>
            商品檔類型：
                0 : 載入commodityinfo.zip
                1 : 不載入commodityinfo.zip
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController._bMarketMaking">
            <summary>
            是否有造市功能
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController._bSpreadTrade">
            <summary>
            價差交易
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController._featuresFunctions">
            <summary>
            是否啟用測試中的新功能
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController._bTestEnviroment">
            <summary>
            是否為測試環境
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController._preloadWarrants">
            <summary>
            是否預載權證資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController._scriptTrade">
            <summary>
            是否啟動腳本交易
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController._supportQuoteOrder">
            <summary>
            支援報價單下單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController._supportDataFramework">
            <summary>
            是否支援資料平台？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController._enabledFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController._controler">
            <summary>
            預設的系統功能管理員
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController.XMLTag_MarketMaking">
            <summary>
            造市功能
            </summary>
            <value>MarketMaking</value>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController.XMLTag_SpreadTrade">
            <summary>
            價差交易
            </summary>
            <value>SpreadTrade</value>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController.XMLTag_FeaturesFunctions">
            <summary>
            測試中功能
            </summary>
            <value>FeaturesFunctions</value>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController.XMLTag_TestEnviroment">
            <summary>
            測試環境
            </summary>
            <value>TestEnviroment</value>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController.XMLTag_ScriptTrade">
            <summary>
            腳本交易
            </summary>
            <value>ScriptTrade</value>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController.XMLTag_PreloadWarrants">
            <summary>
            預載權證資料
            </summary>
            <value>PreloadWarrants</value>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController.XMLTag_CommodityFileMode">
            <summary>
            商品檔模式
            </summary>
            <value>CommodityFileMode</value>
        </member>
        <member name="F:CapitalPipe.LiteTrading.AppAbilityController.XMLNode_AppAbility">
            <summary>
            系統功能
            </summary>
            <value>AppAbility</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.AppAbilityController.CommodityFileModel">
            <summary>
            商品檔類型：
            </summary>
            <remarks>
            0 : 載入commodityinfo.zip <para/>
            1 : 使用模組提供資料
            2 : 透過DataService下載
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.AppAbilityController.SpreadTrade">
            <summary>
            是否啟動價差交易
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.AppAbilityController.PreloadWarrants">
            <summary>
            是否預載權證資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.AppAbilityController.MarketMaking">
            <summary>
            是否啟用造市交易
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.AppAbilityController.ScriptTrade">
            <summary>
            是否啟動腳本交易
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.AppAbilityController.FeaturesFunctions">
            <summary>
            測試中的新功能
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.AppAbilityController.TestEnviroment">
            <summary>
            測試環境
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.AppAbilityController.SupportQuoteOrder">
            <summary>
            是否支援報價單
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.AppAbilityController.SupportDataFramework">
            <summary>
            是否支援資料平台？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.AppAbilityController.EnabledFeatures">
            <summary>
            啟用的功能
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.AppAbilityController.DefaultController">
            <summary>
            預設的系統功能管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.AppAbilityController.ApplySettings(System.String)">
            <summary>
            套用設定
            </summary>
            <param name="config">XML格式的系統功能資料</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.AppAbilityController.ToXMLConfigString">
            <summary>
            轉成XML字串
            </summary>
            <returns>將系統功能管理員的設定值轉成XML節點格式的字串</returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.BackgroundWorker">
            <summary>
            處理Background工作
            </summary>
            <remarks>
            用法：每隔xx秒執行一次ToDoList裡面的所有工作
            需要定期被執行的job可以放在ToDoList裡面
            注意：若job可能需要執行較長的時間，可能會造成cpu的高負載
            缺點：是採用pooling的機制，故效能較差且不及時
            待執行的工作為TrivialDelegate類型(void OOXX(void))
            使用時請使用static Property:DefaultWorker
               亦即：BackgroundWorker.DefaultWorker.OOXX(...);
            使用方式：
                (1) 啟動
                    只要DefaultWorker的instance被reference到(BackgroundWorkder的Constructor
                    會被呼叫)，這時侯就會new一個thread起來做背景工作
                (2) 停止
                    通常只在程式要結束前才會被呼叫：
                    BackgroundWorker.DefaultWorker.TerminateBackgroundWorker();
                (3) 增加工作
                    BackgroundWorker.DefaultWorker.AddBackgroudTask(OOXX);
            注意：
                 由於在_toDoList裡面的所有工作都是會被連續執行，故要控制每個Task被執行的間距(ex:50秒or3分鐘)
                 必須在Task裡面自已處理，BackgroundWorker只負責定期呼叫這些Tasks
            ToDo:
                (1) 目前被加入BackgroundWorker裡面的TrivialDelegate，都是要被連續執行的
                    需要加入一些僅執行一次的工作機制。
                (2) DoBackgroundWork裡面的執行，當_toDoList太多時，可能會變成連續執行讓
                    CPU接高，要思考一下smooth的機制
                    ie:可以修改_sleepSecs的定義，改成toDoList的Tasks是平均在XX secs裡面會被執行一次
            </remarks>    
        </member>
        <member name="F:CapitalPipe.LiteTrading.BackgroundWorker._byPassWork">
            <summary>
            是否byPass工作
            true:會略掉ToDoList的所有工作，不執行
            false:會執行ToDoList的所有工作 
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.BackgroundWorker._sleepMilliSecs">
            <summary>
            每次重新檢查待執行Tasks的sleep毫秒數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.BackgroundWorker._backgroundFunc">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.BackgroundWorker._lastUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.BackgroundWorker._toDoList">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.BackgroundWorker._scheduledTasks">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.BackgroundWorker._defaultWorker">
            <summary>
            預設的BackgroundWorker
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.BackgroundWorker.ToDoList">
            <summary>
            待處理工作
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.BackgroundWorker.WorkerSleepMilliSeconds">
            <summary>
            背景執行緒Sleep Milli-Seconds
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.BackgroundWorker.ByPassWork">
            <summary>
            是否byPass工作
            true:會略掉ToDoList的所有工作，不執行
            false:會執行ToDoList的所有工作
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.BackgroundWorker.DefaultWorker">
            <summary>
            預設的Worker
                ==> 傳回_defaultWorker變數
                    若_defaultWorker是null，則會產生一個BackgroundWorker，
                    並將_defaultWorker設成這個instance
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.BackgroundWorker.#ctor">
            <summary>
            Constructor
            會new一個thread，這個thread會執行ToDoList裡面的所有工作
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.BackgroundWorker.DoBackgroundWork">
            <summary>
            背景工作執行緒
            每隔SleepSeconds後執行一次ToDoList裡面的所有工作
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.BackgroundWorker.TerminateBackgroundWorker">
            <summary>
            只有在程式要被關閉才能呼叫
            會join呼叫這個方法的thread
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.BackgroundWorker.AddBackgroudTask(CapitalPipe.Utilities.TrivialDelegate)">
            <summary>
            增加一個Background工作
            </summary>
            <param name="task">背景執行工作，型態：void func();</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.BackgroundWorker.RemoveBackgroudTask(CapitalPipe.Utilities.TrivialDelegate)">
            <summary>
            移除一個Background工作
            </summary>
            <param name="task">背景執行工作</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.BackgroundWorker.AddScheduledTask(CapitalPipe.Utilities.TrivialDelegate,System.DateTime)">
            <summary>
            增加一個Scheduled工作
            </summary>
            <param name="task">背景執行工作，型態：void func();</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.BackgroundWorker.RemoveScheduledTask(CapitalPipe.Utilities.TrivialDelegate)">
            <summary>
            移除一個Scheduled工作
            </summary>
            <param name="task">背景執行工作</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Baskets.Basket">
            <summary>
            Basket資料物件
            </summary>
            <remarks>
            <para>Basket資料由一群商品組成，可以用來某個投資組合或是指數成份。Basket來源可以分成兩種</para>
            <list type="bullet">
            <item><description>系統Basket，由RTS系統定義的Basket</description></item>
            <item><description>自訂Basket，由使用者自行定義的Basket</description></item>
            </list>
            <para>要區分是不是系統Basket，可以透過IsSystemBasket屬性。</para>
            <para>BasketManager是用來管理Basket資料的物件，當有需要修改Basket</para>
            <para>每個Basket資料，包括以下資訊</para>
            <list type="number">
            <item><description>BasketID：用來識別該Basket的代碼，不可重複</description></item>
            <item><description>BasketData：一組BasketEntry資料，表示在這個Basket資料中，某一檔商品所佔的權重或是數量</description></item>
            </list>
            <example>
            <para>要取得Basket物件，可以透過Basket的代碼。例如以下程式可以取得代碼為"TWSEIdx"的Basket：</para>
            <code>
            Basket basket = BasketManager.DefaultManager.GetBasket("TWSEIdx");
            </code>
            </example>
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.Basket._basketID">
            <summary>
            Basket的系統代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.Basket._basketDescription">
            <summary>
            Basket的說明
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.Basket._isEditing">
            <summary>
            是否在編輯模式
            </summary>
            <remarks>
            自動交易運算應該檢查這個flag，如果在編輯模式下，不進行相關的運算處理!!
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.Basket._basketLastMarketValue">
            <summary>
            Basket昨收市值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.Basket._basketLastNAV">
            <summary>
            Basket昨收NAV
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.Basket._baseCurrency">
            <summary>
            基準幣別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.Basket._baseCode">
            <summary>
            基準商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.Basket._baseCommodity">
            <summary>
            基準商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.Basket._baseQuote">
            <summary>
            基準商品的報價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.Basket._units">
            <summary>
            單位數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.Basket._isSystemBasket">
            <summary>
            是否為系統Basket？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.Basket._dataTime">
            <summary>
            資料時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.Basket._basketData">
            <summary>
            Basket的成份資料
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Baskets.Basket.PropertyChanged">
            <summary>
            屬性改變事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.Basket.BasketID">
            <summary>
            Basket代碼
            </summary>
            <remarks>
            在同一個<see cref="T:CapitalPipe.LiteTrading.Baskets.BasketManager"/>裡面的<see cref="T:CapitalPipe.LiteTrading.Baskets.Basket"/>的代碼不得重覆，可以透過這個代碼向BasketManager取得這個Basket物件。
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.Basket.BasketDescription">
            <summary>
            Basket的說明
            </summary>
            <remarks>Basket的文字說明，非必要欄位。</remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.Basket.DataTime">
            <summary>
            資料時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.Basket.BasketInformation">
            <summary>
            Basket資訊(BasketID+Basket說明)
            </summary>
            <remarks>回傳Basket代碼再加上(Basket說明)，方便UI顯示時使用。</remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.Basket.BaseCurrency">
            <summary>
            基準幣別
            </summary>
            <remarks>Basket的基準幣別，當Basket成份有跨越多種幣別時，這個欄位可以用來指定要以哪一個幣別做為計算的基準。</remarks>
        </member>
        <!-- 已忽略成員 "P:CapitalPipe.LiteTrading.Baskets.Basket.BasketLastMarketValue" 中格式錯誤的 XML 註解 -->
        <member name="P:CapitalPipe.LiteTrading.Baskets.Basket.BasketLastCloseNAV">
            <summary>
            昨收市值
            </summary>
            <remarks>這個欄位主要是針對ETF產生的擴充，可以用來表示ETF的昨日結算單位淨值</remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.Basket.Units">
            <summary>
            單位數
            </summary>
            <remarks>這個欄位主要是針對ETF產生的擴充，可以用來表示每個實物申購贖回單位相對應的ETF數量</remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.Basket.BasketData">
            <summary>
            Basket資料
            </summary>
            <remarks>回傳Basket的成份明細</remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.Basket.IsSystemBasket">
            <summary>
            是否為系統Basket
            </summary>
            <remarks>
            是，不可編輯修改。但這非強制性，僅是讓RTS系統內建的UI擋住編輯功能，開發人員仍可透過程式修改Baket裡面的資料。
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.Basket.EnableEdit">
            <summary>
            是否可編輯(系統Basket不可修改)
            </summary>
            <remarks>
            這個屬性是給UI的Binding時使用，基本上是IsSystemBasket的not運算
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.Basket.UnderlyingCode">
            <summary>
            基準商品
            </summary>
            <remarks>
            這個欄位非必要，主要是當Basket為指數成分、指數套利Basket或是ETF PCF時，可以很方便知道標的商品為何使用。
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.Basket.UnderlyingName">
            <summary>
            標的商品名稱
            </summary>
            <remarks>顯示標的商品的中文名稱。當未設定標的商品時，這個值會是NA值("--")</remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.Basket.UnderlyingQuote">
            <summary>
            標的商品的報價物件
            </summary>
            <remarks>若未設定檔的商品，這個值會是null。這個欄位是用來快取Quote物件，減少需要再向QuoteManager取得的運算時間。Basket物件本身不會Listen報價事件。</remarks>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.Basket.#ctor(System.String,System.Boolean)">
            <summary>
            建構式，建立一個Basket物件
            </summary>
            <param name="basketID">Basket的代碼</param>
            <param name="bSysBasket">是否為系統Basket。True:是；False:否</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.Basket.CloneBasket">
            <summary>
            Clone Bakset物件
            </summary>
            <remarks>
            Clone方式是Deep Copy非Shallow Copy。裡面的物件會被duplicate一份，對被clone出物件的操作不影響來源物件。
            </remarks>
            <returns>複製出的Basket物件</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.Basket.AssignValues(CapitalPipe.LiteTrading.Baskets.Basket)">
            <summary>
            套用Basket內容
            </summary>
            <remarks>
            將目前的Basket資料設成與傳入的Basket物件一致
            </remarks>
            <param name="bk">要抄寫的Basket物件</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.Basket.Finalize">
            <summary>
            解構式
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.Basket.HasBasketEntry(System.String)">
            <summary>
            Basket中是否存在這個商品
            </summary>
            <param name="code">商品代碼</param>
            <returns>
            <para>True:目前的Basket中含有這個商品。</para>
            False:目前的Basket中不含這個商品。
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.Basket.AdjustWeights">
            <summary>
            調整權重(將所有權重normalize)
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.Basket.AddBasketEntry(CapitalPipe.LiteTrading.Baskets.BasketEntry)">
            <summary>
            新增一個Basket成份資料
            </summary>
            <param name="bkEntry">Basket成份資料</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.Basket.RemoveBasketEntry(System.String)">
            <summary>
            移除某個商品
            </summary>
            <param name="code">商品代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.Basket.GetBasketEntry(System.String)">
            <summary>
            
            </summary>
            <param name="strCode"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.Basket.FirePropertyChangedEvent(System.String)">
            <summary>
            發送屬性改變事件
            </summary>
            <param name="fieldID">屬性欄位名稱</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.Basket.ParseFromXMLNode(System.Xml.Linq.XElement,System.Boolean)">
            <summary>
            從XML資料節點解出Basket物件
            </summary>
            <param name="xElem">儲存Basket資料的XML節點</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.Basket.ParseBasketDataFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            從XML節點把資料Parse出來
            </summary>
            <param name="xElem">儲存Basket資料的XML節點</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.Basket.WriteDataToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            將資料寫到XML節點
            </summary>
            <param name="xElem">要寫入的XML節點</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.Basket.ToXMLNode">
            <summary>
            轉成XML節點
            </summary>
            <returns>XML節點物件</returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Baskets.BasketCalculationType">
            <summary>
            Basket計算方式
            </summary>
            <remarks>
            用來計算Basket內各成份股應該有的單位數時，要使用的演算法。這個Enum是設計給RelativeTrading使用。目前RelativeTrading要做重新設計，建議先不要使用這個Enum。
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketCalculationType.WeightUseMarketValue">
            <summary>
            權重法
            </summary>
            <remarks>
            必須要有參考的Underlying。計算每單位Underlying的現在的市場市值，並依權重計算各成份股應佔有的市值，除以各成份股的現在股價，推算出各成份股應該有的單位數。
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketCalculationType.WeightUseFixedAmount">
            <summary>
            使用固定金額法
            </summary>
            <remarks>
            使用固定金額，並依成份股的權重分配金額，除以各成份股的現在股價，推算出各成份股應該有的單位數。
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketCalculationType.Unit">
            <summary>
            單位法
            </summary>
            <remarks>直接使用成份的股數計算</remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketCalculationType.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Baskets.BasketDerivative">
            <summary>
            由Basket產生的衍生物
            </summary>
            <remarks>
            目前這個物件定義不完全，請勿使用!!
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketDerivative._derivativeLastValue">
            <summary>
            衍生物報價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketDerivative._derivativeBidValue">
            <summary>
            衍生物買價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketDerivative._derivativeAskValue">
            <summary>
            衍生物賣價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketDerivative._derivativeID">
            <summary>
            衍生物的ID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketDerivative._derivativeType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketDerivative.BasketBidValue">
            <summary>
            衍性物的買價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketDerivative.BasketAskValue">
            <summary>
            衍生物的賣價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketDerivative.BasketLastValue">
            <summary>
            衍生物的最後成交價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketDerivative.DerivativeID">
            <summary>
            衍生物代碼
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Baskets.BasketDerivateType">
            <summary>
            Basket衍生物類型
            </summary>
            <remarks>
            目前這個物件定義不完全，請勿使用!!
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketDerivateType.Index">
            <summary>
            指數值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketDerivateType.ETFNetValue">
            <summary>
            ETF淨值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketDerivateType.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Baskets.BasketDerivativeManager">
            <summary>
            Basket衍生物管理員
            </summary>
            <remarks>
            目前這個物件定義不完全，請勿使用!!
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketDerivativeManager._allDerivatives">
            <summary>
            所有的Basket衍生物
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketDerivativeManager.AllDerivatives">
            <summary>
            所有的Basket衍生物
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketDerivativeManager.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketDerivativeManager.AddBasketDerivative(CapitalPipe.LiteTrading.Baskets.BasketDerivative)">
            <summary>
            加入Basket衍生物
            </summary>
            <param name="derivative">Basket衍生物</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketDerivativeManager.RemoveBasketDerivative(CapitalPipe.LiteTrading.Baskets.BasketDerivative)">
            <summary>
            是否要讓其他使用到這個BasketDerivative的物件有取消事件的機會？
            </summary>
            <param name="derivative">Basket衍生物</param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Baskets.BasketEntry">
            <summary>
            Basket的基本元素
            </summary>
            <remarks>
            Basket的基本元素，提供以下欄位：
            <list type="number">
            <item><description>Code:商品代碼</description></item>
            <item><description>Weight:權重</description></item>
            <item><description>Shares:股數</description></item>
            <item><description>ReferencePrice:參考價，若有需要特別指定參考價基準時，可以使用這個欄位。</description></item>
            <item><description>BaseQuote:報價物件，當有需要存取Basket成份股的報價物件時，可以使用這個欄位快速取得。</description></item>
            <item><description>Shares:股數</description></item>
            </list>
            BasketEntry有實做INotifyPropertyChanged介面，可以透過其PropertyChanged欄位來訂閱屬性改變事件。
            </remarks> 
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketEntry._code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketEntry._baseCommodity">
            <summary>
            基準商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketEntry._baseQuote">
            <summary>
            基準商品的報價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketEntry._weight">
            <summary>
            權重
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketEntry._shares">
            <summary>
            單位數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketEntry._referencePrice">
            <summary>
            參考價格
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketEntry._comment">
            <summary>
            附註
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketEntry._bAmended">
            <summary>
            是否有修改過？
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Baskets.BasketEntry.PropertyChanged">
            <summary>
            屬性改變事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketEntry.Code">
            <summary>
            商品代碼
            </summary>
            <remarks>
            這個商品代碼可以是系統連續月份碼或是正常的商品代碼，當設定時會自動解析這個代碼。
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketEntry.BaseQuote">
            <summary>
            基準商品的報價
            </summary>
            <remarks>這個物件是方便有取得報價物件需求時使用，本身對BasketEntry本身沒有實際作用。</remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketEntry.Weight">
            <summary>
            權重
            </summary>
            <remarks>這個成份股佔Basket的成份，1表示100%，0.05表示5%。</remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketEntry.WeightInPercentage">
            <summary>
            以百分比方式的權重，方便做UI Binding時使用
            </summary>
            <remarks>背後的資料還Weight，這個屬性只是在get時將Weight乘100。並在set時將設定值除100後賦值給Weight。</remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketEntry.Shares">
            <summary>
            股數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketEntry.BaseCommodity">
            <summary>
            基準商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketEntry.BaseCommodityCode">
            <summary>
            基準商品代碼
            </summary>
            <remarks>
            Code可以使用系統商品簡碼(連續月份碼)，這個值會回傳目前對應商品的真正的代碼
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketEntry.BaseCommodityName">
            <summary>
            基準商品名稱
            </summary>
            <remarks>傳回目前對應商品的名稱</remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketEntry.Comment">
            <summary>
            註解
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketEntry.ReferencePrice">
            <summary>
            該商品的參考價
            </summary>
            <remarks>
            因ETF的調整，因ETF商品的結算時間不一定等於交易所對商品的結算時間，故直接使用行情系統的前日結算價計算可能會發生問題。此時可以用這個調整值來取代報價物件的昨日結算價。
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketEntry.IsAmended">
            <summary>
            是否已修改？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketEntry.Self">
            <summary>
            傳回這個BasketEntry物件的參考，方便Binding使用
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketEntry.#ctor(System.String,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="secID">證券代碼</param>
            <param name="weight">權重</param>
            <param name="shares">股數</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketEntry.CloneBasketEntry">
            <summary>
            Clone自已
            </summary>
            <returns>
            傳回一個複製的結果
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketEntry.FirePropertyChangedEvent(System.String)">
            <summary>
            發佈屬性改變事件
            </summary>
            <param name="fieldID"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Baskets.BasketManager">
            <summary>
            Basket管理員
            </summary>
            <remarks>
            Basket管理員，負責管理一個key(string)-value(Basket)的map。key為Basket的ID，字串型式，value是Basket資料結構，用來表示一個Basket(股票組合)<para/>
            每個Basket會有一個字串表示的代碼，用來識別各組Basket
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketManager._dirty">
            <summary>
            資料是否需要儲存
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketManager._baskets">
            <summary>
            所有的Basket
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.BasketManager._defaultManager">
            <summary>
            預設的Basket管理員
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketManager.Item(System.String)">
            <summary>
            Indexer：取得該BasketID的Basket
            如果沒有就New一個新的
            </summary>
            <param name="basketID">要取得的Basket代碼</param>
            <returns>
            當basketID存在時，會回傳對應到該basketID的Basket物件。找不到則會回傳null值。
            </returns>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketManager.AllBasketIDs">
            <summary>
            取得所有BasketID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketManager.AllBaskets">
            <summary>
            取得所有的Basket
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketManager.Dirty">
            <summary>
            資料是否需要儲存
            </summary>
            <remarks>
            當被Mark成dirty後，會定期自動儲存。用來減少每次Basket資料變動都要馬上存檔時，可能會產生的效能問題。
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketManager.DefaultManager">
            <summary>
            預設的BasketManager
            </summary>
            <remarks>
            絕大多數的情況下，要存取Basket物件，應該要透過DefaultManager進行。
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketManager.DefaultBasketXMLSettingFile">
            <summary>
            預設的Basket資料檔
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.BasketManager.SystemBasketXMLSettingFile">
            <summary>
            系統Basket資料檔
            </summary>
            <remarks>
            系統Basket的資料會存在這個檔案裡面。
            </remarks>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketManager.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketManager.AddBasket(CapitalPipe.LiteTrading.Baskets.Basket)">
            <summary>
            新增Basket
            </summary>
            <remarks>
            <para>如果該BasketID已經存在，則將該BasketID的Basket設成新的Basket</para>
            新增會引發SystemConfiguration事件，事件的Config會是"BASKET"。
            </remarks>
            <param name="basket">basket物件</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketManager.GetBasket(System.String)">
            <summary>
            取得Basket，不存在回傳null
            </summary>
            <param name="bkID">Basket物件的代碼</param>
            <returns>
            當bkID存在時，會回傳該Basket物件。否則會回傳null值。
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketManager.RemoveBasket(System.String)">
            <summary>
            移除Basket
            </summary>
            <remarks>
            移除會引發SystemConfiguration事件，事件的Config會是"BASKET"。
            </remarks>
            <param name="bkID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketManager.RenameBasket(System.String,System.String)">
            <summary>
            重新命名
            </summary>
            <remarks>
            重新命名會引發SystemConfiguration事件，事件的Config會是"BASKET"。
            </remarks>
            <param name="oriID">原本的代碼</param>
            <param name="newID">新的代碼</param>
            <returns>
            <list type="bullet">
            <item><description>-1:新名稱已存在</description></item>
            <item><description>0:舊名稱不存在</description></item>
            <item><description>1:改名成功</description></item>
            </list>
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketManager.HasBasket(System.String)">
            <summary>
            Basket是否存在
            </summary>
            <param name="basketID">basket代碼</param>
            <returns>
            <para>true:存在這個basketID的Basket物件</para>
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketManager.LoadFromXML">
            <summary>
            自XML檔案載入
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketManager.LoadSystemBasketsFromXML">
            <summary>
            自XML檔案載入系統Basket檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketManager.LoadFromXML(System.String,System.Boolean)">
            <summary>
            自XML檔案載入
            </summary>
            <param name="filename">xml檔案名稱</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketManager.SaveToXML">
            <summary>
            儲存到XML檔案
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.BasketManager.SaveToXML(System.String)">
            <summary>
            儲存到XML檔案
            </summary>
            <param name="filename">要存檔的檔案名稱</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo">
            <summary>
            ETF商品定義
            </summary>
            <remarks>
            跟Basket定義相較之下，多了匯率、現金及外匯的定義
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo._etfID">
            <summary>
            ETF的ID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo._code">
            <summary>
            對應到的ETF商品代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo._settleRates">
            <summary>
            前日結算匯率資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo._forwards">
            <summary>
            Forward避險資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo._assetWeights">
            <summary>
            資產比重
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo.ETFID">
            <summary>
            ETF名細的代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo.Code">
            <summary>
            對應到的ETF商品代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo.SettleRates">
            <summary>
            前日結算匯率資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo.ForwardContracts">
            <summary>
            遠期外匯合約資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo.AssetWeights">
            <summary>
            資產比重資訊
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="etfID">ETF名細的代碼</param>
            <param name="code">ETF商品的代碼</param>
            <param name="description">ETF明細資料的說明</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo.ToXMLNode">
            <summary>
            轉成XML節點
            </summary>
            <returns>
            XElement格式的ETFDetailInfo資料。
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo.ParseETFDataFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            從XML節點中解出資料
            </summary>
            <param name="xElem">
            儲存資料的XML節點
            </param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo.CloneETFInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo.AssignETFInfo(CapitalPipe.LiteTrading.Baskets.ETFDetailInfo)">
            <summary>
            
            </summary>
            <param name="etfInfo"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo.ParseFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            從XML節點中解出資料
            </summary>
            <param name="xElem">儲存資料的XML節點</param>
            <returns>
            如果解析成功，會回傳一個以XML資料產牲的ETFDetailInfo物件。若解析過程出問題，則會回傳null值。
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo.ParseFromSingleETFDefinationFile(System.String)">
            <summary>
            從單一ETF的XML定義檔中解出資料
            </summary>
            <remarks>
            這圈方法是為了讓每檔ETF淨值計算時，可以對應到各自的檔案時使用。這個作法的好處是單一ETF的異動，只需重新載入其對應檔案。不用全部的ETF資料都要重新載入。
            </remarks>
            <param name="filename">從單一ETF的XML定義檔</param>
            <returns>如果解析成功，會回傳一個以XML資料產牲的ETFDetailInfo物件。若解析過程出問題，則會回傳null值。</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.ETFDetailInfo.IsValidSingleETFDefinationFile(System.String,System.String@)">
            <summary>
            是否為有效的單一ETF的XML定義檔
            </summary>
            <param name="filename">檔案名稱</param>
            <param name="retMessage">當不是單一ETF的XML定義檔時，這個值會回傳不是的原因。</param>
            <returns>
            <para>true:是有效的單一ETF的XML定義檔</para>
            false:不是有效的單一ETF的XML定義檔
            </returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Baskets.SettleRateInfo">
            <summary>
            由結算基準貨幣綜兌換某幣別(通常是美元)的匯率資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.SettleRateInfo._baseCurrency">
            <summary>
            結算基準貨幣
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.SettleRateInfo._rate">
            <summary>
            基準匯率(相對美元)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.SettleRateInfo.BaseCurrency">
            <summary>
            結算基準貨幣
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.SettleRateInfo.SettleRate">
            <summary>
            結算匯率
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.SettleRateInfo.#ctor(CapitalPipe.LiteTrading.Commodities.CurrencyID)">
            <summary>
            建構式，產生一個SettleRateInfo物件
            </summary>
            <param name="curr">基準幣別</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.SettleRateInfo.CloneSettleRateInfo">
            <summary>
            Duplicate一份相同資料的物件
            </summary>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Baskets.AssetWeightInfo">
            <summary>
            資產比重資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.AssetWeightInfo._baseCurrency">
            <summary>
            資產的基準幣別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.AssetWeightInfo._weights">
            <summary>
            資產比重
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.AssetWeightInfo.BaseCurrency">
            <summary>
            資產的基準幣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.AssetWeightInfo.AssetWeights">
            <summary>
            資產比重
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.AssetWeightInfo.#ctor(CapitalPipe.LiteTrading.Commodities.CurrencyID)">
            <summary>
            建構式，產生一個AssetWeightInfo物件
            </summary>
            <param name="curr">資產幣別</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.AssetWeightInfo.CloneAssetWeightInfo">
            <summary>
            複製資產權重物件
            </summary>
            <returns>
            被複製出的物件
            </returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Baskets.ForwardContractInfo">
            <summary>
            遠期外匯合約資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.ForwardContractInfo._buyCurrency">
            <summary>
            買進貨幣
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.ForwardContractInfo._sellCurrency">
            <summary>
            賣出貨幣
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.ForwardContractInfo._amount">
            <summary>
            交易金額
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.ForwardContractInfo.BuyCurrency">
            <summary>
            買進貨幣
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.ForwardContractInfo.SellCurrency">
            <summary>
            賣出貨幣
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.ForwardContractInfo.Amount">
            <summary>
            交易金額
            </summary>
            <remarks>
            交易金額是以買進幣別計價
            </remarks>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.ForwardContractInfo.#ctor(CapitalPipe.LiteTrading.Commodities.CurrencyID,CapitalPipe.LiteTrading.Commodities.CurrencyID)">
            <summary>
            建構式，產生一個ForwardContractInfo物件
            </summary>
            <param name="buyCurr">買進貨幣</param>
            <param name="sellCurr">賣出貨幣</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.ForwardContractInfo.CloneForwardInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Baskets.ETFDetailInfoManager">
            <summary>
            ETF明細資料管理員
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.ETFDetailInfoManager._etfDetails">
            <summary>
            ETF明細資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Baskets.ETFDetailInfoManager._defaultManager">
            <summary>
            ETF明細資料管理員
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.ETFDetailInfoManager.AllETFs">
            <summary>
            所有的ETF明細資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.ETFDetailInfoManager.DefaultManager">
            <summary>
            預設的ETF明細資料管理員
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Baskets.ETFDetailInfoManager.DefaultSettingFile">
            <summary>
            預設的設定檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.ETFDetailInfoManager.GetETFDetailInfo(System.String)">
            <summary>
            取得ETF明細資料
            </summary>
            <param name="etfID">ETF明細資料的代碼，注意：非ETF的代碼</param>
            <returns>
            有資料：ETF明細資料<para/>
            沒資料：null值
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Baskets.ETFDetailInfoManager.LoadFromFile">
            <summary>
            自檔案載入
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.AdvanceSession">
            <summary>
            進階Session定義
            </summary>
            <remarks>
            進階Session定義，叫"進階Session"用來跟先前的"Session"實做區隔，用來表示某個交易日中的某個時段。交易所可能會針對不同商品定義不同的交易時段，如：上午盤、下午盤、盤後交易…。這個物件是用來代表某個時段。<para/>
            這是一個較具彈性的完整Session定義，用彌補原本Session定義的不足。
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceSession._sessionSeq">
            <summary>
            Session序號，從1開始編號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceSession._weekDayBegin">
            <summary>
            這個Session的起始weekday
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceSession._weekDayEnd">
            <summary>
            這個Session的結束weekday
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceSession._sessionBegin">
            <summary>
            session起始時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceSession._sessionEnd">
            <summary>
            session結束時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceSession._beforeSession">
            <summary>
            在session前xx秒時，應該計入這個session
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceSession._afterSession">
            <summary>
            在session後xx秒時，才不計入這個session
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceSession._nominalSessionBegin">
            <summary>
            Session名義上的起點
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceSession._nominalSessionEnd">
            <summary>
            Session名義上的結束點
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceSession._realSessionBegin">
            <summary>
            session的真實起點
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceSession._realSessionEnd">
            <summary>
            session的真實終點
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceSession._sessionType">
            <summary>
            時段類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceSession._sessionFlag">
            <summary>
            時段Flag
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceSession.SecondsPerDay">
            <summary>
            一天的秒數
            </summary>
            <value>86400.0</value>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceSession.SecondsPerMinute">
            <summary>
            一分鐘的秒數
            </summary>
            <value>60.0</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceSession.SessionSequence">
            <summary>
            這個session的序號
            </summary>
            <remarks>
            從1開始，表示在一個完整交易日中的第xx個時段。
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceSession.WeekDayBegin">
            <summary>
            起始的weekday
            </summary>
            <value>0表示星期日、1表示星期一…6表示星期。若需要處理跨週時，要取mod值。-1表示上週六，7表示次週的週日。</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceSession.WeekDayEnd">
            <summary>
            結束的weekday
            </summary>
            <value>0表示星期日、1表示星期一…6表示星期。若需要處理跨週時，要取mod值。-1表示上週六，7表示次週的週日。</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceSession.SessionBegin">
            <summary>
            Session起始時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceSession.SessionEnd">
            <summary>
            Session結束時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceSession.BeforeSession">
            <summary>
            Session開始前XX秒內，列入計算
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceSession.AfterSession">
            <summary>
            Session結束後xx秒內，列入計算
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceSession.RealBeginTimeValue">
            <summary>
            以double表示的session起時時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceSession.RealEndTimeValue">
            <summary>
            以double表示的Session結束時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceSession.SessionType">
            <summary>
            交易時段的類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceSession.SessionFlag">
            <summary>
            時段的Flag
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceSession.#ctor(System.Int16,System.Int16,System.Int16,System.TimeSpan,System.Int16,System.TimeSpan,System.Int16,CapitalPipe.LiteTrading.Commodities.TradingSessionType,System.String)">
            <summary>
             建構式，產生一個AdvanceSession物件
            </summary>
            <param name="seq">這個Session的序號</param>
            <param name="weekBegin">起始時間的Weekday</param>
            <param name="beforeSession">Session名義上的開始時間前xx秒的資料要算這個Session</param>
            <param name="begin">Session名義上的開始時間</param>
            <param name="weekEnd">結束時間的Weekday</param>
            <param name="end">Session名義上的結束時間</param>
            <param name="afterSession">結束時間後xx秒內的資料仍要算進此Session</param>
        </member>
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.Commodities.AdvanceSession.CheckAndUpdate" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceSession.ConvertTimeValueToTicks(System.DateTime)">
            <summary>
            將DateTime轉成AdvanceSession使用的Tick值
            </summary>
            <returns>
            轉換後的Tick值
            </returns>
        </member>
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.Commodities.AdvanceSession.ConvertTimeValueToTicks(System.DateTime,System.Int32)" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceSession.InSession(System.DateTime)">
            <summary>
            時間點是否在這個session內
            </summary>
            <remarks>
            注意：如果有GMT調整，要先完成調整再call這個方法
            </remarks>
            <param name="dt">時間值</param>
            <returns>
            true:在此時段內<para/>
            false:不在此時段內
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceSession.InSession(System.Double)">
            <summary>
            檢查這個時間值是否在session裡面
            </summary>
            <param name="timeValue">以double表示的時間Tick值</param>
            <returns>
            true:在此時段內<para/>
            false:不在此時段內
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceSession.InSessionBegin(System.DateTime)">
            <summary>
            是否在Session的起始時間
            </summary>
            <remarks>
            起始時間指SessionBegin前BeforeSession秒數內的時間<para/>
            注意：如果有GMT調整，要先完成調整再call這個方法
            <example>
            <code>
            DateTime dtEnd = dtStart.AddSeconds(totalSeconds);
            if (ss.InSessionBegin(time))
            {
                retSS.SetSessionPeriod(dtStart, dtEnd);
                return retSS;
            }
            </code>
            </example>
            </remarks>
            <param name="timeValue">時間值</param>
            <returns>
            true:在起始時間內<para/>
            false:不在起始時間內
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceSession.InSessionBegin(System.Double)">
            <summary>
            是否在Session的起始時間
            </summary>
            <remarks>
            起始時間指SessionBegin前BeforeSession秒數內的時間
            </remarks>
            <param name="timeValue">以double表示的時間Tick值</param>
            <returns>
            true:在起始時間內<para/>
            false:不在起始時間內
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceSession.InSessionEnd(System.DateTime)">
            <summary>
            是否在Session的結束時間
            </summary>
            <remarks>
            結束時間指SessionEnd起到AfterSession秒數內的時間<para/>
            注意：如果有GMT調整，要先完成調整再call這個方法/// </remarks>
            <param name="timeValue">時間</param>
            <returns>
            true:在結束時間內<para/>
            false:不在結束時間內
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceSession.InSessionEnd(System.Double)">
            <summary>
            是否在Session的結束時間
            </summary>
            <remarks>
            結束時間指SessionEnd起到AfterSession秒數內的時間
            </remarks>
            <param name="timeValue">以double表示的時間Tick值</param>
            <returns>
            true:在結束時間內<para/>
            false:不在結束時間內
            </returns>
        </member>
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.Commodities.AdvanceSession.GetDistance(System.DateTime)" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceSession.GetDistance(System.DateTime,System.Int32)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceSession.FindNearestSessionDay(CapitalPipe.LiteTrading.Commodities.AdvanceSession,System.DateTime,System.Boolean)">
            <summary>
            找最接近且符合這個session的Begin值的日期
            </summary>
            <param name="dtBegin"></param>
            <param name="bForward"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriod">
            <summary>
            進階TradingPeriod
            </summary>
            <remarks>
            進階的TradingPeriod，叫"進階TradingPeriod"用來跟先前的"DailyTradingPeriod"實做區隔，用來表示某個商品的所有完整交易時段。
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriod._periodID">
            <summary>
            TradingPeriod的代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriod._gmtOffset">
            <summary>
            GMT的值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriod._sessions">
            <summary>
            這個Period的所有Session
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriod.PeriodID">
            <summary>
            這個TradingPeriod的代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriod.GMTOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriod.Sessions">
            <summary>
            所有的Session資料
            </summary>
            <remarks>
            判斷換日要用Session的SequenceID是否改變來判斷!!
            </remarks>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriod.#ctor(System.String,System.Int16)">
            <summary>
            建構式，產生一個AdvanceTradingPeriod物件
            </summary>
            <param name="periodID">TradingPeriod的代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriod.ApplyAdjustments(CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriodManager.AdjustmentEntry)">
            <summary>
            
            </summary>
            <param name="adjEntry"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriod.AddSession(CapitalPipe.LiteTrading.Commodities.AdvanceSession)">
            <summary>
            加入Session
            </summary>
            <param name="newSession">要新加入的Session</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriod.GetSession(System.DateTime)">
            <summary>
            取得session
            </summary>
            <param name="dt">要檢查的時間點</param>
            <returns>
            如果有找到session，會回傳該session。否則會回傳null。
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriod.GetNearestSession(System.DateTime)">
            <summary>
            找出最接近的Session(>=傳入時間)
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriod.GetNearestNormalSession(System.DateTime)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriodManager">
            <summary>
            進階交易時段管理員
            </summary>
            <remarks>
            使用這個物件來取得進階交易時段(AdvanceTradingPeriod/AdvanceSession)資訊
            <example>
            以下程式碼可以取得代碼為"TWFUT"的AdvanceTradingPeriod物件。
            <code>
            AdvanceTradingPeriod period = AdvanceTradingPeriodManager.DefaultManager.GetTradingPeriod("TWFUT");
            </code>
            </example>
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriodManager._allPeriods">
            <summary>
            key:Period代碼，value:AdvanceTradingPeriod物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriodManager._defaultManager">
            <summary>
            預設的Manager
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriodManager.SettingFilename">
            <summary>
            設定檔的檔案名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriodManager.AdjustmentSettingFilename">
            <summary>
            調整設定檔案名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriodManager.DefaultManager">
            <summary>
            預設的TradingPeriod管理員
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriodManager.DefaultSettingFile">
            <summary>
            預設的設定檔
            </summary>
            <remarks>
            檔案預設是放在Data目錄下，檔名是"advanceperiods.csv"
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriodManager.DefaultAdjustmentSettingFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriodManager.GetTradingPeriod(System.String)">
            <summary>
            取得進階交易時段資料
            </summary>
            <param name="periodID">進階交易時段代碼</param>
            <returns>
            <para>若存在periodID的進階交易時段資料，回傳該物件。</para>
            若不存在，回傳null值。
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriodManager.LoadFromFile(System.String)">
            <summary>
            從設定檔載入
            </summary>
            <param name="filename">檔案名稱</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriodManager.LoadAdjustments(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo">
            <summary>
            思考，若要更換的商品在中午才掛出，要如何處理？
            -------------------------------------------------------
            何時換月？有一個背景thread在處理
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo._currBaseCmd">
            <summary>
            目前的基準商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo._cfcName">
            <summary>
            CFC商品名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo._cfcNameEng">
            <summary>
            CFC商品名稱(英文)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.CurrentCommodity">
            <summary>
            目前的商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.ExchangeCode">
            <summary>
            交易所內使用的商品代碼
            例如：2330/0050/TXFA3/TXO07700A3
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.Name">
            <summary>
            商品名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.NameEnglish">
            <summary>
            商品名稱(英文)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.Type">
            <summary>
            商品類型<para/>
            <list type="bullet">
            <item><description>Stock:股票</description></item>
            <item><description>Warrant:標準BS權證</description></item>
            <item><description>Convertible:可轉債</description></item>
            <item><description>ETF:Exchange Traded Fund</description></item>
            <item><description>Futures:期貨</description></item>
            <item><description>Call:標準BS買權(Call Option)</description></item>
            <item><description>Put:標準BS賣權(Put Option)</description></item>
            <item><description>FuturesSpread:期貨價差(Spread)</description></item>
            <item><description>OptionCombo:選擇權複式商品</description></item>
            <item><description>Index:指數</description></item>
            <item><description>Cash:現金</description></item>
            </list>
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.ContractID">
            <summary>
            契約代碼<para/>
            TXF,MXF,TXO,...<para/>
            股票、權證…等商品沒有契約代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.Exchange">
            <summary>
            交易所<para/>
            TAIFEX,TWSE,...
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.Strike">
            <summary>
            履約價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.Month">
            <summary>
            交割月份<para/>
            YYYYMM格式，例如:201209<para/>
            若無交割月份：0
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.WeekSequence">
            <summary>
            週順序<para/>
            1/2/3/4/5for週到期商品<para/>
            0for非週到期的商品
            </summary>
        </member>
        <!-- 已忽略成員 "P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.SettleKeyString" 中格式錯誤的 XML 註解 -->
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.SettleKey">
            <summary>
            月+週的key值(整數)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.SeriesOrderedByActivity">
            <summary>
            依流動性的排序(目前不適用)<para/>
            同樣商品序列(TXO,TEO,...)的選擇權在同一到期日的商品，此欄位值會一樣
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.SeriesOrderedBySequence">
            <summary>
            依到期順序的排序<para/>
            同樣商品序列(TXO,TEO,...)的選擇權在同一到期日的商品，此欄位值會一樣
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.LastTrade">
            <summary>
            最後交易日
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.SettleDate">
            <summary>
            結算日：<para/>
                股票 => DateTime.MaxValue<para/>
                期權/CB/權證 => 到期日
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.TickType">
            <summary>
            Tick類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.Factor">
            <summary>
            契約乘數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.RoundLots">
            <summary>
            整股單位
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.SettlementID">
            <summary>
            結算行事曆代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.SessionID">
            <summary>
            交易時段代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.RefrencePrice">
            <summary>
            參考價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.UpLimit">
            <summary>
            漲停價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.DownLimit">
            <summary>
            跌停價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.CalendarID">
            <summary>
            行事曆代碼
            行事曆 ==> 假日，每個行事曆都有自已的代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.Tag">
            <summary>
            額外資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.ExtraInfo">
            <summary>
            額外的資訊(附註)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.Currency">
            <summary>
            計價幣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.GroupFactor">
            <summary>
            
            </summary>
        </member>
        <!-- 已忽略成員 "P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.OrderVolumeLimit" 中格式錯誤的 XML 註解 -->
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.BaseCommodity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.DefaultSettingFile">
            <summary>
            預設的連續月設定檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CFCCommodityInfo.SetCurrentCommodity(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry">
            <summary>
            連續月的規則
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry._code">
            <summary>
            連續商品代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry._name">
            <summary>
            連續商品名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry._nameEng">
            <summary>
            連續商品英文名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry._timeZoneID">
            <summary>
            這個CFCRule的時區
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry._timeZoneInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry._criteria">
            <summary>
            換月條件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry._changeTime">
            <summary>
            換月時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry._dayOffset">
            <summary>
            日期調整
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry._monthUsing">
            <summary>
            0：最近月；1：次月
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry._exchange">
            <summary>
            交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry._contractID">
            <summary>
            契約代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry._isChanged">
            <summary>
            是否已執行換月？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry.ChangeRule">
            <summary>
            換月條件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry.Code">
            <summary>
            連續商品代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry.Name">
            <summary>
            商品名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry.NameEnglish">
            <summary>
            英文名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry.Exchange">
            <summary>
            交易所
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry.ContractID">
            <summary>
            契約代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry.ChangeTime">
            <summary>
            換月時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry.DayOffset">
            <summary>
            換月日調整
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry.MonthUsing">
            <summary>
            使用月份
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry.TimeZoneID">
            <summary>
            時區代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry.CFCTimeZoneInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry.IsChanged">
            <summary>
            是否已換月？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry.BaseCFCCommodity">
            <summary>
            基準的CFC商品
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CFCRuleEntry.#ctor(System.String,System.String,System.String,System.String,System.String,CapitalPipe.LiteTrading.Commodities.ChangeCriteriaType,System.TimeSpan,System.Int32,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="exchange"></param>
            <param name="contract"></param>
            <param name="name"></param>
            <param name="nameEng"></param>
            <param name="rule"></param>
            <param name="changeTime"></param>
            <param name="dayOffset"></param>
            <param name="monthOffset"></param>
            <param name="timeZoneID">若無時區調整，請填空白</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.ChangeCriteriaType">
            <summary>
            換月準則類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ChangeCriteriaType.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ChangeCriteriaType.LastTrading">
            <summary>
            最後交易日
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ChangeCriteriaType.Settle">
            <summary>
            結算日
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ChangeCriteriaType.Specified">
            <summary>
            指定日期
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ChangeCriteriaType.MostActive">
            <summary>
            最熱門
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CodeResolver">
            <summary>
            代碼解析器，將一個RTS的商品代碼轉成RTS的系統商品碼
            </summary>
            <remarks>
            "代碼"分為以下三個類型：
            <list type="number">
            <item>
            <description>
            System Code:系統使用的代碼，例如：TXFC3.TAIFEX,2330.TWSE,...
            </description>
            </item>
            <item>
            <description>
            Normalized Code:用來處理會換月的商品，主要是用在期貨上面，關鍵字為@<para/>
            例如：TXF@C1.TAIFEX, EXF@C1.TAIFEX
            </description>
            </item>
            <item>
            <description>
            Friendly Code:實做細節待確認
            </description>
            </item>
            </list>
            無論使用何種代碼，GetCommodity函數都要能正確解析出正確的商品代碼並傳回相對應的商品資訊。目前代碼解析的順序為：(1)System Code, (2)Normalized Code, (3)Friendly Code。
            <example>
            以下代碼示範使用系統連續月碼取得臺灣期貨交易所(TAIFEX)的近月大臺(TXF)期貨商品
            <code>
            string code = CodeResolver.DefaultCodeResolver.GetSystemCode("TXF@C1.TAIFEX");
            </code>
            </example>
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CodeResolver._normalizedCodes">
            <summary>
            Key ==> Regular Code
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CodeResolver._friendlyCodes">
            <summary>
            已解析出的Friendly Code的cache
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CodeResolver._defaultResolver">
            <summary>
            預設的CodeResolver
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CodeResolver.DefaultCodeResolver">
            <summary>
            預設的Code Resolver
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CodeResolver.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CodeResolver.GetSystemCode(System.String)">
            <summary>
            Regular Code Format : 'XXXX'@'CM'.'YYYY'
            Example:TXF@C1.TAIFEX
            </summary>
            <param name="code">商品代碼(任意形式)</param>
            <returns>商品的RTS商品系統碼</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CodeResolver.SolveFriendlyCode(System.String)">
            <summary>
            解析Friendly代碼，目前尚未實做
            </summary>
            <param name="code">商品的Friendly代碼</param>
            <returns>商品的RTS系統商品碼</returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityCollection">
            <summary>
            使用者自訂商品組合管理
            </summary>
            <remarks>
            一個Collection下面有多組List，每個List有自己的名稱。目前用在自選股的管理上面，
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityCollection._collectionID">
            <summary>
            商品組合代碼 ==> GUID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityCollection._collectionDescription">
            <summary>
            商品組合說明
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityCollection._defaultCollection">
            <summary>
            預設的商品組合
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityCollection._allCmdLists">
            <summary>
            key值：商品組合名稱
            value值：商品組合
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityCollection.XMLElement_Collection">
            <summary>
            Collection節點Tag值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityCollection.XMLElement_CommodityList">
            <summary>
            CommodityList節點Tag值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityCollection.XMLElement_CommodityEntry">
            <summary>
            CommodityEntry節點Tag值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityCollection.XMLAttribute_ListID">
            <summary>
            ListID節點Tag值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityCollection.XMLAttribute_Code">
            <summary>
            Code節點Tag值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityCollection.ListIDs">
            <summary>
            所有List的ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityCollection.DefaultSettingFile">
            <summary>
            預設值的設定檔案
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityCollection.DefaultCollection">
            <summary>
            預設的商品組合管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCollection.GetCommodityList(System.String)">
            <summary>
            取得商品組合
            </summary>
            <param name="name"></param>
            <returns>
            傳回商品組合
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCollection.GetAllListNames">
            <summary>
            取得商品組合名稱
            </summary>
            <returns>
            所有的商品組合名稱
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCollection.AddCommodityList(System.String,System.Collections.Generic.List{CapitalPipe.LiteTrading.Commodities.CommodityInfo})">
            <summary>
            增加商品組合
            </summary>
            <param name="name">商品組合代碼</param>
            <param name="collection">商品組合</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCollection.RemoveCommodityList(System.String)">
            <summary>
            移除商品組合
            </summary>
            <param name="name">要被移除商品組合代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCollection.AmendCommodityList(System.String,System.Collections.Generic.List{CapitalPipe.LiteTrading.Commodities.CommodityInfo})">
            <summary>
            修改商品組合
            </summary>
            <param name="name">要被修改商品組合代碼</param>
            <param name="collection">商品組合</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCollection.SaveSettings(System.String)">
            <summary>
            儲存使用者商品組合設定
            </summary>
            <param name="fn">儲存設定</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCollection.LoadSettings(System.String)">
            <summary>
            載入設定
            </summary>
            <param name="fn">設定檔案</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCollection.WriteSettingsToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            將設定寫入節點
            </summary>
            <param name="elem">含設定的節點</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCollection.RestoreFromNode(System.Xml.Linq.XElement)">
            <summary>
            從XML節點回復CommodityCollection
            </summary>
            <param name="node">XML節點</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityCalendar">
            <summary>
            商品行事曆物件
            </summary>
            <remarks>
            某個商品到期行事曆，內容為該商品的所有可交易合約的結算日資訊物件，每個結算日資訊物件包含以下項目：<para/>
            <list type="Number">
            <item>
            <description>
            到期日
            </description>
            </item>
            <item>
            <description>
            最後交易日
            </description>
            </item>
            </list>
            每個Calendar代表某個交易所的某個商品到期資訊。 SettlementInfo的結算key值為(Month*100+ WeekSequence)。例如：20160300(2016年3月)、20160704(2016年7月第4週) <para/>
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityCalendar._calendarID">
            <summary>
            用來辨識Calender的ID，例如：TWFUT, JPFUT,...
            利用這個ID來表示是某個國家/市場的結算行事曆資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityCalendar._dates">
            <summary>
            所有的商品行事曆cache(static變數)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityCalendar.CalendarID">
            <summary>
            日曆代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityCalendar.SettlementInfos">
            <summary>
            所有的結算日資訊
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCalendar.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="calendarID">商品到期行事曆代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCalendar.AddSettlementInfo(CapitalPipe.LiteTrading.Commodities.SettlementInfo)">
            <summary>
            新增一筆到期日資料，若該筆資料的key值已存在，會用新資料蓋掉
            </summary>
            <param name="sInfo">到期結算資訊</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCalendar.GetSettlementInfoByKey(System.String)">
            <summary>
            取得結算資訊
            </summary>
            <param name="key">結算key值</param>
            <returns>回傳結算資訊，注意：若找不到資料，回傳值的Key會是空字串，且Settle/LastTrade的日期都是當天</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCalendar.LoadFromCSVFile(System.String)">
            <summary>
            從CSV檔載入商品行事曆資料
            </summary>
            <param name="filename">商品行事曆資料檔</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityCalendarManager">
            <summary>
            商品行事曆管理員
            </summary>
            <remarks>
            <para>用來管理一群商品行事曆物件的類別</para>
            <para>查詢結算資訊時，必須先知道該商品的結算代碼，及到期日的Key值。結算代碼即為商品資訊的SettlementID值。</para>
            到期日的Key值是YYYYMMWW的型式，其中YYYYMM是到期月份，例如：201301代表2013年1月到期。WW是結算的週序，若是正常商品(非週到期商品)，WW會是0。
            若是週到期商品，週序為第xx週。例如：20130504表示2013年5月第4週到期的商品。
            <example>
            以下範例為取得"TAIFEX"的20130600結算資訊
            <code>
            SettlementInfo ssInfo = CommodityCalendarManager.DefaultManager.GetSettlementInfoByKey("TAIFEX", 20130600);
            </code>  
            </example>
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityCalendarManager._calendars">
            <summary>
            所有的商品Calendar，key:Calendar代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityCalendarManager._defaultManager">
            <summary>
            預設的商品行事曆管理員
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityCalendarManager.DefaultManager">
            <summary>
            預設的商品行事曆管理員。
            若static member _defaultManager是null，在這裡會new一個出來
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCalendarManager.AddSettlementInfo(System.String,CapitalPipe.LiteTrading.Commodities.SettlementInfo)">
            <summary>
            新增一筆結算資訊
            若已存在結算資訊時，會用新的資料覆蓋
            </summary>
            <param name="calendarID">結算日曆代碼</param>
            <param name="sInfo">結算日期資訊</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCalendarManager.GetSettlementInfos(System.String)">
            <summary>
            取得商品結算資訊
            </summary>
            <param name="calendarID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCalendarManager.GetSettlementInfoByKey(System.String,System.String)">
            <summary>
            取得結算資訊
            </summary>
            <param name="calendarID">結算日曆代碼</param>
            <param name="key">結算代碼(YYYYMMWW)</param>
            <returns>回傳結算資訊
            注意：
            SettlementInfo是struct型態，所以不會回傳null
            若找不到資料，回傳值的Key會是空字串，且Settle/LastTrade的日期都是當天</returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityCrossFactor">
            <summary>
            商品交叉換算(開發中，不要使用)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityCrossFactor._factors">
            <summary>
            交叉因子
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCrossFactor.GetFactor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            取得兩個商品的換算因子
            由Cmd2換成Cmd1
            </summary>
            <param name="code1"></param>
            <param name="code2"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCrossFactor.GetFactor(System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="baseCode"></param>
            <param name="_cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCrossFactor.GetFactor(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="baseExchange"></param>
            <param name="baseContract"></param>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCrossFactor.GetFactor(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="baseExchange"></param>
            <param name="baseContract"></param>
            <param name="toExchange"></param>
            <param name="toContract"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityCrossFactor.FactorInitialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityDecomposer">
            <summary>
            解構商品曝險(開發中，不要使用)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityDecomposer.DefaultDecomposer">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityDecomposer.Decompose(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Decimal)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="exposureAmount"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityDecomposer.UnderlyingIsTW50(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="undCmd"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityFilter">
            <summary>
            商品過濾器
            </summary>
            <remarks>
            商品過濾器，這個類別主要用來過濾某些類的商品。例如：只想看某個月份的商品或是只想看某個類型的商品。<para/>
            這個Filter主要是用在委託、成交及部位資料的過濾。
            <example>
            以下範例示範如何使用CommodityFilter，gridOrders有一個CommodityFilter的屬性(型別是CommodityFilter)。
            <code>
                //設定要檢查有效的商品識別元(CommodityIdentifier)
                gridOrders.CommodityFilter.CheckValidCommodityIdentifier = true;
                //設定不要檢查有效的商品群組
                gridOrders.CommodityFilter.CheckValidCommodityGroup = false;
                //請空所有的有效商品識別元
                gridOrders.CommodityFilter.ClearValidCommodityIdentifiers();
                CommodityIdentifier id1 = cbOptMonths.SelectedItem as CommodityIdentifier;
                if (id1 != null)
                {
                    gridOrders.CommodityFilter.AddValidCommodityIdentifier(id1);
                }
                if (_currentSpotCmd != null)
                {
                    //新增一個表示_currentSpotCmd商品的CommodityIdentifier
                    CommodityIdentifier id = new CommodityIdentifier(string.Empty, CommodityIdentifier.IdentifierType.Commodity, string.Empty, _currentSpotCmd.Code, string.Empty, 0, 0);
                    gridOrders.CommodityFilter.AddValidCommodityIdentifier(id);
                }
            </code>
            </example>
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._checkValidExchanges">
            <summary>
            檢查某個商品是否在有效的交易所之中
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._checkExcludeExchanges">
            <summary>
            檢查某個商品是否在要排除的交易所之中
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._checkValidCodes">
            <summary>
            檢查某個商品是否為有效的商品代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._checkExcludeCodes">
            <summary>
            檢查是否為要排除的代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._checkValidMths">
            <summary>
            檢查某個商品是否為有效的月份
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._checkExcludeMths">
            <summary>
            檢查某個商品是否為要排除的月份
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._checkValidContractIDs">
            <summary>
            檢查某個商品是否為有效的契約代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._checkExcludeContractIDs">
            <summary>
            檢查某個商品是否為要排除的契約代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._checkValidExchangeContractCouples">
            <summary>
            檢查某個商品是否為有效的(交易所,契約代碼)組合
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._checkExcludeExchangeContractIDCouples">
            <summary>
            檢查某個商品是否為要排除的(交易所,契約代碼)組合
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._checkValidCommodityIdentifer">
            <summary>
            檢查某個商品是否為有效的CommodityIdentifier之中
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._checkExcludeCommodityIdentifier">
            <summary>
            檢查某個商品是否為要排除的CommodityIdentifier之中
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._checkValidCommodityGroup">
            <summary>
            檢查某個商品是否為在有效的商品群組之中
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._checkExcludeCommodityGroup">
            <summary>
            檢查某個商品是否在要排除的商品群組之中
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._validExchanges">
            <summary>
            有效的交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._excludeExchanges">
            <summary>
            要排除的交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._validCodes">
            <summary>
            有效的商品代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._validMths">
            <summary>
            有效的月份
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._validContractIds">
            <summary>
            有效的契約代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._excludeCodes">
            <summary>
            要排除的代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._excludeMths">
            <summary>
            要排除的月份
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._excludeContractIds">
            <summary>
            要排除的契約代碼
            </summary>
        </member>
        <!-- 已忽略成員 "F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._validExchangeContractIDCouples" 中格式錯誤的 XML 註解 -->
        <!-- 已忽略成員 "F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._excludeExchangeContractIDCouples" 中格式錯誤的 XML 註解 -->
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._validIdentifiers">
            <summary>
            有效的CommodityIdentifier
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._excludeIdentifiers">
            <summary>
            要排除的CommodityIdentifier
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._validGroups">
            <summary>
            有效的商品群組
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFilter._excludeGroups">
            <summary>
            要排除的商品群組
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityFilter.CheckValidExchanges">
            <summary>
            是否檢查為允許的交易別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityFilter.CheckExcludeExchanges">
            <summary>
            是否排除某個交易所
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityFilter.CheckValidCodes">
            <summary>
            當CheckValidCodes為true時，只有在ValidCodes裡面的商品才會被選取
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityFilter.CheckExcludeCodes">
            <summary>
            當CheckExcludeCodes為true時，excludeCodes裡面的商品會被排除
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityFilter.CheckValidMonths">
            <summary>
            當CheckValidMonths為true時，只有在ValidMonths裡面的商品會被選取
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityFilter.CheckExcludeMonths">
            <summary>
            檢查排除月份
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityFilter.CheckValidContractIDs">
            <summary>
            是否檢查契約代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityFilter.CheckExcludeContractIDs">
            <summary>
            檢查是否要排除的契約代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityFilter.CheckValidExchangeContractIDCouples">
            <summary>
            檢查Exchange+ContractID組合
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityFilter.CheckExcludeExchangeContractIDCouples">
            <summary>
            檢查排除的Exchange+ContractID組合
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityFilter.CheckValidCommodityIdentifier">
            <summary>
            是否檢查有效的商品識別元<para/>
            true:會檢查商品是否符合有效的商品識別元(ex:某月份的TXO)<para/>
            false:不檢查
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityFilter.CheckExcludeCommodityIdentifier">
            <summary>
            是否檢查排除的商品識別元 <para/>
            true:會檢查商品是否符合要排除的商品識別元(ex:某月份的TXO)<para/>
            false:不檢查
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityFilter.CheckValidCommodityGroup">
            <summary>
            是否檢查有效的商品群組
            true:會檢查商品是否符合有效的商品群組(ex:TX)
            false:不檢查
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityFilter.CheckExcludeCommodityGroup">
            <summary>
            是否檢查排除的商品群組
            true:會檢查商品是否符合要排除的商品群組(ex:TX)
            false:不檢查
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsVaidExchange(System.String)">
            <summary>
            是否為有效的交易所代碼
            </summary>
            <param name="exchange">交易所</param>
            <returns>true:有效的交易所；false:非在有效交易所內</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.RemoveValidExchanges(System.String)">
            <summary>
            移除有效的交易所代碼
            </summary>
            <param name="exchange">交易所代碼</param>
            <returns>無回傳值</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.AddValidExchange(System.String)">
            <summary>
            新增有效的交易所代碼
            </summary>
            <param name="exchange">交易所代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.ClearValidExchanges">
            <summary>
            清空有效的交易所代碼
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsExcludeExchange(System.String)">
            <summary>
            是否為要排除的交易所代碼
            </summary>
            <param name="exchange">交易所代碼</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.AddExcludeExchange(System.String)">
            <summary>
            加入要排除的交易所代碼
            </summary>
            <param name="exchange"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsValidCode(System.String)">
            <summary></summary>
            <param name="code"></param>
            <returns>允許的商品True,反之False</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.RemoveValidCode(System.String)">
            <summary>
            移除有效的代碼
            </summary>
            <param name="code">商品代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.ClearValidCodes">
            <summary>
            清空有效的商品代碼(ValidCodes)
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.AddValidCode(System.String)">
            <summary>
            有效的商品代碼
            </summary>
            <param name="code">商品代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsValidContractID(System.String)">
            <summary>
            
            </summary>
            <param name="contractID">契約代碼</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.AddValidContractID(System.String)">
            <summary>
            加入有效的契約代碼
            </summary>
            <param name="contractID">契約代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.RemoveValidContractID(System.String)">
            <summary>
            移除有效的契約代碼
            </summary>
            <param name="contractID">契約代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.ClearValidContractIDs">
            <summary>
            清空商品類別
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsValidMonth(System.Int32)">
            <summary>
            移除有效月份
            </summary>
            <param name="mth">有效月份</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.AddValidMonth(System.Int32)">
            <summary>
            新增Valid Month
            </summary>
            <param name="mth">有效月份</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.ClearValidMonths">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsValidExchangeContractIDCouple(System.String,System.String)">
            <summary>
            是否為有效的Exchange+ContractID組合
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.AddValidExchangeContractIDCouple(System.String,System.String)">
            <summary>
            加入有效的Exchange+ContractID組合
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.ClearValidExchangeContractIDCouples">
            <summary>
            清除有效的Exchange+ContractID組合
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsExcludeCode(System.String)">
            <summary>
            是否為要排除的商品代碼
            </summary>
            <param name="code">商品代碼</param>
            <returns>
            true:是要排除的商品代碼<para/>
            false:不是要排除的商品代碼
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.AddExcludeCode(System.String)">
            <summary>
            加入要排除的商品代碼
            </summary>
            <param name="code">商品代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.RemoveExcludeCode(System.String)">
            <summary>
            移除要排除的商品代碼
            </summary>
            <param name="code">商品代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.ClearExcludeCodes">
            <summary>
            清空要排除的商品代碼
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsExcludeContractID(System.String)">
            <summary>
            是否為要排除的契約代碼
            </summary>
            <param name="contractID">契約代碼</param>
            <returns>
            true:是要排除的契約代碼<para/>
            false:不是要排除的契約代碼
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.AddExcludeContractID(System.String)">
            <summary>
            加入要排除的契約代碼
            </summary>
            <param name="contractID">契約代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.RemoveExcludeContractID(System.String)">
            <summary>
            移除要排除的契約代碼
            </summary>
            <param name="contractID">契約代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.ClearExcludeContractIDs">
            <summary>
            清空要排除的契約代碼
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsExcludeMonth(System.Int32)">
            <summary>
            是否為要排除的月份
            </summary>
            <param name="mth">要排除的月份</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.AddExcludeMonth(System.Int32)">
            <summary>
            加入要排除的月份
            </summary>
            <param name="mth">要排除的月份</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.RemoveExcludeMonth(System.Int32)">
            <summary>
            將某個月份自要排除的月份移除
            </summary>
            <param name="mth"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.ClearExcludeMonths">
            <summary>
            清空要排除的月份
            </summary>
        </member>
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsExcludeExchangeContractIDCouple(System.String,System.String)" 中格式錯誤的 XML 註解 -->
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.AddExcludeExchangeContractIDCouple(System.String,System.String)" 中格式錯誤的 XML 註解 -->
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.RemoveExcludeExchangeContractIDCouple(System.String,System.String)" 中格式錯誤的 XML 註解 -->
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.ClearExcludeExchangeContractIDCouples" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.AddValidCommodityIdentifier(CapitalPipe.LiteTrading.Commodities.CommodityIdentifier)">
            <summary>
            加入有效的商品識別元
            </summary>
            <param name="id">商品識別元</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.RemoveValidCommodityIdentifier(CapitalPipe.LiteTrading.Commodities.CommodityIdentifier)">
            <summary>
            移除有效的商品識別元
            </summary>
            <param name="id">商品識別元</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.ClearValidCommodityIdentifiers">
            <summary>
            清除所有的有效商品識別元
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsValidCommodityIdentifier(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            是否符合有效的商品識別元
            </summary>
            <param name="cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.AddExcludeCommodityIdentifier(CapitalPipe.LiteTrading.Commodities.CommodityIdentifier)">
            <summary>
            新增要排除的商品識別元
            </summary>
            <param name="id">商品識別元</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.RemoveExcludeCommodityIdentifier(CapitalPipe.LiteTrading.Commodities.CommodityIdentifier)">
            <summary>
            移除要排除的商品識別元
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.ClearExcludeCommodityIdentifiers">
            <summary>
            清空要排除的商品識別元
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsExcludeCommodityIdentifier(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            檢查商品是否屬於要排除的商品識別元
            </summary>
            <param name="_cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.AddValidCommodityGroup(CapitalPipe.LiteTrading.Commodities.CommodityGroup)">
            <summary>
            加入有效的商品群組
            </summary>
            <param name="gp">商品群組</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.RemoveValidCommodityGroup(CapitalPipe.LiteTrading.Commodities.CommodityGroup)">
            <summary>
            移除有效的商品群組
            </summary>
            <param name="gp">商品群組</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.ClearValidCommodityGroups">
            <summary>
            清除所有的有效商品群組
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsValidCommodityGroups(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            是否符合有效的商品群組
            </summary>
            <param name="cmd">商品資訊</param>
            <returns>
            true:是有效的商品群組<para/>
            false:不是有效的商品群組
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.AddExcludeCommodityGroup(CapitalPipe.LiteTrading.Commodities.CommodityGroup)">
            <summary>
            新增要排除的商品群組
            </summary>
            <param name="gp">商品群組</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.RemoveExcludeCommodityGroup(CapitalPipe.LiteTrading.Commodities.CommodityGroup)">
            <summary>
            移除要排除的商品群組
            </summary>
            <param name="gp">商品群組</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.ClearExcludeCommodityGroups">
            <summary>
            清空要排除的商品群組
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsExcludeCommodityGroup(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            檢查商品是否屬於要排除的商品群組
            </summary>
            <param name="cmd">商品資訊</param>
            <returns>
            true:是有效的商品群組<para/>
            false:不是有效的商品群組
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.CheckCommodity(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            檢查是否為允許的Commodity
            </summary>
            <param name="cmd">商品資訊</param>
            <returns>
            true:是有效的商品<para/>
            false:不是有效的商品
            /// </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsValidOrder(CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            檢查是否為允許的委託
            </summary>
            <param name="ord">委託單物件</param>
            <returns>
            true:是有效的委託單<para/>
            false:不是有效的委託單
            /// </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsValidTransaction(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            是否為有效的交易
            </summary>
            <param name="tr">成交物件</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFilter.IsValidTreasury(CapitalPipe.LiteTrading.LitePositions.Treasury)">
            <summary>
            是否有效的庫存
            </summary>
            <param name="tr"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityFinder">
            <summary>
            商品找尋器
            </summary>
            <remarks>
            用來找尋某個商品或是集合資訊(商品集合，到期月份，履約價…)<para/>
            本類別為Abstract類別，應用程式必須負責static member: _cmdFinder的初始化
            <example>
            取得臺指期貨的所有月份
            <code>
            months = CommodityFinder.DefaultFinder.GetMonths("TAIFEX", "TXF");
            </code>
            取得臺指選擇權某月份的所有履約價
            <code>
            strikes = CommodityFinder.DefaultFinder.GetStrikes("TAIFEX", "TXO", 201306, 0);
            </code>
            取得臺指期貨最近到期的月份
            <code>
            int nearMonth = CommodityFinder.DefaultFinder.GetMonthBySequence("TAIFEX", "TXF", 1);
            </code>
            取得臺指期貨次月到期的月份
            <code>
            int nextMonth = CommodityFinder.DefaultFinder.GetMonthBySequence("TAIFEX", "TXF", 2);
            </code>
            取得臺灣期貨交易所的臺指期貨的2013年5月到期的期貨商品
            <code>
            CommodityInfo cmdInfo = CommodityFinder.DefaultFinder.GetCommodity("TAIFEX", "TXF", 201305, 0, CommodityType.Futures, 0.0m);  
            </code>
            取得臺灣期貨交易所的臺指選擇權的2015年4月第5週到期履約價是8850的Put商品
            <code>
            CommodityInfo cmdInfo = CommodityFinder.DefaultFinder.GetCommodity("TAIFEX", "TX5", 201504, 5, CommodityType.Put, 8850m);  
            </code>
            </example>
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityFinder._cmdFinder">
            <summary>
            系統預設的商品Finder
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityFinder.DefaultFinder">
            <summary>
            預設的商品Finder
            </summary>
            <remarks>
            任何一個RTS系統Application都必須有一個子類別實做CommodityFinder，並且在run time時，將_cmdFinder初始化成該類別的instance。
            </remarks>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetMonths(System.String,System.String,CapitalPipe.LiteTrading.Commodities.ContractType)">
            <summary>
            取得指定的[交易所，契約代碼]的所有月份
            </summary>
            <remarks>
            回傳的月份會由小到大排序。
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="cType">契約類型:期貨或是選擇權</param>
            <returns>所有的到期月份，由小到大排序</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetSettleKeys(System.String,System.String,CapitalPipe.LiteTrading.Commodities.ContractType)">
            <summary>
            取得所有的結算期別(YYYYMMDDWW)
            </summary>
            <remarks>
            回傳的月份會由小到大排序。
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="cType">契約類型:期貨或是選擇權</param>
            <returns>所有的結算期別，由小到大排序</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetMonthBySequence(System.String,System.String,System.Int32,CapitalPipe.LiteTrading.Commodities.ContractType)">
            <summary>
            取得某契約第x個到期的月份
            </summary>
            <remarks>
            回傳的月份會由小到大排序。
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">契約代碼</param>
            <param name="sequence">到期合約順序(1:最先到期；2:次到期…)</param>
            <param name="cType">契約類型</param>
            <returns>到期的月份，若找不到會回傳-1</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetMonthByActivity(System.String,System.String,System.Int32,CapitalPipe.LiteTrading.Commodities.ContractType)">
            <summary>
            取得某契約第x個熱門月份
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="sequence">熱門合約順序(1:最熱門；2:次熱門…)</param>
            <param name="cType">合約類型</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetWeekBySequence(System.String,System.String,System.Int32,CapitalPipe.LiteTrading.Commodities.ContractType)">
            <summary>
            取得某契約第x個到期的週序
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="sequence">到期合約順序(1:最先到期；2:次到期…)</param>
            <returns>到期的週序，若找不到會回傳-1</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetOptionIDs(System.String)">
            <summary>
            取得所有的選擇權契約代碼
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <returns>所有的選擇權契約代碼</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetFuturesIDs(System.String)">
            <summary>
            取得所有的期貨契約代碼
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <returns>所有的期貨契約代碼</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetExchanges">
            <summary>
            取得所有的交易所代碼
            </summary>
            <returns>所有的交易所代碼列表</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetContractIDs(System.String)">
            <summary>
            取得某交易所的所有契約代碼
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="strExchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <returns>所有的契約代碼列表</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetStrikes(System.String,System.String)">
            <summary>
            取得所有的履約價
            不包括複式商品
            </summary>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <returns>所有的履約價列表</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetStrikes(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityType)">
            <summary>
            取得所有的履約價
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="type">商品類型</param>
            <returns>所有的履約價(由小到大排序)</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetStrikes(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            取得所有的履約價
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="month">到期月份</param>
            <param name="week">到期週序</param>
            <returns>所有的履約價(由小到大排序)</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetStrikes(System.String,System.String,System.Int32,System.Int32,CapitalPipe.LiteTrading.Commodities.CommodityType)">
            <summary>
            取得所有的履約價
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="month">到期月份</param>
            <param name="week">到期週序</param>
            <param name="type">商品類型</param>
            <returns>所有的履約價(由小到大排序)</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetCommodity(System.String,System.String)">
            <summary>
            找尋商品
            </summary>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="exchangeCode">商品在交易所的編碼</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetSingleCommodity(System.String)">
            <summary>
            取得單一商品資訊
            </summary>
            <param name="code">商品代碼</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetCommodity(System.String,System.String,System.Int32,System.Int32,CapitalPipe.LiteTrading.Commodities.CommodityType,System.Decimal)">
            <summary>
            取得商品資訊
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="month">到期月份</param>
            <param name="week">到期週序</param>
            <param name="cmdType">商品類型</param>
            <param name="strike">履約價</param>
            <returns>商品資訊，若找不到會回傳null，
            若有多個商品符合條件，則只會回傳第一個</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetComboCommodity(System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            取得複式商品資訊(假設是買進)
            Leg1Code與Leg2Code交換，可能會得到不同的結果
            </summary>
            <param name="leg1Code">第一隻腳代碼</param>
            <param name="leg1BS">複式商品買進時，第一隻腳的買賣別</param>
            <param name="leg2Code">第二隻腳代碼</param>
            <param name="leg2BS">複式商品買進時，第二隻腳的買賣別</param>
            <returns>商品資訊，若找不到會回傳null，
            若有多個商品符合條件，則只會回傳第一個</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetCommodityBySeriesSequence(System.String,System.String,System.Int32)">
            <summary>
            取得商品資訊
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="seriesSeq">到期順序(1:最先到期；2:次到期…)</param>
            <returns>商品資訊，若找不到會回傳null，
            若有多個商品符合條件，則只會回傳第一個</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetCommodityBySeriesSequence(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityType,System.Int32)">
            <summary>
            取得商品資訊
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="type">商品類型</param>
            <param name="seriesSeq">到期順序(1:最先到期；2:次到期…)</param>
            <returns>商品資訊，若找不到會回傳null，
            若有多個商品符合條件，則只會回傳第一個</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetCommodities(System.String,System.String)">
            <summary>
            取得商品集合
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetComboCommodities(System.String,System.String)">
            <summary>
            取得複式商品資訊
            </summary>
            <param name="leg1Code">第一隻腳代碼</param>
            <param name="leg2Code">第二隻腳代碼</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetCommodities(System.String,System.String,System.Boolean)">
            <summary>
            取得商品集合
            </summary>
            <remarks>
            可以使用isCombo Flag來決定是否要包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="isCombo">true:僅複式商品；false:非複式商品</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetCommodities(System.String,System.String,System.Int32)">
            <summary>
            取得商品集合
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="month">到期月份</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetCommodities(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityType)">
            <summary>
            取得商品集合
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="cmdType">商品類型</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetCommodities(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            取得商品集合
            </summary>
            <remarks>
            可以使用isCombo Flag來決定是否要包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="month">到期月份</param>
            <param name="isCombo">true:僅複式商品；false:非複式商品</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetCommodities(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityType,System.Int32)">
            <summary>
            取得商品集合
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="cmdType">商品類型</param>
            <param name="month">到期月份</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetCommodities(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityType,System.Int32,System.Boolean)">
            <summary>
            取得商品集合
            </summary>
            <remarks>
            可以使用isCombo Flag來決定是否要包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="cmdType">商品類型</param>
            <param name="month">到期月份</param>
            <param name="isCombo">true:僅複式商品；false:非複式商品</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetCommoditiesBySeriesSequence(System.String,System.String,System.Int32)">
            <summary>
            取得商品集合
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="seriesSeq">到期順序</param>
            <returns>商品集合，期貨=>1個，選擇權=>該期別所有選擇權商品</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetCommoditiesByHotness(System.String,System.String,System.Int32)">
            <summary>
            取得商品集合
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="hotnessSeq">熱門順序</param>
            <returns>商品集合，期貨=>1個，選擇權=>該期別所有選擇權商品</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetCommoditiesBySeriesSequence(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityType,System.Int32)">
            <summary>
            取得商品集合
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="cmdType">商品類型</param>
            <param name="seriesSeq">到期順序</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetCommoditiesByHotness(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityType,System.Int32)">
            <summary>
            取得商品集合
            </summary>
            <remarks>
            這個方法的回傳值不會包含複式商品
            </remarks>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="cmdType">商品類型</param>
            <param name="hotnessSeq">熱門順序</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.GetOptionSeries(System.String,System.String,System.Int32,System.Int16)">
            <summary>
            取得選擇權組合
            </summary>
            <param name="exchange">RTS系統的交易所編碼，例如：TWSE,TAIFEX,SGX,...</param>
            <param name="contractID">RTS系統的契約代碼，例如：TXF,CN,TW,...</param>
            <param name="month"></param>
            <param name="week"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityFinder.Update">
            <summary>
            當商品資料更新後，呼叫這個方法來更新
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityGroup">
            <summary>
            商品群組物件
            </summary>
            <remarks>
            商品群組物件是用來描述某類資產<para/>
            CommodityGroup會有一個GroupID(群組代碼)，用來表示該類型資產的識別碼。
            使用方式：GroupID = "TX..."
                    則裡面可以有數個CommodityIdentifier，分別代表：大台、小台、週小台、台指選擇權、週台指選擇權…
                    我們就可以用這個CommodityGroup來表示這一系列的商品
                    To Do:CommodityFilter與CommodityGroup, CommodityFilter的整合
            commodity_identifier
            取得CommodityGroup的方式有兩個：
            (1)使用CommodityClass物件下的Groups屬性 ==> 某個CommodityClass下的群組
            (2)使用CommodityGroupManager.DefaultManager.GetCommodityGroup() ==> 直接取得某個代碼代表的群組
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityGroup._groupID">
            <summary>
            群組代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityGroup._description">
            <summary>
            群組說明
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityGroup._identifiers">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityGroup.GroupID">
            <summary>
            商品群組ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityGroup.Self">
            <summary>
            傳回this指標(For Data Binding)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityGroup.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityGroup.Identifiers">
            <summary>
            所有的資產辨識元
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityGroup.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="groupID">群組代碼</param>
            <param name="description">說明</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityGroup.AddIdendifier(CapitalPipe.LiteTrading.Commodities.CommodityIdentifier)">
            <summary>
            增加辨識元
            </summary>
            <param name="id">辨識元</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityGroup.GetIdendifier(CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IdentifierType,System.String)">
            <summary>
            找到Identifier
            </summary>
            <param name="idType">辨識元類型</param>
            <param name="id">辨識元代碼</param>
            <returns>辨識元，若找不到會回傳null</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityGroup.GetIdendifiers(CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IdentifierType)">
            <summary>
            找到Identifiers
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityGroup.GetAllIdentifiers">
            <summary>
            取得所有Identifiers
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityGroup.ClearIdentifier">
            <summary>
            清除所有的Identifiers
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityGroup.SortIdentifiers">
            <summary>
            將Identifiers重新排序
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityGroup.GetFuturesSeriesCount">
            <summary>
            取得期貨
            </summary>
            <returns>期貨合約序列的數量</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityGroup.ToString">
            <summary>
            覆寫ToString
            </summary>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityGroupManager">
            <summary>
            用來管理CommodityGroup的物件
            </summary>
            <remarks>
            使用方式：
                (1) 新增CommodityGroup
                    CommodityGroupManager.DefaultManager.AddCommodityGroup("TX...", "台指類");
                (2) 取得CommodityGroup
                    CommodityGroupManager.DefaultManager.GetCommodityGroup("TX...");
            系統提供的CommodityGroup會存在st_commodities.db3的commodity_identifier資料表
            在Application初始化時，由這個資料表載入
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityGroupManager._allGroups">
            <summary>
            所有的群組(Key:
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityGroupManager._defaultManager">
            <summary>
            頱設的CommodityGroupManager
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityGroupManager.Groups">
            <summary>
            所有的群組
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityGroupManager.DefaultManager">
            <summary>
            預設的商品群組管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityGroupManager.GetCommodityGroup(System.String)">
            <summary>
            取得商品群組
            </summary>
            <param name="groupID">商品群組代碼</param>
            <returns>回傳商品群組，若找不到會回傳null</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityGroupManager.AddCommodityGroup(System.String,System.String)">
            <summary>
            增加商品群組
            </summary>
            <param name="groupID">商品群組代碼</param>
            <param name="description">商品群組的說明</param>
            <returns>若商品群組已存在，會回傳現有的商品群組。
            若不存在，則會新增一個並加到_allGroups，並回傳新增的群組。</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityGroupManager.RemoveCommodity(System.String)">
            <summary>
            移除某個Group
            </summary>
            <param name="groupID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityGroupManager.QueryCommodityGroup(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            查詢該商品屬於哪個群組
            </summary>
            <param name="cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier">
            <summary>
            商品識別元
            </summary>
            <remarks>
            用來識別單一商品、期貨序列、選擇權序列的物件。CommodityGroup物件內含多組商品識別元，用來表示一個商品組合。
            </remarks>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IdentifierType">
            <summary>
            商品識別元的類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IdentifierType.Commodity">
            <summary>
            沒有特別指定商品分類
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IdentifierType.FuturesSeries">
            <summary>
            期貨序列
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IdentifierType.OptionSeries">
            <summary>
            選擇權序列
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IdentifierType.Stock">
            <summary>
            股票
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IdentifierType.ETF">
            <summary>
            ETF
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IdentifierType.Warrant">
            <summary>
            權證類
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IdentifierType.Convertible">
            <summary>
            可轉債
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IdentifierType.DepositReceipt">
            <summary>
            存託憑證
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IdentifierType.Undefined">
            <summary>
            未知分類
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier._identifierID">
            <summary>
            商品識別器的ID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier._idType">
            <summary>
            商品識別器的類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier._exchange">
            <summary>
            交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier._code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier._contractID">
            <summary>
            契約代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier._month">
            <summary>
            到期月份
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier._week">
            <summary>
            到期週
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IdentifierID">
            <summary>
            商品識別元代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IDType">
            <summary>
            識別元類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.Exchange">
            <summary>
            交易所
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.Code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.ContractID">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.Month">
            <summary>
            合約月份
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.Week">
            <summary>
            合約週序
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.Self">
            <summary>
            For Data Binding
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.#ctor(System.String,CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IdentifierType,System.String,System.String,System.String,System.Int32,System.Int16)">
            <summary>
            Constructor
            </summary>
            <param name="identifierID">商品識別元代碼</param>
            <param name="iType">商品識別元類型</param>
            <param name="exchange">交易所</param>
            <param name="code">商品代碼</param>
            <param name="contractID">合約代碼</param>
            <param name="month">到期月份</param>
            <param name="week">到期週序</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.IsValidCommodity(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            商品是否符合本識別元
            </summary>
            <param name="cmdInfo">商品摘要資訊</param>
            <returns>
            true:符合
            false:不符合
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.ToString">
            <summary>
            以string表示，傳回IdentifierID
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.Equals(System.Object)">
            <summary>
            判斷兩個Identifier是否相等？
            </summary>
            <param name="obj">要比較的物件</param>
            <returns>
            true:相等<para/>
            false:不相等
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.GetHashCode">
            <summary>
            因為不Override，compiler會一直報warning!!
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.ToDictionaryKey">
            <summary>
            將ID變成一個Key值，以方便管理
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.GetCommodityFromCommodityIdentifier(CapitalPipe.LiteTrading.Commodities.CommodityIdentifier)">
            <summary>
            由Identifier取得指向的商品，這個方法僅用於Commodity/Convertible/DepositReceipt/ETF/Stock/Warrant型商品
            </summary>
            <param name="id">商品識別元</param>
            <returns>
            符合的商品資訊
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityIdentifier.CompareIdentifier(CapitalPipe.LiteTrading.Commodities.CommodityIdentifier,CapitalPipe.LiteTrading.Commodities.CommodityIdentifier)">
            <summary>
            比較兩個identifier，用來產生排序結果
            <list type="number">
            <item>
            <description>
            一般商品(股票、權證) > 期貨 > 選擇權
            </description>
            </item>
            <item>
            <description>
            期權商品的週商品>月商品<para/>
            週商品先比月份，月份相同比週順序<para/>
            月商品直接比月份
            </description>
            </item>
            </list>
            </summary>
            <param name="id1">辨識元1</param>
            <param name="id2">辨識元2</param>
            <returns>兩個辨識元的比序</returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityInfo">
             <summary>
             商品摘要資訊
             </summary>
             <remarks>
             可以用"系統代碼"來取得商品資訊，目前系統代碼的格式是：交易所編製的商品代碼.交易所代碼。<para/>
             以台灣選擇權為例：TXO09500A5是台灣期貨交易所編製的某個選擇權商品代碼，台灣期貨交易所的代碼是TAIFEX<para/>
             故這個商品的系統代碼：TXO095000A5.TAIFEX<para/><para/>
              
             商品摘要資訊提供了以下訊息：
             <list type="bullet">
             <item>
             <description>商品最後交易日</description>
             </item>
             <item>
             <description>商品到期日</description>
             </item>
             <item>
             <description>履約價</description>
             </item>
             <item>
             <description>商品類型(股票/權證/期貨/買權/賣權…)</description>
             </item>
             <item>
             <description>整股單位</description>
             </item>
             <item>
             <description>契約乘數</description>
             </item>
             <item>
             <description>到期月份順序</description>
             </item>
             <item>
             <description>幣別</description>
             </item>
             <item>
             <description>行事曆代碼</description>
             </item>
             <item>
             <description>升降單位代碼</description>
             </item>
             </list>
             商品摘要資訊物件可以用來處理：
             <list type="bullet">
             <item>
             <description>取得最接近的有效價格(例如：給定1.9324157這種浮點數值，若升降單位是0.01，可以得出最接近數值為1.93)</description>
             </item>
             <item>
             <description>對價格做升降Tick的處理</description>
             </item>
             </list>
             目前SST系統在運行上要求CommodityInfo資訊必須完整正確，若找不到某個商品的CommodityInfo，則將無法取得報價/下單及接收成委回/計算部位…
             若某筆成委回的商品代碼無法辨識出其CommodityInfo，系統就會有crash的風險 ==> To Do:調整容錯能力
             
             在SST系統裡面使用的術語：
             商品指的是可以交易的單位
             
             契約(Contract)指的是在某個交易所內具有共同特性的序列組合
             例如：臺灣期貨交易所的臺指期貨(TXF)、上海期貨交易所的螺紋鋼等等
             一個契約下面會有若干個商品
             Contract (TXO) + <para/>
                            + ---- TXO08900C4.TAIFEX <para/>
                            + ---- TXO09000C4.TAIFEX <para/>
                            + ---- TXO09100C4.TAIFEX <para/>
                            + ---- ... <para/>
            
             每個商品(期貨)交易所都會有若干個契約
             </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo.CommodityState.Normal">
            <summary>
            從商品檔載入的資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo.CommodityState.Added">
            <summary>
            盤中新增的資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo.CommodityState.Removed">
            <summary>
            盤中要移除的資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo.CommodityState.Updated">
            <summary>
            商品資料更新
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo.CommodityState.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._code">
            <summary>
            商品代碼(SST系統碼) => exchange code + "." + exchange ID(ex:2330.TWSE)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._exchangeCode">
            <summary>
            此商品在交易所的編碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._name">
            <summary>
            商品名稱(中文)
            這個欄位會有localization的issue
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._nameEng">
            <summary>
            英文名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._exchange">
            <summary>
            交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._type">
            <summary>
            商品類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._strike">
            <summary>
            履約價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._month">
            <summary>
            到期月份(201212,201209)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._week">
            <summary>
            到期週序(01,02,00)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._contractID">
            <summary>
            契約代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._tickType">
            <summary>
            Tick單位代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._seriesOrderedByActivity">
            <summary>
            依熱門程度的排序
            1:最活躍，2:次活躍，…
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._seriesOrderedBySequence">
            <summary>
            依到期天期的排序
            1:最近到期，2:次近到期，…
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._tag">
            <summary>
            標籤，可以放入任停自訂值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._roundLots">
            <summary>
            整股單位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._factor">
            <summary>
            契約乘數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._cashAdjustment">
            <summary>
            現金調整項(for調整後的契約)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._isCombo">
            <summary>
            是否為複式商品？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._leg1Code">
            <summary>
            複式商品第一隻腳代碼
            複式商品第一隻腳：自編代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._leg2Code">
            <summary>
            複式商品第二隻腳代碼
            複式商品第二隻腳：自編代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._bbs1">
            <summary>
            買進時，第一隻腳買賣別(for複式商品)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._bbs2">
            <summary>
            買進時，第二隻腳買賣別(for複式商品)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._sbs1">
            <summary>
            賣出時，第一隻腳買賣別(for複式商品)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._sbs2">
            <summary>
            賣出時，第二隻腳買賣別(for複式商品)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._calendarID">
            <summary>
            日曆代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._sessionID">
            <summary>
            交易時段代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._settlementID">
            <summary>
            結算代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._currency">
            <summary>
            幣別代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._extraInfo">
            <summary>
            其他資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._refPrice">
            <summary>
            參考價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._upLimitPrice">
            <summary>
            漲停價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._dnLimitPrice">
            <summary>
            跌停價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._lasttrade">
            <summary>
            最後交易日
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._settleDate">
            <summary>
            到期日/結算日
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._hasQuote">
            <summary>
            有無報價？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._tradable">
            <summary>
            是否可交易？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._groupFactor">
            <summary>
            群組乘數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfo._orderVolumeLimit">
            <summary>
            委託數量上限
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.Code">
            <summary>
            商品代碼
            格式：XXXX.YY，其中XXXX是交易所內的商品代碼，YY是交易所代碼
            例如：2330.TWSE/TXFA3.TAIFEX/TXO07700A3.TAIFEX
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.ExchangeCode">
            <summary>
            交易所內使用的商品代碼
            例如：2330/0050/TXFA3/TXO07700A3
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.Name">
            <summary>
            商品名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.NameEnglish">
            <summary>
            商品名稱(英文)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.Type">
            <summary>
            商品類型<para/>
            <list type="bullet">
            <item><description>Stock:股票</description></item>
            <item><description>Warrant:標準BS權證</description></item>
            <item><description>Convertible:可轉債</description></item>
            <item><description>ETF:Exchange Traded Fund</description></item>
            <item><description>Futures:期貨</description></item>
            <item><description>Call:標準BS買權(Call Option)</description></item>
            <item><description>Put:標準BS賣權(Put Option)</description></item>
            <item><description>FuturesSpread:期貨價差(Spread)</description></item>
            <item><description>OptionCombo:選擇權複式商品</description></item>
            <item><description>Index:指數</description></item>
            <item><description>Cash:現金</description></item>
            </list>
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.ContractID">
            <summary>
            契約代碼<para/>
            TXF,MXF,TXO,...<para/>
            股票、權證…等商品沒有契約代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.Exchange">
            <summary>
            交易所<para/>
            TAIFEX,TWSE,...
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.Strike">
            <summary>
            履約價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.Month">
            <summary>
            交割月份<para/>
            YYYYMM格式，例如:201209<para/>
            若無交割月份：0
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.WeekSequence">
            <summary>
            週順序<para/>
            1/2/3/4/5for週到期商品<para/>
            0for非週到期的商品
            </summary>
        </member>
        <!-- 已忽略成員 "P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.SettleKeyString" 中格式錯誤的 XML 註解 -->
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.SettleKey">
            <summary>
            月+週的key值(整數)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.SeriesOrderedByActivity">
            <summary>
            依流動性的排序(目前不適用)<para/>
            同樣商品序列(TXO,TEO,...)的選擇權在同一到期日的商品，此欄位值會一樣
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.SeriesOrderedBySequence">
            <summary>
            依到期順序的排序<para/>
            同樣商品序列(TXO,TEO,...)的選擇權在同一到期日的商品，此欄位值會一樣
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.LastTrade">
            <summary>
            最後交易日
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.SettleDate">
            <summary>
            結算日：<para/>
                股票 => DateTime.MaxValue<para/>
                期權/CB/權證 => 到期日
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.TickType">
            <summary>
            Tick類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.IsCombo">
            <summary>
            true:複式商品，false:單式商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.Tradable">
            <summary>
            可否交易(加權指數有報價，不可交易)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.HasQuote">
            <summary>
            有無報價(台灣期交所選擇權複式商品可交易，無報價)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.Leg1Code">
            <summary>
            複式商品第一隻腳代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.Leg2Code">
            <summary>
            複式商品第二隻腳代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.BuyLeg1BS">
            <summary>
            複式商品買進時，第一隻腳買賣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.BuyLeg2BS">
            <summary>
            複式商品買進時，第二隻腳買賣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.SellLeg1BS">
            <summary>
            複式商品賣出時，第一雙腳買賣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.SellLeg2BS">
            <summary>
            複式商品賣出時，第二隻腳買賣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.Factor">
            <summary>
            契約乘數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.RoundLots">
            <summary>
            整股單位
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.SettlementID">
            <summary>
            結算行事曆代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.SessionID">
            <summary>
            交易時段代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.RefrencePrice">
            <summary>
            參考價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.UpLimit">
            <summary>
            漲停價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.DownLimit">
            <summary>
            跌停價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.CalendarID">
            <summary>
            行事曆代碼
            行事曆 ==> 假日，每個行事曆都有自已的代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.Tag">
            <summary>
            額外資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.ExtraInfo">
            <summary>
            額外的資訊(附註)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.Currency">
            <summary>
            計價幣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.Self">
            <summary>
            For DataBinding使用
            20140924新增
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.BaseCommodity">
            <summary>
            For衍生型商品使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.GroupFactor">
            <summary>
            
            </summary>
        </member>
        <!-- 已忽略成員 "P:CapitalPipe.LiteTrading.Commodities.CommodityInfo.OrderVolumeLimit" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.Decimal,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Commodities.CommodityType,System.String,System.Decimal,System.Int32,System.Int16,System.String,System.String,System.String,System.String,System.String,System.String,CapitalPipe.LiteTrading.Commodities.CurrencyID,System.Boolean,System.Boolean)">
            <summary>
            一般商品使用
            </summary>
            <param name="code">商品代碼(2330.TWSE/TXFA3.TAIFEX/TXO07700A3.TAIFEX)</param>
            <param name="exchCode">商品交易所代碼(2330/TXFA3/TXO07700A3)</param>
            <param name="exchange">交易所</param>
            <param name="name">品名稱</param>
            <param name="nameEng">英文名稱</param>
            <param name="factor">契約乘數</param>
            <param name="cashAdj">現金調整項</param>
            <param name="roundLots">整股單位</param>
            <param name="type">商品類型</param>
            <param name="contractID">商品類別：_STK_/TXF/TXO/...</param>
            <param name="strike">履約價</param>
            <param name="mth">交割月份</param>
            <param name="weekSeq">到期週序</param>
            <param name="calendarID">行事曆代碼</param>
            <param name="ssID">交易時段代碼</param>
            <param name="tag">額外資訊1</param>
            <param name="extraInfo">額外資訊2</param>
            <param name="tickType">tick類型</param>
            <param name="currency">計價幣別</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Commodities.CommodityType,System.String,System.Int32,System.Int16,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.String,CapitalPipe.LiteTrading.Commodities.CurrencyID,System.Boolean,System.Boolean)">
            <summary>
            複式商品使用
            </summary>
            <param name="code">商品代碼</param>
            <param name="exchCode">商品的交易所代碼</param>
            <param name="exchange">交易所</param>
            <param name="name">商品名稱</param>
            <param name="nameEng">商品名稱(英文)</param>
            <param name="factor">契約乘數</param>
            <param name="roundLots">整股單位</param>
            <param name="type">商品類型</param>
            <param name="contractID">契約代碼</param>
            <param name="month">到期月份</param>
            <param name="weekSeq">到期週序</param>
            <param name="calendarID">行事曆代碼</param>
            <param name="leg1">第一隻腳商品代碼</param>
            <param name="leg2">第二隻腳商品代碼</param>
            <param name="bbs1">買進複式商品時，第一隻腳的買賣別</param>
            <param name="bbs2">買進複式商品時，第二隻腳的買賣別</param>
            <param name="sbs1">賣出複式商品時，第一隻腳的買賣別</param>
            <param name="sbs2">賣出複式商品時，第二隻腳的買賣別</param>
            <param name="ssID">交易時段代碼</param>
            <param name="tag">保留欄位</param>
            <param name="extraInfo">其他資訊</param>
            <param name="tickType">tick代碼</param>
            <param name="settlementID">結算代碼</param>
            <param name="currency">幣別</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.ToDecimalFormatString(System.Decimal)">
            <summary>
            取得decimal format字串
            </summary>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.TickUp(System.Decimal)">
            <summary>
            升一個tick
            </summary>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.TickUp(System.Decimal,System.Int32)">
            <summary>
            升n個tick
            </summary>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.TickDown(System.Decimal)">
            <summary>
            降一個Tick
            </summary>
            <param name="pri"></param>
            <returns>
            Tick
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.TickDown(System.Decimal,System.Int32)">
            <summary>
            降n個tick
            </summary>
            <param name="pri">起始價格</param>
            <param name="nCount">要減少的Tick數</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.TicksDiff(System.Decimal,System.Decimal)">
            <summary>
            兩個價格差了多少個tick，pri1要小於pri2
            </summary>
            <param name="pri1">價格1</param>
            <param name="pri2">價格2</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.TicksDiffDouble(System.Decimal,System.Decimal)">
            <summary>
            計算兩個價格差了多少個tick(double版)
            </summary>
            <param name="pri1"></param>
            <param name="pri2"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.TicksDiffAbs(System.Decimal,System.Decimal)">
            <summary>
            兩個價格差了多少個tick
            </summary>
            <param name="pri1"></param>
            <param name="pri2"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.GetNearestPrice(System.Decimal,System.Boolean)">
            <summary>
            最接近的可委託價格
            </summary>
            <param name="pri"></param>
            <param name="upTick"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.GetNearestPrice(System.Decimal)">
            <summary>
            將浮點數轉換成最接近交易所允許的價格
            </summary>
            <param name="pri">浮點數價格</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.GetDigits(System.Decimal)">
            <summary>
            取得指定價位小數位數
            </summary>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.SetGroupFactor(System.Decimal)">
            <summary>
            設定GroupFactor
            </summary>
            <param name="groupFactor">該商品在該群組內的乘數</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.ParseCommodityType(System.String)">
            <summary>
            將字串parse成商品類型
            </summary>
            <param name="strType">字串資料</param>
            <returns>
            CommodityType Enum值
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.LoadFromZippedFile(System.Boolean,System.String,System.String,CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate,System.Int32)">
            <summary>
            自Zipped檔載入
            </summary>
            <param name="bCheckValidExchange">是否要檢查為有效的交易所，在RTS的Client端請填True，用來控管讓用戶可以交易的商品市場。在Server端的程式請填False，以便能載入所有商品。</param>
            <param name="filename">zip商品檔名稱</param>
            <param name="updateLabselFunc">更新Lable的Delegate，會透過這個delegate回傳已載入xxx筆商品的資訊</param>
            <param name="updateProgressFunc">更新進度的Delegate，會透過這個delegate回傳已載入的Percentage數</param>
            <param name="updateFlag">
            <list type="bullet">
            <item><description>0 : Replace</description></item>
            <item><description>1 : Update If Exist</description></item>
            <item><description>2 : Ignore If Exist</description></item>
            </list>
            </param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.LoadFromZippedFile(CapitalPipe.LiteTrading.Commodities.CommodityInfoManager,System.Boolean,System.String,System.String,CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate,System.Int32)">
            <summary>
            自Zipped檔載入
            </summary>
            <param name="mgr">商品管理員物件</param>
            <param name="bCheckValidExchange">是否要檢查為有效的交易所，在RTS的Client端請填True，用來控管讓用戶可以交易的商品市場。在Server端的程式請填False，以便能載入所有商品。</param>
            <param name="filename">zip商品檔名稱</param>
            <param name="updateLabselFunc">更新Lable的Delegate，會透過這個delegate回傳已載入xxx筆商品的資訊</param>
            <param name="updateProgressFunc">更新進度的Delegate，會透過這個delegate回傳已載入的Percentage數</param>
            <param name="updateFlag">
            若商品已存在時，如何處理已存在的商品資訊
            <list type="bullet">
            <item><description>0 : 直接用新物件取代</description></item>
            <item><description>1 : 更新現有物件值</description></item>
            <item><description>2 : 如果已有物件，略過不處理</description></item>
            </list>
            </param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.LoadFromCSVFile(System.Boolean,System.String,System.String,CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate,System.Int32)">
            <summary>
            自CSV檔載入
            </summary>
            <param name="filename">CSV檔案名稱</param>
            <param name="prefix">要出現在更新Lable字串之前的前置字串</param>
            <param name="bCheckValidExchange">是否要檢查為有效的交易所，在RTS的Client端請填True，用來控管讓用戶可以交易的商品市場。在Server端的程式請填False，以便能載入所有商品。</param>
            <param name="updateLabselFunc">更新Lable的Delegate，會透過這個delegate回傳已載入xxx筆商品的資訊</param>
            <param name="updateProgressFunc">更新進度的Delegate，會透過這個delegate回傳已載入的Percentage數</param>
            <param name="updateFlag">
            若商品已存在時，如何處理已存在的商品資訊
            <list type="bullet">
            <item><description>0 : 直接用新物件取代</description></item>
            <item><description>1 : 更新現有物件值</description></item>
            <item><description>2 : 如果已有物件，略過不處理</description></item>
            </list>
            </param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.LoadFromCSVFile(CapitalPipe.LiteTrading.Commodities.CommodityInfoManager,System.Boolean,System.String,System.String,CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate,System.Int32)">
            <summary>
            自CSV檔載入
            </summary>
            <param name="bCheckValidExchange">是否要檢查為有效的交易所，在RTS的Client端請填True，用來控管讓用戶可以交易的商品市場。在Server端的程式請填False，以便能載入所有商品。</param>
            <param name="filename">CSV檔案名稱</param>
            <param name="prefix">要出現在更新Lable字串之前的前置字串</param>
            <param name="updateLabselFunc">更新Lable的Delegate，會透過這個delegate回傳已載入xxx筆商品的資訊</param>
            <param name="updateProgressFunc">更新進度的Delegate，會透過這個delegate回傳已載入的Percentage數</param>
            <param name="updateFlag">
            若商品已存在時，如何處理已存在的商品資訊
            <list type="bullet">
            <item><description>0 : 直接用新物件取代</description></item>
            <item><description>1 : 更新現有物件值</description></item>
            <item><description>2 : 如果已有物件，略過不處理</description></item>
            </list>
            </param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.LoadFromStream(CapitalPipe.LiteTrading.Commodities.CommodityInfoManager,System.Boolean,System.IO.Stream,System.String,CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate,System.Int32)">
            <summary>
            自資料Stream載入
            </summary>
            <param name="cmdInfoMgr">商品管理員</param>
            <param name="bCheckValidExchange">是否要檢查為有效的交易所，在RTS的Client端請填True，用來控管讓用戶可以交易的商品市場。在Server端的程式請填False，以便能載入所有商品。</param>
            <param name="stream">資料流</param>
            <param name="prefix">要出現在更新Lable字串之前的前置字串</param>
            <param name="updateLabselFunc">更新Lable的Delegate，會透過這個delegate回傳已載入xxx筆商品的資訊</param>
            <param name="updateProgressFunc">更新進度的Delegate，會透過這個delegate回傳已載入的Percentage數</param>
            <param name="updateFlag">
            若商品已存在時，如何處理已存在的商品資訊
            <list type="bullet">
            <item><description>0 : 直接用新物件取代</description></item>
            <item><description>1 : 更新現有物件值</description></item>
            <item><description>2 : 如果已有物件，略過不處理</description></item>
            </list>
            </param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.GetComboBuySellType(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Boolean,System.Boolean)">
            <summary>
            取得複式商品的買賣別
            </summary>
            <param name="cmd"></param>
            <param name="leg1BS">第一隻腳的買賣別</param>
            <param name="leg2BS">第二隻腳的買賣別</param>
            <returns>
            true:買進
            false:賣出
            null:undefined
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.UpdateMonthSequences">
            <summary>
            更新合約的到期順序
            --------------------------------------------------
            20150903
            從protected改成public
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.GetDigitsFormatString(System.Decimal)">
            <summary>
            取得小數位教的格式字串
            </summary>
            <param name="price">價格資料</param>
            <returns>F0(整數)， F1(小數一位)，F2(小數二位)…</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.GetCostDigitsFormatString(System.Decimal)">
            <summary>
            取得計算成本的小數位教的格式字串
            </summary>
            <param name="price">價格資料</param>
            <returns>F0(整數)， F1(小數一位)，F2(小數二位)…</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.GetFormattedPrice(System.Decimal)">
            <summary>
            傳回格式化後的價格字串
            </summary>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.GetFormattedCost(System.Decimal)">
            <summary>
            取得成本字串
            </summary>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.SetLastTrade(System.DateTime)">
            <summary>
            設定最後交易日
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.SetSettle(System.DateTime)">
            <summary>
            設定結算日
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.SetOrderLimit(System.Int32)">
            <summary>
            設定委託數量上限
            </summary>
            <param name="volLimit"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfo.UpdateCommodityInfo(System.DateTime,System.DateTime,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            更新商品資訊
            -----------------------------------------------
            20150903新增
            </summary>
            <param name="lastTrade"></param>
            <param name="settle"></param>
            <param name="refPrice"></param>
            <param name="upLimit"></param>
            <param name="dnLimit"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager">
            <summary>
            用來管理CommodityInfo的物件
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager._lockObject">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager._useHeuristicRule">
            <summary>
            是否啟用HeuristicRule來產生商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager._allCmds">
            <summary>
            所有的商品
            key值：商品在SST系統的代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager._derivatedCmds">
            <summary>
            衍生商品(不是一般的商品，不應該在finder中出現的)!!
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager._nullCmds">
            <summary>
            商品型態是NULL
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager._cmdCreaters">
            <summary>
            
            
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager._defaultManager">
            <summary>
            預設的商品管理員
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager.UseHeuristicRuleToCreateCommodityInfo">
            <summary>
            利用HeuristicRule來建立下單商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager.DefaultManager">
            <summary>
            預設的商品資訊管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager.CreateDummyCommodityInfo(System.String)">
            <summary>
            創建商品
            </summary>
            <param name="code">商品代碼(XXXX.YY的格式)，系統代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager.GetCommodity(System.String)">
            <summary>
            取得CommodityInfo，若不存在會回傳null
            </summary>
            <param name="Code">商品代碼(XXXX.YY的格式)，系統代碼</param>
            <returns>不存在:null</returns>
        </member>
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager.ResolveCodeAndGetCommodity(System.String)" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager.GetCommodity2(System.String)">
            <summary>
            取得CommodityInfo，若不存在會回傳NullCommodity
            </summary>
            <param name="code">商品代碼(XXXX.YY的格式)，系統代碼</param>
            <returns>不存在：NullCommodityInfo</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager.AddCommodity(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Int32)">
            <summary>
            加入CommodityInfo
            UpdateFlag:0:Replace,1:Update,2:Ignore
            </summary>
            <param name="info">商品資訊(在程式初始化階段被呼叫)</param>
            <param name="updateFlag">0:Replace,1:Update,2:Ignore</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager.AddDerivativedCommodity(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="dCmdInfo"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager.GetAllCommodities">
            <summary>
            取得目前所有商品的Enumeration
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager.Clear">
            <summary>
            清空CommodityInfo的所有static member資料
            注意，不要輕易執行這個功能
            (Unless you know what you're doing!)
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityInfoManager.RegisterCommodityCreater(CapitalPipe.LiteTrading.Commodities.HeuristicCommodityInfoCreater)">
            <summary>
            加入Heuristic商品的Creater
            </summary>
            <param name="creater"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityList">
            <summary>
            商品清單組合
            ==>用來表示某個分類下有哪些商品，ex：上櫃股票組合、指數類期貨…
            ==>舊的系統使用，deprecated
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityList.ClassID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityList.ClassTag1">
            <summary>
            類別Tag1
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityList.ClassTag2">
            <summary>
            類別Tag2
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityList.Commodities">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityList.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="clsID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityList.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="clsID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityList.AddCommodity(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityList.SortCommodities">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityListManager">
            <summary>
            商品清單管理員
                用來管理某類型的商品分類資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityListManager.ManagerID">
            <summary>
            商品清單管理員代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityListManager.AllClasses">
            <summary>
            所有的資產分類
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityListManager.ManagerIDs">
            <summary>
            所有的
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.CommodityListManager.Managers">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityListManager.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="mgrID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityListManager.GetCommodityList(System.String)">
            <summary>
            
            </summary>
            <param name="classID">
            如果是空白表示使用該CommodityListManager
            </param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityListManager.AddCommodity(System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="classID"></param>
            <param name="_cmdInfo"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityListManager.AddCommodity(System.String,System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="classID"></param>
            <param name="cmd"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityListManager.GetCommodityListManager(System.String)">
            <summary>
            
            </summary>
            <param name="mgrID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityListManager.AddCommodity(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="mgrID"></param>
            <param name="classID"></param>
            <param name="cmdInfo"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CommodityListManager.AddCommodityWithTags(System.String,System.String,System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            Added 2014/1/5
            </summary>
            <param name="mgrID"></param>
            <param name="classID"></param>
            <param name="tag1"></param>
            <param name="tag2"></param>
            <param name="cmdInfo"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityType">
            <summary>
            商品類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityType.Stock">
            <summary>
            股票類
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityType.Warrant">
            <summary>
            權證類
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityType.Convertible">
            <summary>
            可轉債類
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityType.ETF">
            <summary>
            ETF類
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityType.Futures">
            <summary>
            期貨類
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityType.FuturesSpread">
            <summary>
            期貨價差
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityType.Call">
            <summary>
            買權
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityType.Put">
            <summary>
            賣權
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityType.OptionCombo">
            <summary>
            選擇權複式商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityType.DepositReceipt">
            <summary>
            存託憑證類
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityType.Index">
            <summary>
            指數類
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityType.Cash">
            <summary>
            現貨(現金/商品現貨)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityType.Custom">
            <summary>
            自訂商品(結構型商品、OTC商品…)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityType.NULL">
            <summary>
            無法辨識商品(容錯使用)
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CommodityConstants">
            <summary>
            商品相關常數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.OneDayCalendar">
            <summary>
            一天(日曆日)的值 = (1 / 365)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.OneDayTradingDays">
            <summary>
            一天(交易日)的值 = (1 / 252)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.CalendarDaysInOneYear">
            <summary>
            一年的日曆日數量 = 365天
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.TradingDaysInOneYear">
            <summary>
            一年的交易日數量 = 252
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.BSOriginal">
            <summary>
            B.S.原始模型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.BSFutures">
            <summary>
            B.S.期貨選擇權模型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.BSPDE">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.AnyMonth">
            <summary>
            任何月份
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.AnyWeek">
            <summary>
            任何週
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.NearMonth1">
            <summary>
            最近月
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.NearMonth2">
            <summary>
            次近月
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.NearMonth3">
            <summary>
            次次近月
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.NearMonth4">
            <summary>
            次次次近月
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.NearMonth5">
            <summary>
            次次次次近月
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.HotMonth1">
            <summary>
            熱門月
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.HotMonth2">
            <summary>
            次熱門月
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.HotMonth3">
            <summary>
            次次熱門月
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.HotMonth4">
            <summary>
            次次次熱門月
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.HotMonth5">
            <summary>
            次次次次熱門月
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.AnyStrike">
            <summary>
            任意履約價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.Index_TaiwanStockExchangeWeightedIndex">
            <summary>
            臺灣加權指數的系統編碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.Index_TaiwanGreTaiSecuritiesMarketIndex">
            <summary>
            臺灣櫃買中心指數的系統編碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.Index_FTSETaiwan50Index">
            <summary>
            臺灣50指數的系統編碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.Index_TWSEElectronicsSectorIndex">
            <summary>
            臺灣電子指數的系統編碼(查不到編碼，使用自訂編碼)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.Index_TWSEFinancialSectorIndex">
            <summary>
            臺灣金融指數的系統編碼(使用Google編碼)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.Index_TWSENonFinancialNonElectronicsIndex">
            <summary>
            臺灣非金電指數的系統編碼(使用Google編碼)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.Index_Nikkei225">
            <summary>
            日經225指數(使用Bloomber編碼)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.Index_DowJonesIndustrialAverage">
            <summary>
            道瓊工業平均指數(使用Bloomber編碼)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.Index_GermanStockDAX">
            <summary>
            法蘭克福DAX指數(Frankfurter Wertpapierbörse)(使用Bloomberg編碼)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CommodityConstants.Index_KoreanStockExchangeKOSPI">
            <summary>
            韓國證交所KOSPI指數
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.UnderlyingType">
            <summary>
            標的資產類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.UnderlyingType.Cash">
            <summary>
            現貨 ==> 指數/商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.UnderlyingType.Futures">
            <summary>
            期貨
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.ContractInfo">
            <summary>
            契約資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractInfo._exchange">
            <summary>
            交易所別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractInfo._contractType">
            <summary>
            契約類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractInfo._description">
            <summary>
            契約說明
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractInfo._contractID">
            <summary>
            契約代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractInfo._factor">
            <summary>
            契約乘數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractInfo._underlying">
            <summary>
            標的資產
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractInfo._currencyID">
            <summary>
            基準貨幣，這個契約的計價貨幣
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractInfo._underlyingType">
            <summary>
            標的類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractInfo._underlyingMonthOffset">
            <summary>
            標的資產月份調整
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractInfo._settlementType">
            <summary>
            交割方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractInfo._tickID">
            <summary>
            TickID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractInfo._calendarID">
            <summary>
            日曆代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractInfo._settleID">
            <summary>
            結算代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractInfo._sessionID">
            <summary>
            時段代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfo.Underlying">
            <summary>
            標的商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfo.Exchange">
            <summary>
            交易所
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfo.ContractID">
            <summary>
            契約代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfo.ContractType">
            <summary>
            商品類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfo.Factor">
            <summary>
            契約乘數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfo.Description">
            <summary>
            契約說明
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfo.UnderlyingType">
            <summary>
            標的類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfo.UnderlyingMonthOffset">
            <summary>
            標的資產月份調整
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfo.SettlementType">
            <summary>
            交割方式
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfo.Currency">
            <summary>
            計價幣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfo.TickID">
            <summary>
            Tick規則代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfo.CalendarID">
            <summary>
            日曆代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfo.SettlementID">
            <summary>
            結算代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfo.SessionID">
            <summary>
            時段代碼
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractInfo.#ctor(System.String,System.String,System.Decimal,System.String,CapitalPipe.LiteTrading.Commodities.UnderlyingType,CapitalPipe.LiteTrading.Commodities.ContractType,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="exchange"></param>
            <param name="contract"></param>
            <param name="factor"></param>
            <param name="underlying"></param>
            <param name="undType"></param>
            <param name="contractType"></param>
            <param name="mthOffset"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractInfo.#ctor(System.String,System.String,System.Decimal,System.String,CapitalPipe.LiteTrading.Commodities.UnderlyingType,CapitalPipe.LiteTrading.Commodities.ContractType,System.Int32,System.String,CapitalPipe.LiteTrading.Commodities.CurrencyID,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor(新格式)
            </summary>
            <param name="exchange"></param>
            <param name="contract"></param>
            <param name="factor"></param>
            <param name="underlying"></param>
            <param name="undType"></param>
            <param name="contractType"></param>
            <param name="mthOffset"></param>
            <param name="description"></param>
            <param name="currID"></param>
            <param name="settlementType"></param>
            <param name="tickID"></param>
            <param name="calendarID"></param>
            <param name="settlementID"></param>
            <param name="sessionID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractInfo.LoadFromCSVFile(System.String)">
            <summary>
            自CSV檔載入契絕資料(檔案通常位於Data\Contracts.csv)
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractInfo.LoadFromCSVFileNew(System.String)">
            <summary>
            新格式
            </summary>
            <param name="filename"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.ContractInfoManager">
            <summary>
            使用前必須先完成初始化(所有資料在系統正式運作前皆已載入Expected!)
            Not Thread-Safe
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfoManager.AllContracts">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ContractInfoManager.DefaultManager">
            <summary>
            預設的ContractInfoManager
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractInfoManager.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractInfoManager.AddContractInfo(CapitalPipe.LiteTrading.Commodities.ContractInfo)">
            <summary>
            
            </summary>
            <param name="ctInfo"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractInfoManager.GetAllContractsInExchange(System.String)">
            <summary>
            取得某個交易所的所有契約
            </summary>
            <param name="exchangeID">交易所代碼</param>
            <returns>
            該交易所的所有契約資訊
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractInfoManager.GetContractInfo(System.String,System.String,CapitalPipe.LiteTrading.Commodities.ContractType)">
            <summary>
            查詢契約資料
            </summary>
            <param name="exchange">交易所代碼</param>
            <param name="contractID">契約代碼</param>
            <returns>
            找不到會回傳null
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractInfoManager.GetUnderlyingCommodity(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            取得某個商品的標的商品
            會依傳入商品的Exchange及ContractID來找尋ContractInfo，並回傳該ContractInfo的Underlying
            若找不到ContractInfo，會回傳null
            </summary>
            <param name="cmdInfo"></param>
            <returns>
            
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractInfoManager.GetExrightContractIDs(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="exchange"></param>
            <param name="contractID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractInfoManager.IsExRightContract(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="exchange"></param>
            <param name="contractID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractInfoManager.GetOriginalContractFromExRightContract(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="exchange"></param>
            <param name="contractID"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.ContractMappingEntry">
            <summary>
            外部系統的期貨/選擇權與RTS系統的期貨/選擇權的代碼轉換規則
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractMappingEntry.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="rtsExchange"></param>
            <param name="rtsContract"></param>
            <param name="hostExchange"></param>
            <param name="hostContract"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractMappingEntry.#ctor(System.String,System.String,System.String,System.String,System.String,System.Decimal)">
            <summary>
            
            </summary>
            <param name="rtsExchange"></param>
            <param name="rtsContract"></param>
            <param name="hostExchange"></param>
            <param name="hostContract"></param>
            <param name="contractType"></param>
            <param name="adjMultiplier"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractMappingManager.GetMappingFromRTSContract(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="rtsExchange"></param>
            <param name="rtsContract"></param>
            <param name="ctType"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractMappingManager.GetMappingFromHostContract(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="hostExchange"></param>
            <param name="hostContract"></param>
            <param name="ctType"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ContractMappingManager.AddMapping(CapitalPipe.LiteTrading.Commodities.ContractMappingEntry)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.ContractType">
            <summary>
            契約類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractType.NULL">
            <summary>
            未定義，Sentinel變數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractType.Futures">
            <summary>
            期貨
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ContractType.Option">
            <summary>
            選擇權
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.CurrencyID">
            <summary>
            貨幣ID，三碼：使用ISO4217標準<para/>
            For離岸人民幣的修改：加入XR_的Prefix，例如：離岸人民幣，香港用CNH，RTS系統用XR_CNH
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.TWD">
            <summary>
            台幣
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.USD">
            <summary>
            美元
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.JPY">
            <summary>
            日圓
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.HKD">
            <summary>
            港元
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.CNY">
            <summary>
            人民幣
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.THB">
            <summary>
            泰銖
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.SGD">
            <summary>
            新加坡幣
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.KRW">
            <summary>
            韓圜
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.IDR">
            <summary>
            印尼盾
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.VND">
            <summary>
            越南幣
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.MYR">
            <summary>
            馬來西亞幣
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.PHP">
            <summary>
            菲律賓披索
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.INR">
            <summary>
            印度盧比
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.AED">
            <summary>
            阿酋迪拉姆
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.KWD">
            <summary>
            科威特第納爾
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.AUD">
            <summary>
            澳幣
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.NZD">
            <summary>
            紐西蘭元
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.CAD">
            <summary>
            加拿大元
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.BRL">
            <summary>
            巴西里拉
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.MXN">
            <summary>
            墨西哥披索
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.ARS">
            <summary>
            阿根庭披索
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.CLP">
            <summary>
            智利披索
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.VEB">
            <summary>
            委內瑞拉博利爾
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.EUR">
            <summary>
            歐元
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.GBP">
            <summary>
            英磅
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.RUB">
            <summary>
            俄羅斯盧比
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.CHF">
            <summary>
            瑞士法朗
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.ZAR">
            <summary>
            南非幣
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.SEK">
            <summary>
            瑞典克朗
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.CurrencyID.XR_CNH">
            <summary>
            離岸人民幣
            </summary>
        </member>
        <!-- 已忽略成員 "T:CapitalPipe.LiteTrading.Commodities.CurrencyTool" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.Commodities.CurrencyTool.GetCurrencyIDFromString(System.String)">
            <summary>
            從字串中取得CurrencyID
            </summary>
            <param name="strID">代表CurrencyID的字串</param>
            <returns>CurrencyID</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.CurrencyTool.GetStringFromCurrencyID(CapitalPipe.LiteTrading.Commodities.CurrencyID)">
            <summary>
            從CurrencyID取得字串
            </summary>
            <param name="cID"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod">
            <summary>
            交易時段管理
            有些交易所可能會有n個可以交易的時段
            每個交易時段用一個物件來描述：Session
            SessionID：
                台灣選擇權      twOpt
                台灣期貨        twFut
            Usage:
                DailyTradingPeriod tr = DailyTradingPeriod.GetDailyTradingPeriod(_cmdInfo.SessionID);
                if(tr != null)
                {
                    Session ss = tr.GetTradingSession(DateTime.Now);
                    if(ss == null)
                    {
                        //Not in any trading sessions. Maby not open yet, or already closed.
                    }
                    else
                    {
                        //In trading session
                    }
                }
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod._ssID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.PeriodID">
            <summary>
            取得/設定 PeriodID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.UTCOffset">
            <summary>
            取得/設定 UTCOffset
            台灣是UTC + 8
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.Sessions">
            <summary>
            所有的Session
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.AllPeriods">
            <summary>
            取得所有的DailyTradingPeriod
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.#ctor(System.String,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="ssID"></param>
            <param name="utcOffset"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.AddSession(CapitalPipe.LiteTrading.Commodities.Session)">
            <summary>
            加入某個session
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.RemoveSession(CapitalPipe.LiteTrading.Commodities.Session)">
            <summary>
            移除某個Session
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.CalRemainSecs(System.DateTime)">
            <summary>
            取得該時間的距離收盤總秒數
            </summary>
            <param name="dt">時間(日期必需是1/1/1</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.GetTradingSession(System.DateTime)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.CalAllSecs">
            <summary>
            計算所有Session的總秒數
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.GetDailyTradingPeriod(System.String)">
            <summary>
            取得DailyTradingPeriod
            </summary>
            <param name="ssID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.AddDailyTradingPeriod(CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod)">
            <summary>
            加入DailyTradingPeriod
            </summary>
            <param name="period"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.RemoveDailyTradingPeriod(System.String)">
            <summary>
            移除DailyTradingPeriod
            </summary>
            <param name="periodID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.LoadFromFile(System.String)">
            <summary>
            自檔案載入(csv格式)
            </summary>
            <param name="fn"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.SaveToFile(System.String)">
            <summary>
            儲存到檔案(csv格式)
            </summary>
            <param name="fn"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.LoadFromFile">
            <summary>
            讀檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.SaveToFile">
            <summary>
            存檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.GetTimeDecayPercentage">
            <summary>
            取得當日的TimeDecay比分比(以目前的時間計算)
            </summary>
            <param name="daysInAYear"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DailyTradingPeriod.GetTimeDecayPercentage(System.DateTime)">
            <summary>
            取得當日的TimeDecay的百分比
            </summary>
            <param name="dt"></param>
            <param name="daysInAYear"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.DateInfo">
            <summary>
            日期資訊
            Key = "OFF", 表示假日
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.DateInfo.DateValue">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.DateInfo.Key">
            <summary>
            鍵值
            OFF:假日
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.DateInfo.Description">
            <summary>
            這筆日期資訊的說明
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.DateInfo.InitData">
            <summary>
            初始化資料
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.ExchangeInfo">
            <summary>
            交易所資訊，目前主要的用途為提供各交易所代碼的常數定義。
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo._isVirtual">
            <summary>
            是否為系統虛擬出來的交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo._id">
            <summary>
            交易所的代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo._name">
            <summary>
            交易所的名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo._exchanges">
            <summary>
            所有的交易所物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_Any">
            <summary>
            Wildcard，任何交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_TAIFEX">
            <summary>
            臺灣期貨交易所
            </summary>
            <value>TAIFEX</value>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_TWSE">
            <summary>
            臺灣證券交易所(含櫃買中心)
            </summary>
            <value>TWSE</value>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_SGX">
            <summary>
            新加坡交易所
            </summary>
            <value>SGX</value>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_CBOT">
            <summary>
            美國芝加哥期貨交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_CME">
            <summary>
            芝加哥商品交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_HKEX">
            <summary>
            香港交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_NYBOT">
            <summary>
            紐約期貨交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_NYMEX">
            <summary>
            紐約商品交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_COMEX">
            <summary>
            紐約商品交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_ICE">
            <summary>
            洲際交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_TOCOM">
            <summary>
            東京工業交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_OSE">
            <summary>
            大阪證券交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_TSE">
            <summary>
            東京證券交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_LME">
            <summary>
            倫敦金屬交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_LIFFE">
            <summary>
            倫敦金融期貨交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_KRX">
            <summary>
            韓國證券交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_DCE">
            <summary>
            大連商品交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_CZCE">
            <summary>
            鄭州商品交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_CFFEX">
            <summary>
            中國金融期貨交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_SFE">
            <summary>
            澳洲雪梨期貨交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_SHFE">
            <summary>
            上海期貨交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_SSE">
            <summary>
            上海證券交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_SZSE">
            <summary>
            深圳證券交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_EUREX">
            <summary>
            歐洲易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_JPX">
            <summary>
            日本交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_EURONEXT">
            <summary>
            泛歐交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_FWB">
            <summary>
            法蘭克福證交所(Frankfurter Wertpapierbörse)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_NASDAQ">
            <summary>
            NASDAQ
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_CASH">
            <summary>
            現貨(商品現貨/現金)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_Index">
            <summary>
            無法歸類的指數(跨交易所)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID_CBOE">
            <summary>
            芝加哥選擇權交易所
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.Name">
            <summary>
            交易所名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ID">
            <summary>
            交易所的代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.NameAndID">
            <summary>
            名稱(交易所代碼)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.IsVirtual">
            <summary>
            是否為系統虛擬的交易所
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.Exchanges">
            <summary>
            所有的交易所物件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.ExchangeIDs">
            <summary>
            交易所ID列表
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.DefaultCustomExchangeSettingFile">
            <summary>
            預設的自訂交易所檔案
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.#cctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="id">交易所的代碼</param>
            <param name="name">交易所的名稱</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="id">交易所的代碼</param>
            <param name="name">交易所的名稱</param>
            <param name="isvirtual">是否為虛擬出來的交易所</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.GetExchange(System.String)">
            <summary>
            利用代碼取得交易所物件
            </summary>
            <param name="exID">交易所代碼</param>
            <returns>
            有找到：交易所物件<para/>
            找不到：null值
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.GetExchangeByName(System.String)">
            <summary>
            利用交易所名稱取得交易所物件
            </summary>
            <param name="exName">交易所的名稱</param>
            <returns>
            有找到：交易所物件<para/>
            找不到：null值
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.LoadCustomExchangesFromCSV">
            <summary>
            載入自定交易所檔案(使用預設檔名)
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeInfo.LoadCustomExchangesFromCSV(System.String)">
            <summary>
            載入自定交易所檔案(使用自行指定檔案)
            </summary>
            <param name="filename">檔案名稱</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.FXRateEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.FXRateEventArgs.#ctor(CapitalPipe.LiteTrading.Commodities.FXData)">
            <summary>
            
            </summary>
            <param name="eventData"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.FXRateDataEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager">
            <summary>
            匯率資料管理員
            匯率轉換:A幣>USD>B幣
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager._updateLock">
            <summary>
            更新資料使用的Lock物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager._ratesToUSD">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager._crossRates">
            <summary>
            交叉匯率
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager._cachedRatesToUSD">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager._rateUsing">
            <summary>
            
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager.OnToUSDRateChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager.RateConversionUsing">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager.ToUSDRates">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager.AddRateToUSDData(CapitalPipe.LiteTrading.Commodities.CurrencyID,System.Decimal)">
            <summary>
            系統初始化時增加匯率資料
            </summary>
            <param name="currency"></param>
            <param name="value"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager.UpdateRateToUSDData(CapitalPipe.LiteTrading.Commodities.CurrencyID,System.Decimal,System.Int32)">
            <summary>
            0:Lst,1:ask,-1:bid
            </summary>
            <param name="currency"></param>
            <param name="value"></param>
            <param name="side">0:Lst,1:ask,-1:bid</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager.UpdateRateToUSDData(CapitalPipe.LiteTrading.Commodities.CurrencyID,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            
            </summary>
            <param name="currency"></param>
            <param name="value"></param>
            <param name="side"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager.UpdateBidRateToUSDData(CapitalPipe.LiteTrading.Commodities.CurrencyID,System.Decimal)">
            <summary>
            
            </summary>
            <param name="currency"></param>
            <param name="value"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager.UpdateAskRateToUSDData(CapitalPipe.LiteTrading.Commodities.CurrencyID,System.Decimal)">
            <summary>
            
            </summary>
            <param name="currency"></param>
            <param name="value"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager.GetRateToUSD(CapitalPipe.LiteTrading.Commodities.CurrencyID)">
            <summary>
            
            </summary>
            <param name="currency"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager.GetBidRateToUSD(CapitalPipe.LiteTrading.Commodities.CurrencyID)">
            <summary>
            
            </summary>
            <param name="currency"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager.GetAskRateToUSD(CapitalPipe.LiteTrading.Commodities.CurrencyID)">
            <summary>
            
            </summary>
            <param name="currency"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager.GetRate(CapitalPipe.LiteTrading.Commodities.CurrencyID,CapitalPipe.LiteTrading.Commodities.CurrencyID)">
            <summary>
            currency1 == To
            currency2 == From
            把Currency2換成Currency
            </summary>
            <param name="targetCurrency"></param>
            <param name="currentCurrency"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager.UpdateCrossRateData(CapitalPipe.LiteTrading.Commodities.CurrencyID,CapitalPipe.LiteTrading.Commodities.CurrencyID,System.Decimal)">
            <summary>
            
            </summary>
            <param name="currency1"></param>
            <param name="currency2"></param>
            <param name="value"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.ExchangeRatesManager.GetCrossRateData(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="currency1"></param>
            <param name="currency2"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.FXData">
            <summary>
            匯率的資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.FXData._pauseUpdate">
            <summary>
            是否暫停更新？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.FXData.BaseCurrency">
            <summary>
            基準的幣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.FXData.ForeignCurrency">
            <summary>
            轉換成的幣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.FXData.LastRate">
            <summary>
            最後成交orMiddle價匯率
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.FXData.BidRate">
            <summary>
            買進匯率
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.FXData.AskRate">
            <summary>
            賣出匯率
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.FXData.PauseUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.FXData.#ctor(CapitalPipe.LiteTrading.Commodities.CurrencyID,CapitalPipe.LiteTrading.Commodities.CurrencyID)">
            <summary>
            
            </summary>
            <param name="baseCurrency"></param>
            <param name="foreignCurrency"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.ExchangeRateUsing">
            <summary>
            使用匯率資料方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeRateUsing.ConvertToUSD">
            <summary>
            一律換算成美元
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ExchangeRateUsing.CrossRates">
            <summary>
            使用交叉匯率
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.ExposureInfo">
            <summary>
            曝險
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.ExposureCommodity">
            <summary>
            曝險商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.ExposureAmount">
            <summary>
            約當曝險金額
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.ExposureLots">
            <summary>
            約當曝險數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.HoldingAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.HoldingLots">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.LongExposureLots">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.LongExpsoure">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.ShortExposureLots">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.ShortExposure">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.ExposureAmountString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.ExposureLotsString">
            <summary>
            ``
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.ExposureLotsAsRoundLots">
            <summary>
            約當曝險數量(整股單位)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.ExposureLotsAsRoundLotsString">
            <summary>
            約當曝險數量(整股單位)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.HoldingAmountString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.HoldingLotsString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.HoldingLotsAsRoundLotsString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.LongExpsoureString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.ExposureInfo.ShortExpsoureString">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.HeuristicCommodityInfoCreater">
            <summary>
            經驗法則商品產生器
            </summary>
            <remarks>
            用利經驗法則來建立商品摘要資訊的Creater，這裡只提供介面的定義。這個介面用來設計在遇到商品檔沒有定義的商品時的容錯處理機制。
            可以依各交易所的商品屬性設計在只拿到商品的交易所代碼時，如何由這個代碼推敲產生CommodityInfo的機制。
            </remarks>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.HeuristicCommodityInfoCreater.CreateCommodity(System.String)">
            <summary>
            產生容錯的商品
            </summary>
            <param name="code">商品代碼</param>
            <returns>
            如果有辦法以商品代碼產生一個對應的容錯用商品資訊(CommodityInfo)物件，則產生並回傳。
            如果沒有辦法，則回傳null值。
            </returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder">
            <summary>
            以LINQ實做的CommodityFinder
            預設的CommodityFinder是這一個
            在Application中，必須呼叫Init才可使用(DefaultFinder才會成LinQCommodityFinder)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder._allCmds">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder._monthSequenceByContract">
            <summary>
            Cache Data
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder._monthHotnessByContract">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder._optionPairsCache">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder._optionContractsCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.Init">
            <summary>
            初始化，將DefaultFinder設成LinQCommodityFinder的Instance
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.Update">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetMonths(System.String,System.String,CapitalPipe.LiteTrading.Commodities.ContractType)">
            <summary>
            取得指定的[交易所，契約代碼]的所有月份
            不包括複式商品
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <returns>所有的到期月份，由小到大排序</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetSettleKeys(System.String,System.String,CapitalPipe.LiteTrading.Commodities.ContractType)">
            <summary>
            取得所有的結算期別(YYYYMMDDWW)
            不包括複式商品
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <returns>所有的結算期別，由小到大排序</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetMonthBySequence(System.String,System.String,System.Int32,CapitalPipe.LiteTrading.Commodities.ContractType)">
            <summary>
            取得某契約第x個到期的月份
            不包括複式商品
            -------------------------------------------
            20140916 加入Cache機制
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="sequence">到期合約順序(1:最先到期；2:次到期…)</param>
            <returns>到期的月份，若找不到會回傳-1</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetMonthByActivity(System.String,System.String,System.Int32,CapitalPipe.LiteTrading.Commodities.ContractType)">
            <summary>
            取得某契約第x個到期的月份
            不包括複式商品
            -------------------------------------------
            20140916 加入Cache機制
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="sequence">到期合約順序(1:最先到期；2:次到期…)</param>
            <returns>到期的月份，若找不到會回傳-1</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetWeekBySequence(System.String,System.String,System.Int32,CapitalPipe.LiteTrading.Commodities.ContractType)">
            <summary>
            取得某契約第x個到期的週序
            不包括複式商品
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="sequence">到期合約順序(1:最先到期；2:次到期…)</param>
            <returns>到期的月份，若找不到會回傳-1</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetOptionIDs(System.String)">
            <summary>
            取得所有的選擇權契約代碼
            不包括複式商品
            </summary>
            <param name="exchange">交易所</param>
            <returns>所有的選擇權契約代碼</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetFuturesIDs(System.String)">
            <summary>
            取得所有的期貨契約代碼
            不包括複式商品
            </summary>
            <param name="exchange">交易所</param>
            <returns>所有的期貨契約代碼</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetExchanges">
            <summary>
            取得所有的交易所代碼
            </summary>
            <returns>所有的交易所代碼列表</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetContractIDs(System.String)">
            <summary>
            取得某交易所的所有契約代碼
            不包括複式商品
            </summary>
            <param name="strExchange">交易所</param>
            <returns>所有的契約代碼列表</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetStrikes(System.String,System.String)">
            <summary>
            取得所有的履約價
            不包括複式商品
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <returns>所有的履約價列表(由小到大排序)</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetStrikes(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityType)">
            <summary>
            取得所有的履約價
            不包括複式商品
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="type">商品類型</param>
            <returns>所有的履約價(由小到大排序)</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetStrikes(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            取得所有的履約價
            不包括複式商品
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="month">到期月份</param>
            <param name="week"></param>
            <returns>所有的履約價(由小到大排序)</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetStrikes(System.String,System.String,System.Int32,System.Int32,CapitalPipe.LiteTrading.Commodities.CommodityType)">
            <summary>
            取得所有的履約價
            不包括複式商品
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="month">到期月份</param>
            <param name="week">到期週序</param>
            <param name="type">商品類型</param>
            <returns>所有的履約價(由小到大排序)</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetSingleCommodity(System.String)">
            <summary>
            取得單一商品資訊
            </summary>
            <param name="code">商品代碼</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetCommodity(System.String,System.String,System.Int32,System.Int32,CapitalPipe.LiteTrading.Commodities.CommodityType,System.Decimal)">
            <summary>
            取得商品資訊
            不含複式商品
            這個 function 有 cache 機制. 
            所以要新增商品時,不能使用這個 function 來判斷商品是否存在!
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="month">到期月份</param>
            <param name="week">到期週序</param>
            <param name="cmdType">商品類型</param>
            <param name="strike">履約價</param>
            <returns>商品資訊，若找不到會回傳null，
            若有多個商品符合條件，則只會回傳第一個</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetComboCommodity(System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            取得複式商品資訊(假設買進)
            20150607
            ※ 修改定義，使得兩隻腳交換變成可行
            </summary>
            <param name="leg1Code">第一隻腳代碼</param>
            <param name="leg1BS">複式商品買進時，第一隻腳的買賣別</param>
            <param name="leg2Code">第二隻腳代碼</param>
            <param name="leg1BS">複式商品買進時，第二隻腳的買賣別</param>
            <returns>商品資訊，若找不到會回傳null，
            若有多個商品符合條件，則只會回傳第一個</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetCommodityBySeriesSequence(System.String,System.String,System.Int32)">
            <summary>
            取得商品資訊
            不含複式商品
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="seriesSeq">到期順序(1:最先到期；2:次到期…)</param>
            <returns>商品資訊，若找不到會回傳null，
            若有多個商品符合條件，則只會回傳第一個</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetCommodityBySeriesSequence(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityType,System.Int32)">
            <summary>
            取得商品資訊
            不含複式商品
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="type">商品類型</param>
            <param name="seriesSeq">到期順序(1:最先到期；2:次到期…)</param>
            <returns>商品資訊，若找不到會回傳null，
            若有多個商品符合條件，則只會回傳第一個</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetCommodity(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="exchange"></param>
            <param name="exchangeCode"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetComboCommodities(System.String,System.String)">
            <summary>
            取得複式商品資訊
            </summary>
            <param name="leg1Code">第一隻腳代碼</param>
            <param name="leg2Code">第二隻腳代碼</param>
            <returns>商品資訊</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetCommodities(System.String,System.String)">
            <summary>
            取得商品集合
            不包括複式商品
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetCommodities(System.String,System.String,System.Boolean)">
            <summary>
            取得商品集合 ==> 含複式商品(使用isCombo Flag)
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="isCombo">true:僅複式商品；false:非複式商品</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetCommodities(System.String,System.String,System.Int32)">
            <summary>
            取得商品集合
            不包括複式商品
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="month">到期月份</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetCommodities(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityType)">
            <summary>
            取得商品集合
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="cmdType">商品類型</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetCommodities(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            取得商品集合 ==> 含複式商品(使用isCombo Flag)
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="month">到期月份</param>
            <param name="isCombo">true:僅複式商品；false:非複式商品</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetCommodities(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityType,System.Int32)">
            <summary>
            取得商品集合
            不包括複式商品
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="cmdType">商品類型</param>
            <param name="month">到期月份</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetCommodities(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityType,System.Int32,System.Boolean)">
            <summary>
            取得商品集合 ==> 含複式商品(使用isCombo Flag)
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="cmdType">商品類型</param>
            <param name="month">到期月份</param>
            <param name="isCombo">true:僅複式商品；false:非複式商品</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetCommoditiesBySeriesSequence(System.String,System.String,System.Int32)">
            <summary>
            取得商品集合
            不包括複式商品
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="seriesSeq">到期順序</param>
            <returns>商品集合，期貨=>1個，選擇權=>該期別所有選擇權商品</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetCommoditiesByHotness(System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="exchange"></param>
            <param name="contractID"></param>
            <param name="hotnessSeq"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetCommoditiesBySeriesSequence(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityType,System.Int32)">
            <summary>
            取得商品集合
            不包括複式商品
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="cmdType">商品類型</param>
            <param name="seriesSeq">到期順序</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetCommoditiesByHotness(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityType,System.Int32)">
            <summary>
            取得商品集合
            不包括複式商品
            </summary>
            <param name="exchange">交易所</param>
            <param name="contractID">契約代碼</param>
            <param name="cmdType">商品類型</param>
            <param name="hotnessSeq">熱門順序</param>
            <returns>商品集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.LinQCommodityFinder.GetOptionSeries(System.String,System.String,System.Int32,System.Int16)">
            <summary>
            
            </summary>
            <param name="exchange"></param>
            <param name="contractID"></param>
            <param name="month"></param>
            <param name="week"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.OptionComboEventArgs.#ctor(CapitalPipe.LiteTrading.Commodities.OptionCombo,CapitalPipe.LiteTrading.Commodities.OptionComboEventType)">
            <summary>
            
            </summary>
            <param name="combo"></param>
            <param name="evType"></param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.OptionCombo._legs">
            <summary>
            選擇權的腳
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.OptionCombo._comboCommodity">
            <summary>
            複式商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.OptionCombo._bidPrice">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.OptionCombo._askPrice">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.OptionCombo._bidQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.OptionCombo._askQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Commodities.OptionCombo.OnComboChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.OptionCombo.ComboCommodity">
            <summary>
            對應到的複式商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.OptionCombo.BidPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.OptionCombo.AskPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.OptionCombo.BidQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.OptionCombo.AskQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.OptionCombo.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="comboInfo"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.SelectedOptionDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SelectedOptionDescriptor._seriesCode">
            <summary>
            序列簡碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SelectedOptionDescriptor._upperBondStart">
            <summary>
            上界起始Strike
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SelectedOptionDescriptor._upperBondEnd">
            <summary>
            上界結束Strike
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SelectedOptionDescriptor._lowerBondStart">
            <summary>
            下界起始Strike
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SelectedOptionDescriptor._lowerBondEnd">
            <summary>
            下界結束Strike
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SelectedOptionDescriptor._optType">
            <summary>
            選擇權類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SelectedOptionDescriptor.SeriesCode">
            <summary>
            序列
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SelectedOptionDescriptor.UpperBondStart">
            <summary>
            上界起始Strike
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SelectedOptionDescriptor.UpperBondEnd">
            <summary>
            上界結束Strike
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SelectedOptionDescriptor.LowerBondStart">
            <summary>
            下界起始Strike
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SelectedOptionDescriptor.LowerBondEnd">
            <summary>
            下界結束Strike
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SelectedOptionDescriptor.SelectedOptionType">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SelectedOptionDescriptor.ToXMLNode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SelectedOptionDescriptor.ParseXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xNode"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.OptionType">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.OptionPair">
            <summary>
            OptionPair：用來描途同一到期月份且同一strike的Call/Put組合
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.OptionPair._strike">
            <summary>
            履約價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.OptionPair._callLeg">
            <summary>
            Call腳
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.OptionPair._putLeg">
            <summary>
            Put腳
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.OptionPair.Strike">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.OptionPair.CallLeg">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.OptionPair.PutLeg">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.OptionPair.#ctor(System.Decimal,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="strike"></param>
            <param name="call"></param>
            <param name="put"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester">
            <summary>
            選擇權序列摘要物件，提供以下功能：
            ------------------------------------------
            ※ 找出ATM Strike，若spot剛好在兩個履約價的中間，取較小的履約價
            ------------------------------------------
            若某個strike只有call或是put，忽略該strike，但是要出warning
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester._exchange">
            <summary>
            該選擇權序列的交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester._contractID">
            <summary>
            該選擇權序列的契約代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester._month">
            <summary>
            該選擇權序列的到期月份
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester._week">
            <summary>
            該選擇權序列的到期週序
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester._syncFutures">
            <summary>
            該月份的所有合成期貨
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester._seriesDigesters">
            <summary>
            Key值是SeriesCode
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.Exchange">
            <summary>
            該選擇權序列的交易所 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.ContractID">
            <summary>
            該選擇權序列的契約代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.Month">
            <summary>
            該選擇權序列的到期月份
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.WeekSequence">
            <summary>
            該選擇權序列的到期週序
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.AllDigesters">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.#ctor(System.String,System.String,System.Int32,System.Int16)">
            <summary>
            
            </summary>
            <param name="exchange"></param>
            <param name="contractID"></param>
            <param name="month"></param>
            <param name="week"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.Fut_OnSysntehticFuturesUpdate(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.GetBestBidSyntheticFutures">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.GetBestAskSyntheticFutures">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.GetATMStrike">
            <summary>
            找不到會回傳Utility.NullDecimal
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.GetSyntheticFuturesMiddlePrice">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.GetUpperOptions(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.GetLowerOptions(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.GetAMTOptions">
            <summary>
            找不到會回傳null!!
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.GetOptionSeriesDigester(System.String)">
            <summary>
            
            </summary>
            <param name="seriesCode"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.OptionSeriesDigester.GetOptionSeriesDigester(System.String,System.String,System.Int32,System.Int16)">
            <summary>
            
            </summary>
            <param name="exchange"></param>
            <param name="contract"></param>
            <param name="month"></param>
            <param name="week"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.Portfolio">
            <summary>
            投資組合物件
            內容包含:
              1.Name:組合名稱
              2.Description:組合描述
              3.Accounts:組合帳號
              4.Identifiers:組合商品群組
              5.CanDelete:物件可否被刪除
              6.CanEdit:物件可否被修改
            這裡所使用CommodityIdentifier來源為XML所定義的關係
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.Portfolio.GUID">
            <summary>
            投資組合物件GUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.Portfolio.PortfolioName">
            <summary>
            投資組合名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.Portfolio.PortfolioDescription">
            <summary>
            投資組合描述
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.Portfolio.Accounts">
            <summary>
            組合成員帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.Portfolio.Identifiers">
            <summary>
            組合成員商品群組
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.Portfolio.CanDelete">
            <summary>
            投資組合可否被刪除
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.Portfolio.CanEdit">
            <summary>
            投資組合可否被修改
            </summary>
        </member>
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.Commodities.Portfolio.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{CapitalPipe.LiteTrading.Orders.AccountInfo},System.Collections.Generic.List{CapitalPipe.LiteTrading.Commodities.CommodityIdentifier})" 中格式錯誤的 XML 註解 -->
        <member name="T:CapitalPipe.LiteTrading.Commodities.PortfolioManager">
            <summary>
            投資組合管理員
            可新增、編輯、刪除、查詢投資組合
            此物件初始化後會會讀取Identifier.xml
            產生對應CommodityIdentifier供使用者選取
            該檔案定義在PrimeTrading.SystemResources.PortfolioUsingDefinationFile
            
            
            ....................................................................
            DefaultManager建立時會預設一個包含所有帳號及市場的投資組合，不可刪除及修改
            一經建立後即存在系統當中，直到系統被關閉為止
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.PortfolioManager.DefaultSettingFile">
            <summary>
            預設值的檔案
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.PortfolioManager.DefaultManager">
            <summary>
            預設的投資組合管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.PortfolioManager.GetPortfolio(System.String)">
            <summary>
            取得投資組合
            </summary>
            <param name="guid">投資組合代碼</param>
            <returns>回傳投資組合，若找不到會回傳null</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.PortfolioManager.GetAllPortfolios">
            <summary>
            取得所有的投資組合
            </summary>
            <returns>回傳全部投資組合，若沒有投資組合會回傳null</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.PortfolioManager.AddPortfolio(System.String,CapitalPipe.LiteTrading.Commodities.Portfolio)">
            <summary>
            增加投資組合
            </summary>
            <param name="guid">投資組合代碼</param>
            <param name="portfolio">投資組合物件</param>
            <returns>若投資組合已存在，會回傳Null。
            若不存在，則會新增一個並加到_allCombinaions，並回傳新增的投資組合。</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.PortfolioManager.RemovePortfolio(System.String)">
            <summary>
            刪除投資組合
            </summary>
            <param name="guid">投資組合代碼</param>
            <returns>若成功刪除會回傳True，失敗則回傳False</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.PortfolioManager.EditPortfolio(System.String,CapitalPipe.LiteTrading.Commodities.Portfolio)">
            <summary>
            修改投資組合
            </summary>
            <param name="guid">投資組合代碼</param>
            <param name="portfolio">投資組合物件</param>
            <returns>如果修改成功會回傳Positionportfolio，失敗則回傳Null</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.PortfolioManager.GetCommodityIdentifier(System.String)">
            <summary>
            取得某個商品識別元
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.PortfolioManager.SaveSettings(System.String)">
            <summary>
            儲存使用者投資組合設定
            </summary>
            <param name="fn"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.SpreadType">
            <summary>
            報價寬度的決定方式
            檔案Data>QuoteSpreads.csv
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SpreadType.Ticks">
            <summary>
            報價寬度是xx個Tcik，例如：GTF/GBF/TGF...
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SpreadType.Points">
            <summary>
            報價寬度是xx點，例如：TXO/TEO/...
            </summary>
        </member>
        <!-- 已忽略成員 "F:CapitalPipe.LiteTrading.Commodities.SpreadType.Percentages" 中格式錯誤的 XML 註解 -->
        <!-- 已忽略成員 "F:CapitalPipe.LiteTrading.Commodities.SpreadType.MaxOfPercentagesAndPoints" 中格式錯誤的 XML 註解 -->
        <member name="F:CapitalPipe.LiteTrading.Commodities.SpreadType.DCESpread">
            <summary>
            For大商所特別的Spread類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SpreadType.None">
            <summary>
            
            </summary>
        </member>
        <!-- 已忽略成員 "T:CapitalPipe.LiteTrading.Commodities.QuoteSpread" 中格式錯誤的 XML 註解 -->
        <member name="F:CapitalPipe.LiteTrading.Commodities.QuoteSpread.SpreadType">
            <summary>
            寬度類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.QuoteSpread.RangeBegin">
            <summary>
            寬度範圍起點(含等號)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.QuoteSpread.RangeEnd">
            <summary>
            寬度範圍結束(不含等號)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.QuoteSpread.Spread">
            <summary>
            報價寬度值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.QuoteSpread.MinimalSpread">
            <summary>
            For大商所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.QuoteSpread.MaximumSpread">
            <summary>
            For上證所
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager">
            <summary>
            報價寬度管理員
            報價寬度設定檔：QuoteSpreads.csv(SmartTrading\Data目錄下)
            要取得Spread資訊：必須要有商品的TermID(近月/遠月/全部？)
            要解SpreadID及TermID
            --------------------------------------------------------
            提供簡易的演算法：
            ※ 由middle price反推bid/ask價
            ※ 由ask價推算bid價
            ※ 由bid價推算ask價
            </summary>
        </member>
        <!-- 已忽略成員 "T:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.IQuoteSpreadInfoResolver" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.IQuoteSpreadInfoResolver.CanResolveIDs(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            能否回答某個商品的TermID？
            </summary>
            <param name="cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.IQuoteSpreadInfoResolver.GetTermID(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            取得某個商品的TermID
            </summary>
            <param name="cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.IQuoteSpreadInfoResolver.GetSpreadID(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            取得SpreadID
            </summary>
            <param name="cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.IQuoteSpreadInfoResolver.GetActiveQuotationTermID(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            取得某個商品主動報價時的TermID
            </summary>
            <param name="cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.IQuoteSpreadInfoResolver.GetReplyQuoteTermID(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            取得某個商品回應詢價時的TermID
            </summary>
            <param name="cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.IQuoteSpreadInfoResolver.GetActiveQuotationSpreadID(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            取得某個商品主動報價時的Spread ID
            </summary>
            <param name="cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.IQuoteSpreadInfoResolver.GetReplyQuoteSpreadID(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            取得某個商品回應詢價時的Spread ID
            </summary>
            <param name="cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.IQuoteSpreadInfoResolver.GetMinimumQuotationQuantity(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Decimal)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager._idResolvers">
            <summary>
            所有的TermID Resovler
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager._spreads">
            <summary>
            key值 = spreadID + "@" + exchangeID + "#" + termID;
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager._defaultManager">
            <summary>
            Instance
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.MaxIteration">
            <summary>
            最大的iteraton次數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.DefaultManager">
            <summary>
            預設的Spread管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.#ctor">
            <summary>
            Constructor
            實做Singleton
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.RegisterTermIDResolver(CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.IQuoteSpreadInfoResolver)">
            <summary>
            註冊TermID Resolver
            </summary>
            <param name="termIDResolver"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.QueryTermID(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            查詢某個商品的TermID
            </summary>
            <param name="cmdInfo"></param>
            <returns>
            如果查不到會回傳string.Empty
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.QueryActiveQuotationTermID(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.QueryReplyTermID(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.QuerySpreadID(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            查詢某個商品的Spread ID 
            </summary>
            <param name="cmdInfo"></param>
            <returns>
            如果查不到會回傳string.Empty
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.QueryActiveQuotationSpreadID(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.QueryReplySpreadID(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.AddSpreadInfo(System.String,System.String,System.String,System.Collections.Generic.List{CapitalPipe.LiteTrading.Commodities.QuoteSpread})">
            <summary>
            新增多筆報價寬度資料
            </summary>
            <param name="exchangeID">交易所的代碼</param>
            <param name="spreadID">報價Spread的ID</param>
            <param name="termID">期別ID</param>
            <param name="spreads"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.AddSpreadInfo(System.String,System.String,System.String,CapitalPipe.LiteTrading.Commodities.QuoteSpread)">
            <summary>
            新增一筆報價寬度資料
            </summary>
            <param name="exchangeID">交易所的代碼</param>
            <param name="spreadID">報價Spread的ID</param>
            <param name="termID">ID</param>
            <param name="spread"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.GetSpreadInfo(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Decimal)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.GetSpreadInfo(System.String,System.String,System.String,System.Decimal)">
            <summary>
            查詢報價寬度
            </summary>
            <param name="exchangeID"></param>
            <param name="spreadID"></param>
            <param name="termID"></param>
            <param name="price"></param>
            <returns>
            若查不到資料，Spread會填 -1
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.GetSpreadValue(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.String,System.String,System.String,System.Decimal)">
            <summary>
            
            </summary>
            <param name="exchangeID"></param>
            <param name="spreadID"></param>
            <param name="termID"></param>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.GetMinimumQuotationQuantity(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Decimal)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.LoadFromCSVFile(System.String)">
            <summary>
            自CSV檔載入Quote Spread
            </summary>
            <param name="filename">CSV檔</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.CalculateBidAskByMiddlePrice(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.String,System.String,System.Decimal,System.Decimal@,System.Decimal@)">
            <summary>
            由理論價反推計算買賣報價
            ==>中價已知的情況下，反推買價/賣價應該要是多少
            </summary>
            <param name="cmd">商品資訊</param>
            <param name="spreadID">商品的SpreadID</param>
            <param name="termID">商品的TermID</param>
            <param name="midPrice">中價</param>
            <param name="bidPrice">買價，by ref，是回傳值</param>
            <param name="askPrice">賣價，by ref，是回傳值</param>
            <returns>
            true：計算成功
            flase：無法計算
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.CalculateBidAskByMiddlePrice(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.String,System.String,System.Decimal,System.Decimal,System.Decimal@,System.Decimal@)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <param name="spreadID"></param>
            <param name="termID"></param>
            <param name="midPrice"></param>
            <param name="bidPrice"></param>
            <param name="askPrice"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.CalculateBidAskByBidPrice(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.String,System.String,System.Decimal,System.Decimal@,System.Decimal@)">
            <summary>
            由買價去反推賣價
            </summary>
            <param name="cmd">商品資訊</param>
            <param name="spreadID">商品的SpreadID</param>
            <param name="termID">商品的TermID</param>
            <param name="startPrice">起始價</param>
            <param name="bidPrice">買價，by ref，是回傳值</param>
            <param name="askPrice">賣價，by ref，是回傳值</param>
            <returns>
            true：計算成功
            flase：無法計算
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.CalculateBidAskByAskPrice(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.String,System.String,System.Decimal,System.Decimal@,System.Decimal@)">
            <summary>
            由Ask價反推Bid價
            </summary>
            <param name="cmd">商品資訊</param>
            <param name="spreadID">商品的SpreadID</param>
            <param name="termID">商品的TermID</param>
            <param name="startPrice"></param>
            <param name="bidPrice">買價，by ref，是回傳值</param>
            <param name="askPrice">賣價，by ref，是回傳值</param>
            <returns>
            true：計算成功
            flase：無法計算
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.AskPriceFromBidPrice(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.String,System.String,System.Decimal)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <param name="spreadID">商品的SpreadID</param>
            <param name="termID"></param>
            <param name="bidPrice"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.AskPriceFromBidPrice(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Decimal,CapitalPipe.LiteTrading.Commodities.QuoteSpread)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <param name="bidPrice"></param>
            <param name="spread"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.AskPriceFromBidPrice(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Decimal,CapitalPipe.LiteTrading.Commodities.QuoteSpread,System.Decimal)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <param name="bidPrice"></param>
            <param name="spread"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.BidPriceFromMiddlePrice(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Decimal,System.String,System.String)">
            <summary>
            由中價來反推買進價(middle price介於bid/ask間的最小bid價)
            </summary>
            <param name="cmd"></param>
            <param name="midPrice"></param>
            <param name="spread"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.BidPriceFromMiddlePrice(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Decimal,System.String,System.String,System.Decimal)">
            <summary>
            由中價來反推買進價(middle price介於bid/ask間的最小bid價)
            </summary>
            <param name="cmd"></param>
            <param name="midPrice"></param>
            <param name="spread"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.QuoteSpreadManager.BidPriceFromAskPrice(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.String,System.String,System.Decimal)">
            <summary>
            由Ask價反推bid價
            </summary>
            <param name="cmd"></param>
            <param name="midPrice"></param>
            <param name="spreadID">商品的SpreadID</param>
            <param name="termID"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.SeriesResolver">
            <summary>
            用來解析某個合約序列
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SeriesResolver.DefaultResolver">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SeriesResolver.ResolverContractSeries(System.String)">
            <summary>
            
            </summary>
            <param name="seriesCode">
            某個月合約的系統編碼，格式：
                Exchange.ContractID.Opt#C1
                Exchange.ContractID.Fut#C2
                ==> 問題：週選擇權如何描述？
            </param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.Session">
            <summary>
            Session資料
                To Do:改成TradePeriod機制？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.Session.preSessionSecs">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.Session.postSessionSecs">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.Session.sessionBegin">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.Session.sessionEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.Session._sessionBeginReal">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.Session._sessionEndReal">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.Session.PreSessionSecs">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.Session.PostSessionSecs">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.Session.SessionBegin">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.Session.SessionEnd">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.Session.#ctor(System.TimeSpan,System.TimeSpan,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="dtBegin">起始時間</param>
            <param name="dtEnd">結束時間</param>
            <param name="pre"></param>
            <param name="post"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.Session.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.Session.CompareTo(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.Session.InSession(System.TimeSpan)">
            <summary>
            是否在Session裡面
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.Session.InSessionEnd(System.TimeSpan)">
            <summary>
            是否為Session結尾，不含等號
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.Session.InSessionBegin(System.TimeSpan)">
            <summary>
            是否為Session開始
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.Session.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.Session.op_Equality(CapitalPipe.LiteTrading.Commodities.Session,CapitalPipe.LiteTrading.Commodities.Session)">
            <summary>
            
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.Session.op_Inequality(CapitalPipe.LiteTrading.Commodities.Session,CapitalPipe.LiteTrading.Commodities.Session)">
            <summary>
            
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.Session.op_LessThan(CapitalPipe.LiteTrading.Commodities.Session,CapitalPipe.LiteTrading.Commodities.Session)">
            <summary>
            
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.SessionManager">
            <summary>
            Session管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SessionManager.AddSession(CapitalPipe.LiteTrading.Commodities.Session)">
            <summary>
            加入Session
            </summary>
            <param name="ss"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SessionManager.GetCurrentSession(System.TimeSpan)">
            <summary>
            取得目前時點所在的session
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SessionManager.GetCurrentTickSession(System.TimeSpan,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <param name="sp"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.SessionPeriodEncloseType">
            <summary>
            Session的enclose方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SessionPeriodEncloseType.Begin">
            <summary>
            包括開始時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SessionPeriodEncloseType.End">
            <summary>
            包括結束時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SessionPeriodEncloseType.Both">
            <summary>
            包括開始及結束
            </summary>
        </member>
        <!-- 已忽略成員 "F:CapitalPipe.LiteTrading.Commodities.SessionPeriodEncloseType.None" 中格式錯誤的 XML 註解 -->
        <!-- 已忽略成員 "T:CapitalPipe.LiteTrading.Commodities.SessionPeriod" 中格式錯誤的 XML 註解 -->
        <!-- 已忽略成員 "P:CapitalPipe.LiteTrading.Commodities.SessionPeriod.PeriodBegin" 中格式錯誤的 XML 註解 -->
        <!-- 已忽略成員 "P:CapitalPipe.LiteTrading.Commodities.SessionPeriod.PeriodEnd" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.Commodities.SessionPeriod.SetSessionPeriod(System.DateTime,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="begin"></param>
            <param name="end"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SessionPeriod.IsNullValue">
            <summary>
            是否為Null值？
            </summary>
            <returns>
            true:null值
            false:非null值
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SessionPeriod.InSessionPeriod(System.DateTime,CapitalPipe.LiteTrading.Commodities.SessionPeriodEncloseType)">
            <summary>
            是否在這個SessionPeriod之中
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SessionPeriod.SetSessionNullValue">
            <summary>
            將這個session設成null值
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SessionPeriod.IsTheSameSessionPeriod(CapitalPipe.LiteTrading.Commodities.SessionPeriod)">
            <summary>
            兩個session period值是否一樣?
            </summary>
            <param name="ss"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.SettlementInfo">
            <summary>
            商品到期資訊，含以下資料：
            (1)商品到期日
            (2)商品最後交易
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SettlementInfo.Key">
            <summary>
            資料鍵值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SettlementInfo.Settle">
            <summary>
            結算日
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SettlementInfo.LastTrade">
            <summary>
            最後交易日
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SettlementInfo.#ctor(System.String,System.DateTime,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="settle"></param>
            <param name="lastTrade"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.SyntheticFutures">
            <summary>
            合成期貨物件
            合成期貨：利用Put-Call Parity
            ==>期貨選擇權的評價故不用做折現
            Call Price + Strike = Put Price + Futures Price
            ==> Futures Price = Call Price + Strike - Put Price
            ----------------------------------------------------------------------
            weak point：沒有處理現貨的discount項目，故真的是以期貨的角度來計算
                    ==> 要做與現貨的套利時，user必須認知此價格為"期貨價格"，非"現貨價格"
            ----------------------------------------------------------------------
            使用方式：
            (1) new出一個合成期貨物件
            (2) 合成期貨的報價事件會透過OnSysntehticFuturesUpdate發送
            (3) 不需要的時侯要把這個物件dispose掉
            ----------------------------------------------------------------------
            20160707
            ※ 從UniversalTrading搬到LiteTrading
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFutures._referenceCount">
            <summary>
            本來是要做refrence count，但目前沒有使用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFutures._callOption">
            <summary>
            call的行情物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFutures._putOption">
            <summary>
            put的行情物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFutures._strike">
            <summary>
            履約價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFutures._bidPrice">
            <summary>
            bid價格，在行情事件時會更新
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFutures._askPrice">
            <summary>
            aks價格，在行情事件時會更新
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFutures._bidReal">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFutures._askReal">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFutures._bidQty">
            <summary>
            買進數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFutures._askQty">
            <summary>
            賣出數量
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.OnSysntehticFuturesUpdate">
            <summary>
            合成期貨資料更新的事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.Strike">
            <summary>
            履約價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.BidReal">
            <summary>
            Market Bid:沒有加上Strike的Call - Put價格(複式單的價格)
            送複式單時，不需要加上Strike==>如果有需要送複式單要keep in mind!!
            ==> 台灣的複式商品定義不見得與其他交易所一致，處理其他交易所時要注意這個定義是否會hold
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.BidPrice">
            <summary>
            合成期貨的Bid價格
            ==>以put/call parity計算的"期貨價格"(有加上履約價)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.AskReal">
            <summary>
            Market Ask:沒有加上Strike的Call - Put價格(複式單的價格)
            送複式單時，不需要加上Strike==>如果有需要送複式單要keep in mind!!
            ==> 台灣的複式商品定義不見得與其他交易所一致，處理其他交易所時要注意這個定義是否會hold
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.AskPrice">
            <summary>
            合成期貨的Ask價格
            ==>以put/call parity計算的"期貨價格"(有加上履約價)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.BidQty">
            <summary>
            買進數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.AskQty">
            <summary>
            賣出數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.CallCode">
            <summary>
            Call的代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.CallOption">
            <summary>
            買權
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.PutCode">
            <summary>
            Put的代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.PutOption">
            <summary>
            賣權
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.CallQuote">
            <summary>
            Call Quote
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.PutQuote">
            <summary>
            Put Quote
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.#ctor(CapitalPipe.LiteTrading.Quotes.Quote,CapitalPipe.LiteTrading.Quotes.Quote,System.Decimal)">
            <summary>
            Constructor
            建立一個合成期貨物件
            </summary>
            <param name="call">合成期貨Call行情物件</param>
            <param name="put">合成期貨Put行情物件</param>
            <param name="strike">履約價</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.Option_OnQuoteEvent(System.Object,CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            處理選擇權報價事件
            ==> (1)更新價格 (2)發送事件
            </summary>
            <param name="obj"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.RefreshPrices">
            <summary>
            更新價格
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.FireUpdateEvent">
            <summary>
            發送行情更新事件
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.Dispose">
            <summary>
            dispose此物件
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.CompareSyntheticFuturesByBid(CapitalPipe.LiteTrading.Commodities.SyntheticFutures,CapitalPipe.LiteTrading.Commodities.SyntheticFutures)">
            <summary>
            比較bid價
            bid價高者排序要在前，故用f2.Bid.CompareTo(f1.Bid)
            </summary>
            <param name="f1"></param>
            <param name="f2"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.CompareSyntheticFuturesByAsk(CapitalPipe.LiteTrading.Commodities.SyntheticFutures,CapitalPipe.LiteTrading.Commodities.SyntheticFutures)">
            <summary>
            比較Ask價
            ask價高者，排序要在前
            </summary>
            <param name="f1"></param>
            <param name="f2"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SyntheticFutures.CompareSyntheticFuturesByLiquidity(CapitalPipe.LiteTrading.Commodities.SyntheticFutures,CapitalPipe.LiteTrading.Commodities.SyntheticFutures)">
            <summary>
            比流動性
            </summary>
            <param name="f1"></param>
            <param name="f2"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread">
            <summary>
            合成spread
            照文宣定義的合成spread:
            “合成期貨” 與 “標的商品” 的價差
               “標的商品” 可以是股票或是一般的期貨
            ==>買賣別以合成期貨為基準
               ※ 買進價差：買進合成期貨，放空一般期貨
               ※ 賣出價差：賣出合成期貨，買進一般期貨
            --------------------------------------------------
            20160707
            ※ 從UniversalTrading搬到LiteTrading
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread._underlyingQuote">
            <summary>
            標的商品的行情物件
            可能是期貨/現貨
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread._synFutures">
            <summary>
            合成期貨物件
            </summary>
        </member>
        <!-- 已忽略成員 "F:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread._ratio" 中格式錯誤的 XML 註解 -->
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread._bidPrice">
            <summary>
            合成價差的Bid價格
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread._askPrice">
            <summary>
            合成價差的Ask價格
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread._bidQty">
            <summary>
            合成價差的Bid數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread._askQty">
            <summary>
            合成價差的Ask數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread.SynFut">
            <summary>
            合成期貨物件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread.Strike">
            <summary>
            合成期貨的履約價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread.BidPrice">
            <summary>
            合成價差的bid價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread.AskPrice">
            <summary>
            合成價差的ask價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread.BidQty">
            <summary>
            合成價差的買進量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread.AskQty">
            <summary>
            合成價差的賣出量
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread.#ctor(CapitalPipe.LiteTrading.Quotes.Quote,CapitalPipe.LiteTrading.Commodities.SyntheticFutures,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="undQuote">合成價差的(期/現貨)</param>
            <param name="synFut"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread.UpdateSpreads">
            <summary>
            更新Spread
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread.ResetUnderlying(CapitalPipe.LiteTrading.Quotes.Quote,System.Double)">
            <summary>
            
            </summary>
            <param name="undQuote"></param>
            <param name="ratio"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread.CompareSyntheticFuturesByBid(CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread,CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread)">
            <summary>
            比較bid價
            bid價高者排序要在前，故用f2.Bid.CompareTo(f1.Bid)
            </summary>
            <param name="f1"></param>
            <param name="f2"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread.CompareSyntheticFuturesByAsk(CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread,CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread)">
            <summary>
            比較Ask價
            ask價高者，排序要在前
            </summary>
            <param name="f1"></param>
            <param name="f2"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread.CompareSyntheticFuturesByLiquidity(CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread,CapitalPipe.LiteTrading.Commodities.SyntheticFuturesSpread)">
            <summary>
            比流動性
            </summary>
            <param name="f1"></param>
            <param name="f2"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.SystemCodeEntry">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.RangeValueData">
            <summary>
            類別：RangeValueData 
            思考：
                ==>分數報價時要怎麼處理？
                (1) 增加一個Flag，表明此為分數報價或是一般實數報價
                (2) Value為分母？
                (3) RangeBegin/RangeEnd要如何處理？
            --------------------------------------------------------------------------
            20140829
                新增FixTickValue的處理函數，用來簡化處理TickValue為固定值時的up tick/down tick等操作
            </summary>
            <remarks>用來表示某個價格範圍內的升降單位，選擇權/期貨的報價寬度也可以用這個資料結構表示</remarks>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.RangeValueData.#ctor(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Constructor
            </summary>
            <param name="begin"></param>
            <param name="end"></param>
            <param name="val"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.TickValueInfo">
            <summary>
            Tick資訊物件，用來表示某一組價格升降規則<para/>
            每一個TickID會有一個對應的TickValueInfo物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.TickValueInfo._type">
            <summary>
            TickID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.TickValueInfo._data">
            <summary>
            Tick資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.TickValueInfo._tickValues">
            <summary>
            所有的TickValueInfo
            Key值：TickID
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.#ctor(System.String)">
            <summary>
            Constructor : Protected, should not be called by end-user.
                          All objects should be created by the static function : addTickInformation
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.AddTickInfo(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Add a Tick Info into 
            </summary>
            <param name="rBegin"></param>
            <param name="rEnd"></param>
            <param name="rValue"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.GetTickValue(System.Decimal)">
            <summary>
            取得Tick值，給一個價格會回傳該價格的Tick值
            </summary>
            <param name="pri">價格</param>
            <returns>Tick值</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.GetTickValueDown(System.Decimal)">
            <summary>
            Tick Donw時使用
            </summary>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.TickUp(System.String,System.Decimal)">
            <summary>
            
            </summary>
            <param name="tickType"></param>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.TickUp(CapitalPipe.LiteTrading.Commodities.TickValueInfo,System.Decimal)">
            <summary>
            升一個tick
            </summary>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.TickUp(CapitalPipe.LiteTrading.Commodities.TickValueInfo,System.Decimal,System.Int32)">
            <summary>
            升n個tick
            </summary>
            <param name="tickInfo"></param>
            <param name="pri"></param>
            <param name="nCount"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.TickUpFixTickValue(System.Decimal,System.Decimal)">
            <summary>
            使用固定Tick值來up tick
            </summary>
            <param name="pri"></param>
            <param name="tickVal"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.TickUpFixTickValue(System.Decimal,System.Decimal,System.Int32)">
            <summary>
            使用固定Tick值來up tick
            </summary>
            <param name="pri"></param>
            <param name="tickVal"></param>
            <param name="nCount"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.TickDown(System.String,System.Decimal)">
            <summary>
            
            </summary>
            <param name="tickType"></param>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.TickDown(CapitalPipe.LiteTrading.Commodities.TickValueInfo,System.Decimal)">
            <summary>
            降一個tick
            </summary>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.TickDown(CapitalPipe.LiteTrading.Commodities.TickValueInfo,System.Decimal,System.Int32)">
            <summary>
            降n個tick
            </summary>
            <param name="tickInfo"></param>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.TickDownFixTickValue(System.Decimal,System.Decimal)">
            <summary>
            使用固定Tick值來down tick
            </summary>
            <param name="pri"></param>
            <param name="tickVal"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.TickDownixTickValue(System.Decimal,System.Decimal,System.Int32)">
            <summary>
            使用固定Tick值來down tick
            </summary>
            <param name="pri"></param>
            <param name="tickVal"></param>
            <param name="nCount">tick down的次數</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.TicksDiff(CapitalPipe.LiteTrading.Commodities.TickValueInfo,System.Decimal,System.Decimal)">
            <summary>
            兩個價格差了多少個tick
            pri1要小於pri2
            </summary>
            <param name="tickInfo"></param>
            <param name="pri1"></param>
            <param name="pri2"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.TicksDiffFixTickValue(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            兩個價格差了多少個tick
            pri1要小於pri2
            </summary>
            <param name="pri1"></param>
            <param name="pri2"></param>
            <param name="tickVal"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.GetNearestPrice(CapitalPipe.LiteTrading.Commodities.TickValueInfo,System.Decimal,System.Boolean)">
            <summary>
            最接近的可委託價格
            </summary>
            <param name="tickInfo"></param>
            <param name="pri"></param>
            <param name="upTick"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.GetNearestPrice(CapitalPipe.LiteTrading.Commodities.TickValueInfo,System.Decimal)">
            <summary>
            
            </summary>
            <param name="tickInfo"></param>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.GetNearestPriceFixTickValue(System.Decimal,System.Decimal,System.Boolean)">
            <summary>
            最接近的可委託價格
            </summary>
            <param name="pri"></param>
            <param name="tickVal"></param>
            <param name="upTick"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.GetNearestPriceFixTickValue(System.Decimal,System.Decimal)">
            <summary>
            取得最接近的可委託價格(有效價格)
            </summary>
            <param name="pri"></param>
            <param name="tickVal"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.GetDigits(CapitalPipe.LiteTrading.Commodities.TickValueInfo,System.Decimal)">
            <summary>
            取得指定價位小數位數
            </summary>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.GetDigits(System.String,System.Decimal)">
            <summary>
            取得小數位數
            </summary>
            <param name="tickType"></param>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.GetDigitsByTickValue(System.Decimal)">
            <summary>
            取得指定價位小數位數
            </summary>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.GetTickValueInfo(System.String)">
            <summary>
            getTickValueInfo : give a tick type, return a  TickValueInfo object
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.GetTickValue(System.String,System.Decimal)">
            <summary>
            getTickValue : static function, give tick type and price return the correspondent tick value
            </summary>
            <param name="type"></param>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.AddTickInfomation(System.String,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            addTickInformation
            </summary>
            <param name="type"></param>
            <param name="rBegin"></param>
            <param name="rEnd"></param>
            <param name="tValue"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.LoadFormFile(System.String)">
            <summary>
            自檔案載入
            </summary>
            <param name="fileName">檔案名稱</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TickValueInfo.LoadFormCSVFile(System.String)">
            <summary>
            自CSV檔案載入
            </summary>
            <param name="fileName">檔案名稱</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.TradingCalendar">
            <summary>
            交易行事曆，負責紀錄放假資訊及其他大事<para/>
            各地區行事曆有專屬編碼
            <list type="bullet">
            <item><description>台灣=>TW</description></item>
            <item><description>日本=>JP</description></item>
            <item><description>韓國=>KR</description></item>
            <item><description>中國=>CN</description></item>
            <item><description>香港=>HK</description></item>
            <item><description>新加坡=>SG</description></item>
            </list>
            使用方法：
            (沒有DefaultManager，直接由Static Member取得)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.TradingCalendar._calendarID">
            <summary>
            日曆代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.TradingCalendar._dateInfos">
            <summary>
            儲存日曆資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.TradingCalendar._calendars">
            <summary>
            所有的日曆
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.TradingCalendar.CalendarID">
            <summary>
            行事曆代碼
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TradingCalendar.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="calendarID">日曆代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TradingCalendar.AddDateInfo(CapitalPipe.LiteTrading.Commodities.DateInfo)">
            <summary>
            加入日期資訊
            </summary>
            <param name="dtInfo">日期資訊</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TradingCalendar.CountHolidays(System.DateTime,System.DateTime)">
            <summary>
            計算假日的數量
            </summary>
            <param name="dtBegin">區間起始日</param>
            <param name="dtEnd">區間結束日</param>
            <returns>交易日的數量</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TradingCalendar.IsHoliday(System.DateTime)">
            <summary>
            是否為假日？
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TradingCalendar.IsSpecialDay(System.DateTime,System.String)">
            <summary>
            是否為特定日子
            </summary>
            <param name="dt">日期</param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TradingCalendar.AddDateInfo(System.String,CapitalPipe.LiteTrading.Commodities.DateInfo)">
            <summary>
            加入日期資訊
            </summary>
            <param name="calendarID">日曆代碼</param>
            <param name="dtInfo">日期資訊</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TradingCalendar.CountHolidays(System.String,System.DateTime,System.DateTime)">
            <summary>
            計算假日數量
            若找不到Calendar會以下公式計算
               trading days = n - 2*(int)(n/7)
            在DEBUG編譯下會throw NotSupportedException()
            </summary>
            <param name="calendarID">日曆代碼</param>
            <param name="dtBegin">區間開始日</param>
            <param name="dtEnd">區間結束日</param>
            <returns>天數</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TradingCalendar.IsHoliday(System.String,System.DateTime)">
            <summary>
            是否為假日？
            </summary>
            <param name="calendarID">要查詢是否為假日的日曆代碼</param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TradingCalendar.IsSpecialDay(System.String,System.DateTime,System.String)">
            <summary>
            是否為特定日子
            </summary>
            <param name="calendarID"></param>
            <param name="dt"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TradingCalendar.CompareDateInfos(CapitalPipe.LiteTrading.Commodities.DateInfo,CapitalPipe.LiteTrading.Commodities.DateInfo)">
            <summary>
            比較兩個日期資訊
            ==> 只比日期
            </summary>
            <param name="dt1"></param>
            <param name="dt2"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.TradingCalendar.LoadFromCSVFile(System.String,CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate)">
            <summary>
            自csv檔載入
            </summary>
            <param name="filename"></param>
            <param name="updateLabselFunc"></param>
            <param name="updateProgressFunc"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.TradingSessionType">
            <summary>
            交易時段的類型
            </summary>
            <remarks>
            這個列舉用來表示目前這個交易時段是處於正常時段或是盤後交易時段。
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.TradingSessionType.Undefined">
            <summary>
            未定義
            </summary>
            <remarks>
            Sentinel變數
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.TradingSessionType.Normal">
            <summary>
            正常時段
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.TradingSessionType.AfterHour">
            <summary>
            盤後交易
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.UserDefinedCommoadityManager">
            <summary>
            使用者自訂商品管理員
            ------------------------------------------------------
            會將商品加到CommodityManager裡面
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.UserDefinedCommoadityManager._allCmds">
            <summary>
            所有的自定商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.UserDefinedCommoadityManager._allCFCRules">
            <summary>
            所有的連續商品規則
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.UserDefinedCommoadityManager._defaultManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.UserDefinedCommoadityManager.AllCustomCommodities">
            <summary>
            所有的使用者自訂商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.UserDefinedCommoadityManager.CFCRules">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Commodities.UserDefinedCommoadityManager.DefaultManager">
            <summary>
            預設的商品管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.UserDefinedCommoadityManager.AddCustomCummodity(System.String,System.String,System.String,System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityType,System.Decimal,CapitalPipe.LiteTrading.Commodities.CurrencyID,System.Boolean,System.Boolean)">
            <summary>
            若新增成功，回傳1；已存在回傳-1；資料有誤回傳0
            </summary>
            <param name="code"></param>
            <param name="exchange"></param>
            <param name="exchangeCode"></param>
            <param name="cmdType"></param>
            <param name="factor"></param>
            <param name="currency"></param>
            <param name="canTrage">是否可交易</param>
            <param name="hasQuote">是否存在報價</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.UserDefinedCommoadityManager.RemoveCommodity(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.UserDefinedCommoadityManager.SaveToStorage">
            <summary>
            儲存商品設定資料
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.UserDefinedCommoadityManager.LoadFromStorage">
            <summary>
            載入商品設定資料
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.UserDefinedCommoadityManager.InitializeCFCCommodities">
            <summary>
            執行連續商品的初始化
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.UserDefinedCommoadityManager.InitializeCFCCommodity(CapitalPipe.LiteTrading.Commodities.CFCRuleEntry)">
            <summary>
            始始化連續月商品
            </summary>
            <param name="cfcRule"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.UserDefinedCommoadityManager.CheckChangeCFCCommodity(CapitalPipe.LiteTrading.Commodities.CFCRuleEntry)">
            <summary>
            
            </summary>
            <param name="cfcRule"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Commodities.UserDefinedCommoadityManager.CheckCFCCommodityFunc">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Commodities.ZippedCommodityFileEntry">
            <summary>
            Zip商品檔資訊，這個物件是用來方便自DS下載商品檔時使用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ZippedCommodityFileEntry.IsReady">
            <summary>
            是否已下載？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ZippedCommodityFileEntry.FullName">
            <summary>
            商品檔全名
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ZippedCommodityFileEntry.FileName">
            <summary>
            商品檔檔名
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ZippedCommodityFileEntry.LastModifiedTime">
            <summary>
            商品檔的最後修改時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Commodities.ZippedCommodityFileEntry.FileSize">
            <summary>
            商品檔的大小
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.CompositeModules.CompositeModule">
            <summary>
            複合模組：同時具有OrderManagement及QuoteManagement的模組，例如PATs及中菲、群益
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.DoEditCompositeModuleSettingDelegate">
            <summary>
            設定Composite模組的Deleagate
            </summary>
            <param name="module"></param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.CompositeModules.CompositeModule._settingEditors">
            <summary>
            key==>模組UUID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.CompositeModules.CompositeModule._compositeModules">
            <summary>
            key==>模組Key值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.Key">
            <summary>
            模組Key值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.IsQuoteAdaptorEnabled">
            <summary>
            報價Adaptor是否啟用？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.IsPysicalOrderManagerEnabled">
            <summary>
            委託中心是否啟用？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.QuoteModuleInfo">
            <summary>
            報價模組資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.QuoteAdaptorSetting">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.PhysicalOrderModuleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.OrderManagerSetting">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.QuoteAdaptor">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.OrderManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="key">複合模組Key值</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.Connect">
            <summary>
            連線
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.Disconnect">
            <summary>
            中斷連線
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.ApplyModuleSetting(System.String)">
            <summary>
            套用設定
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.Terminate">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.ConnectAllModules">
            <summary>
            連線所有複合模組
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.DisconnectAllModules">
            <summary>
            中止所有複合模組的連線
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.GetSettingEditor(System.String)">
            <summary>
            編輯複合模組設定
            </summary>
            <param name="moduleID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.AddCompositeModuleEditor(System.String,CapitalPipe.LiteTrading.CompositeModules.CompositeModule.DoEditCompositeModuleSettingDelegate)">
            <summary>
            新增複合模組編輯器
            </summary>
            <param name="moduleID">模組代碼</param>
            <param name="editor">模組編輯器</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.RemoveCompositeModuleEditor(System.String)">
            <summary>
            移除複合模組編輯器
            </summary>
            <param name="moduleID">模組代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.RegisterCompositeModule(System.String,CapitalPipe.LiteTrading.CompositeModules.CompositeModule)">
            <summary>
            移除複合模組
            </summary>
            <param name="key"></param>
            <param name="module"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModule.UnregisterCompositeModule(System.String)">
            <summary>
            反註冊
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo">
            <summary>
            複合模組的實做資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.ModuleName">
            <summary>
            模組名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.Modules">
            <summary>
            所有的複合模組
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.DefaultSettingFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.GetInstanceLimit">
            <summary>
            可以被產生的實例數量
            </summary>
            <returns>-1:無限制</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.GetInstanceCountCanBeCreated">
            <summary>
            剩餘可以被產生的實例數量
            </summary>
            <returns>-1:無限制</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.CreateCompositeModule(CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting)">
            <summary>
            
            </summary>
            <param name="moduleSetting"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.TestModule(System.String)">
            <summary>
            測試模組
            </summary>
            <param name="fn"></param>
            <returns>
            測試結果
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.CreateCompositeModuleInfoFromFile(System.String)">
            <summary>
            產生模組
            </summary>
            <param name="fn"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.CreateCompositeModuleInfoFromCodeBase(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="codeBase"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.AddCompositeModuleInfo(CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo)">
            <summary>
            
            </summary>
            <param name="module"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.RemoveCompositeModuleInfo(System.String)">
            <summary>
            
            </summary>
            <param name="moduleID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.ClearAllModules">
            <summary>
            清空所有模組
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.LoadModules">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.LoadModules(System.String)">
            <summary>
            
            </summary>
            <param name="fn"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.SaveModules">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo.SaveModules(System.String)">
            <summary>
            
            </summary>
            <param name="fn"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting">
            <summary>
            複合模組設定
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.ModuleName">
            <summary>
            模組名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.ModuleKey">
            <summary>
            模組Key值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.OrderManagerKey">
            <summary>
            委託模組Key值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.QuoteModuleKey">
            <summary>
            行情模組Key值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.ModuleID">
            <summary>
            委託模組檔案
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.ModuleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.ModuleInstance">
            <summary>
            該模組設定的模組實例
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.Settings">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.InstanceStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.Instances">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.DefaultSettingFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.#ctor(System.String,System.String,CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo,CapitalPipe.LiteTrading.CompositeModules.CompositeModule,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.GetInstanceCountOfModule(CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo)">
            <summary>
            取得某個QuoteModuleInfo的數量
            </summary>
            <param name="mInfo">模組資訊物件</param>
            <returns>數量</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.AddInstance(CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting)">
            <summary>
            加入
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.RemoveInstance(System.String)">
            <summary>
            移除複合模組設定
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.ClearAllInstances">
            <summary>
            清空所有的實例
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.HasThisKey(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.InitModuleSetting(CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting,CapitalPipe.LiteTrading.CompositeModules.CompositeModuleInfo)">
            <summary>
            
            </summary>
            <param name="setting"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.ParseModuleSettingFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            自XML節點Parse
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.LoadFromFile">
            <summary>
            自檔案載入
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.LoadFromFile(System.String)">
            <summary>
            自檔案載入
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.SaveToFile">
            <summary>
            存檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.CompositeModules.CompositeModuleSetting.SaveToFile(System.String)">
            <summary>
            存檔
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.CompositeModules.DummyCompositeModuleInfo">
            <summary>
            當CompositeModuleInfo無法產生時，使用這個dumy的物件來傳達一些資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ComService.DataComHost._connectionID">
            <summary>
            連線的ID，當Service有多個時，可以利用這個ConnectionID來區分不同的instance
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ComService.DataComHost._connectionPort">
            <summary>
            連線的Port
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ComService.DataComHost._logMessages">
            <summary>
            Log訊息
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ComService.DataComHost._service">
            <summary>
            name pipe的名稱
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.ComService.DataComHost.OnLogMessage">
            <summary>
            發送log事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ComService.DataComHost.ConnectionID">
            <summary>
            連線的ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ComService.DataComHost.Port">
            <summary>
            連線的Port
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ComService.DataComHost.LogMessages">
            <summary>
            Log訊息
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ComService.DataComHost.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.DataComHost.StartService">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.DataComHost.InitService(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.DataComHost.AddLogMessage(System.String)">
            <summary>
            
            </summary>
            <param name="strLog"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.DataComHost.CloseService">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.DataComServiceImp.SetParameter(System.String,System.String,System.String)">
            <summary>
            設定參數
            </summary>
            <param name="orderID"></param>
            <param name="qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.DataComServiceImp.GetParameter(System.String,System.String)">
            <summary>
            取得參數
            </summary>
            <param name="systemID"></param>
            <param name="paramID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.DataComServiceImp.Ping">
            <summary>
            測試連線
            </summary>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.ComService.OrderComHost">
            <summary>
            透過RamenTrader的交易APIHost
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ComService.OrderComHost._connectionID">
            <summary>
            連線的ID，當Service有多個時，可以利用這個ConnectionID來區分不同的instance
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ComService.OrderComHost._connectionPort">
            <summary>
            連線的Port
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ComService.OrderComHost._showDetailOrderLog">
            <summary>
            顯示委託log
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ComService.OrderComHost._logMessages">
            <summary>
            Log訊息
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ComService.OrderComHost._service">
            <summary>
            name pipe的名稱
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.ComService.OrderComHost.OnLogMessage">
            <summary>
            發送log事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ComService.OrderComHost.ConnectionID">
            <summary>
            連線的ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ComService.OrderComHost.Port">
            <summary>
            連線的Port
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ComService.OrderComHost.LogMessages">
            <summary>
            Log訊息
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ComService.OrderComHost.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ComService.OrderComHost.ShowDetailOrderLog">
            <summary>
            是否逐筆下單紀錄LOG(For Debug使用)
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComHost.StartService">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComHost.InitService(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComHost.AddLogMessage(System.String)">
            <summary>
            
            </summary>
            <param name="strLog"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComHost.CloseService">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.ComService.OrderComServiceImp">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ComService.OrderComServiceImp._subscribers">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.#ctor">
            <summary>
            啟動Com Service
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.DefaultEventCenter_OnTransactionChanged(System.Object,CapitalPipe.LiteTrading.Orders.TransactionEventArgs)">
            <summary>
            處理成交事件
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.DefaultEventCenter_OnOrderChanged(System.Object,CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            處理成委回事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.SendNewOrder(System.String,System.String,System.Decimal,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            下新單
            </summary>
            <param name="code">交易所</param>
            <param name="code">商品代碼</param>
            <param name="bsType">買賣別</param>
            <param name="price">價格</param>
            <param name="qut">數量</param>
            <param name="orderType">下單類型</param>
            <param name="fillType">成交類型</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.SendNewOrderWithParams(System.String,System.String,System.Decimal,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="bsType"></param>
            <param name="price"></param>
            <param name="qty"></param>
            <param name="ordType"></param>
            <param name="fillType"></param>
            <param name="param"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.SendNewQuoteOrder(System.String,System.Decimal,System.Int32,System.Decimal,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            送出報價委託
            </summary>
            <param name="code"></param>
            <param name="bidPrice"></param>
            <param name="bidQty"></param>
            <param name="askPrice"></param>
            <param name="askQty"></param>
            <param name="ordType"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.CancelOrder(System.String)">
            <summary>
            
            </summary>
            <param name="orderID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.DecreaseOrder(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="orderID"></param>
            <param name="qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.QueryPositions(System.String)">
            <summary>
            
            </summary>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.Ping">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.Connect">
            <summary>
            處理連線
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.DoIntialialSend(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.VaildBSStr(System.String)">
            <summary>
            
            </summary>
            <param name="bsStr"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.ValidOrderTypeStr(System.String)">
            <summary>
            
            </summary>
            <param name="ordType"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.ValidQuoteOrderTypeStr(System.String)">
            <summary>
            
            </summary>
            <param name="ordType"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.MakeReportData(CapitalPipe.LiteTrading.Orders.GenericOrder)">
            <summary>
            
            </summary>
            <param name="genOrd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.MakeQuoteReport(CapitalPipe.LiteTrading.Orders.QuoteOrder)">
            <summary>
            
            </summary>
            <param name="quoteOrd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ComService.OrderComServiceImp.MakeMatchReport(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            製做成交回報
            </summary>
            <param name="tr"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.ComService.InitialSendData">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.ConcreteOrders.BracketOrderPhysicalOrderMappingData">
            <summary>
            For Recover BracketOrder使用的資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.BracketOrderPhysicalOrderMappingData.CurrentStatus">
            <summary>
            目前的狀態：
            -1: 沒有cache資料
            0: 停損委託執行有誤
            1: 停損委託送出
            2: 停損條件未觸發
            3: 停損委託已送出
            4: 停損委託已取消
            5: 停損委託已成交
            6: 停損委託已終止
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.BracketOrderPhysicalOrderMappingData.LimitOrderNo">
            <summary>
            限價委託的委託書號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.BracketOrderPhysicalOrderMappingData.LimitOrderID">
            <summary>
            限價委託的委託ID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.BracketOrderPhysicalOrderMappingData.StopOrderNo">
            <summary>
            停損委託的委託書號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.BracketOrderPhysicalOrderMappingData.StopOrderID">
            <summary>
            停損委託的委託ID
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.BracketOrderPhysicalOrderMappingData.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.BracketOrderPhysicalOrderMappingData.ToBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.BracketOrderPhysicalOrderMappingData.FromBytes(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="bytesArr"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder">
            <summary>Basket委託</summary>
            BasketOrder一開始的狀態是Pending，將Active屬性設成true後會觸發flush方法，此時才會送出委託
            ConceptOrderManager要實做兩種下單式，一種是直接送單，一種是只先產生空殼
            追價用改單方式做
             
            委託狀態管理：
            (1) 在回報收到任一筆單的新單錯誤(Error/Failure，不含刪單/減量的錯誤) ==> 進入Fail流程
                  Fail的流程：(a)先把Fail的旗標on起來；(b)刪除所有的委託；
            (2) 改單的狀態變化
            
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder._resendType">
            <summary>
            重送方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder._name">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder._orderTerms">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder._chgTime">
            <summary>
            最後異動時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.Active">
            <summary>
            如果還沒Active，設成true就會Flush
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.Codes">
            <summary>Codes property : Read Only</summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.OrderEntryCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.BasketOrderSingleEntries">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.Orders">
            <summary>
            (Read)：目前的委託
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.PastOrders">
            <summary>
            (Read)：追價前委託
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.ChangeTime">
            <summary>
            委託狀態改變時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.Transactions">
            <summary>
            所有成交資料
            ==>在client/server模式如何實做？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.BuySellInformation">
            <summary>
            買賣資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.PriceInformation">
            <summary>
            價格資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.QuantityInformation">
            <summary>
            委託量資訊 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.RemainQuantityInformation">
            <summary>
            剩餘量資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.ConditionInformation">
            <summary>
            條件資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.ExecutionInformation">
            <summary>
            執行狀態資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.AccountsUsed">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.Orders.OrderTerm})">
            <summary>
            Constructor
            </summary>
            <param name="ordno"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.HasCommodity(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.DeleteOrder(System.Boolean)">
            <summary>
            如果委託狀態
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.DecreaseOrder(System.Int32)">
            <summary>
            
            </summary>
            <param name="qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.AmendOrder(System.Object)">
            <summary>改單，在這裡實做的是追價功能</summary>
            <param name="amendinfo">True:待刪單成功後再重送，False:不待刪單回報，逕行重送</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.Flush">
            <summary>供內部使用，真正送單</summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.CancelAndResend">
            <summary>
            刪單且重送(不待刪單回報)
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.ResedOrdersToNotSend">
            <summary>
            將所有商品的OrderTerm屬性Sent設成false，用來做逐筆重送使用
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.CancelAllOrder">
            <summary>
            取消所有委託
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.CancelWorkingOrders">
            <summary>
            取消作用中的委託
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.NewOrder(CapitalPipe.LiteTrading.Orders.OrderTerm,System.Int32)">
            <summary>
            新增委託
            若發生委託失敗，會GoFailState!
            </summary>
            <param name="pTerm"></param>
            <param name="qty"></param>
            <returns>false ==> 委託失敗</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.HandlePhysicalOrderChanged(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,CapitalPipe.LiteTrading.Orders.Transaction,System.Boolean)">
            <summary>
            
            </summary>
            <param name="order"></param>
            <param name="tr"></param>
            <param name="isMach"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.UpdateBasketSingleEntryData(System.String,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="bs"></param>
            <param name="acc"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.RecoverPhysicalOrder(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            
            </summary>
            <param name="ord"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.GotFialState">
            <summary>
            進入Fail程序
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.AddOrderTerm(CapitalPipe.LiteTrading.Orders.OrderTerm)">
            <summary>
            
            </summary>
            <param name="orderTerm"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.CheckResendOrders">
            <summary>
            刪單後重送使用
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.IsAllOrdersSent">
            <summary>
            是否全部已送單
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.UpdateOrderStateFromNotReply(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.UpdateOrderStateFromCanceling">
            <summary>
            自Canceling的狀態跳到下一個狀態
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.UpdateOrderStateFromWorkingState">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.UpdateOrderStateFromAmending(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.GetRemainQuantity(System.String)">
            <summary>
            
            </summary>
            <param name="code">空字串表示查所有的商品</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.GetDealQuantity(System.String)">
            <summary>
            取得某個商品的所有成交量
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.GetPhysicalOrders(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="incPast">是否包含過去的委託</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.GetTotalOriOrderAmount">
            <summary>
            原始委託金額
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.GetTotalOrderAmount">
            <summary>
            委託金額
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.GetTotalOrderAmount(System.Boolean)">
            <summary>
            委託金額
            </summary>
            <param name="bBuySell"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.GetTotalRemainAmount(System.Boolean)">
            <summary>
            
            </summary>
            <param name="bBuySell"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.GetTotalDealAmount">
            <summary>
            成交金額
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.GetTotalDealAmount(System.Boolean)">
            <summary>
            成交金額
            </summary>
            <param name="bBuySell"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.UpdateTargetQtys">
            <summary>
            更新目標數量
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.CancelOrder(System.String)">
            <summary>
            刪除某筆委託
            (要小心使用)
            </summary>
            <param name="code">商品代碼，若是空白表示要刪單</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBasketOrder.GetOrderTerm(System.String)">
            <summary>
            要小心使用這個function
            </summary>
            <param name="iOffset"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder">
            <summary>
            Bracket委託的實做
            ------------------------------------------------------------------
            掛單流程：
            (1) 只在Active = true時產生作用
            (2) 由市場報價決定是否要採用直接成交行為？
                ==> 經過仔細考慮，取消這一行為，一律由兩筆單的狀態來控制
                ==> 合成的Stop單只在掛出
            -------------------------------------------------------------------
            
            -------------------------------------------------------------------
            在debug模式，行為要被log起來
            -------------------------------------------------------------------
            Recover的方式：
            
            
            
            
            
            
            ------------------------------------------------------------------
            為了要能實現recover機制，每筆委託資料在更新時會使用類似的機制
            
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder._bUpdating">
            <summary>
            控制update流程的flag
            因為在處理委託更新的過程中可能會做刪單，避免刪單的更新通知會讓update流程變成
            無窮迴圈，利用這個變數來避險連續進入Update流程
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder._limitOrder">
            <summary>
            限價單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder._syntheticStopOrder">
            <summary>
            合成停損委託
            當交易所不支援停損委託時使用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder._nativeStopOrder">
            <summary>
            原生停損委託
            當交易所支援停損委託時，使用原生的停損委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder._quote">
            <summary>
            行情物件
            行情資料物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder._isSupportStopOrder">
            <summary>
            下單的委託中心是否支援停損單？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder._matchQuantity">
            <summary>
            成交數量
            委託成交數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder._remainQuantity">
            <summary>
            剩餘數量
            委託剩餘數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder._execStatus">
            <summary>
            執行狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder._mappingData">
            <summary>
            做實體委託mapping使用的資料，在gateway模式下使用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder._orderMappingCache">
            <summary>
            儲存Bracket委託與實體委託對照的快取資料，for recover使用!!
            這個變數只在Gateway模式下才能使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.Active">
            <summary>
            啟用/停用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.ExecuteStatus">
            <summary>
            執行狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.MatchQuantity">
            <summary>
            成交數量
            ==> limit單與stop單的加總
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.RemainQuantity">
            <summary>
            剩餘數量
            ==> 若還沒送出委託，看看是否為委託錯誤或是失敗，委託錯誤或失敗回傳0，
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.Transactions">
            <summary>
            此筆委託相關成交資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.BuySellInformation">
            <summary>
            買賣資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.PriceInformation">
            <summary>
            價格資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.QuantityInformation">
            <summary>
            委託量資訊 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.RemainQuantityInformation">
            <summary>
            剩餘量資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.ConditionInformation">
            <summary>
            條件資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.ExecutionInformation">
            <summary>
            執行狀態資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.AccountsUsed">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.DefaultBracketOrderMappingCacheFile">
            <summary>
            預設的BracketOrderMapping檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.#ctor(System.String,System.String,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Decimal,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int16,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ordID"></param>
            <param name="ordSource"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.#ctor(System.String,System.String,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Decimal,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int16,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="undCode"></param>
            <param name="ordID"></param>
            <param name="bsType"></param>
            <param name="upperPrice"></param>
            <param name="lowerPrice"></param>
            <param name="priUsing"></param>
            <param name="offsetParameter"></param>
            <param name="quantity"></param>
            <param name="accInfo"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="ordSource"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.RestoreOrderMappingCacheData">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.AmendOrder(System.Object)">
            <summary>
            改單操作(目前不支援)
            </summary>
            <param name="amendinfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.DecreaseOrder(System.Int32)">
            <summary>
            減量操作(目前不支援)
            </summary>
            <param name="qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.DeleteOrder(System.Boolean)">
            <summary>
            刪單操作
            </summary>
            <param name="forceDelete"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.Activate">
            <summary>
            啟用委託
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.Quote_OnQuoteEvent(System.Object,CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            處理行情事件，在Synthetic Stop時，判斷是不是要送Stop單
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.UpdateExecStatus">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.HandlePhysicalOrderChanged(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,CapitalPipe.LiteTrading.Orders.Transaction,System.Boolean)">
            <summary>
            思考!!
            如果有人在外部對一般單做減量操作？
            </summary>
            <param name="order"></param>
            <param name="tr"></param>
            <param name="isMach"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.RecoverPhysicalOrder(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            Recover實體委託
            </summary>
            <param name="ord"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.SetOrderFail(System.String)">
            <summary>
            將委託狀態設定Fail~~~
            </summary>
            <param name="reason"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.InitializeOrderMappingCacheFile">
            <summary>
            初始化OrderMappingCache資料檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.WriteOrderMappingCache(CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder,CapitalPipe.LiteTrading.ConcreteOrders.BracketOrderPhysicalOrderMappingData@)">
            <summary>
            寫入ordermapping資料
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteBracketOrder.GetOrderMappingCacheData(System.String)">
            <summary>
            取得
            </summary>
            <param name="orderID"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder">
            <summary>
            類別：GenericOrder一般單，
            QuoteOrder與GenericOrder獨立，ComboOrder屬GenericOrder
            委託價：
                ==> 支援在送單時以市場報價為基準
                ==> 揩示：使用PriceInfomation
            改單操作：
            (1)改價：
               (a)交易所支援改價，直接改價
                  ==> 若新傳入的委託價有誤，會略掉操作
               (b)交易所不支援改價，合成(synthetic)改價，刪單後改送新單
                  ==> 若新傳入的委託價有誤，則前單會被刪除，狀態為新單失敗
            (2)改量：僅支援減量
            
            可以刪單的時機：
            只要委託狀態不是Finalized，都允許刪單
            (改單中的刪單)
            
            要支援LocalRecover模式(Gateway必須實做，Client by demand)的注意事項：
            (1)要有一個flag用來區分是否mapped?
            (2)自local cache recover回來後，狀態應是最後狀態，但是此時尚未mapping到原始委託!!
               ==>若尚未active的委託，recover回來後資訊會有缺少，要將狀態設成failure
               ==>上面這點只能待全部recover結束後做批次檢查
            (3)Recover結束後，要做mapping到實體委託的處理
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder._porder">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder._oldOrders">
            <summary>
            刪改單時，這裡放先前的委託單
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.Active">
            <summary>
            啟用
            啟用後不可以再恢復成Pending
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.Code">
            <summary>
            傳回對應到的實體委託的商品代碼(系統代碼)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.Codes">
            <summary>
            商品代碼陣列，這裡只會回傳一個
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.RemainQuantity">
            <summary>
            剩餘量，若委託已終結，回傳0
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.DealQuantity">
            <summary>
            傳回已成交的數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.OriginalQuantity">
            <summary>
            原始委託量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.TargetQuantity">
            <summary>
            目標單量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.PreviousPrice">
            <summary>
            改價前的價格
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.Price">
            <summary>
            委託價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.BS">
            <summary>BS poperty : Read Only</summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.Account">
            <summary>Account property : Read Only</summary>
            <value>(子)帳號</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.ChangeTime">
            <summary>
            委託狀態改變時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.PhysicalOrderType">
            <summary>
            實體委託類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.FillType">
            <summary>
            Time In Force
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.PhysicalOrderMessage">
            <summary>
            實體委託單最後訊息
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.ReceivedMatchQuantity">
            <summary>
            真正收到的成交數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.Transactions">
            <summary>
            所有成交資料
            ==>在client/server模式如何實做？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.OrderNo">
            <summary>
            委託書號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.ServerOrderID">
            <summary>
            Server的委託ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.OpenClose">
            <summary>
            開平倉
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.BuySellInformation">
            <summary>
            買賣資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.PriceInformation">
            <summary>
            價格資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.QuantityInformation">
            <summary>
            委託量資訊 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.RemainQuantityInformation">
            <summary>
            剩餘量資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.ConditionInformation">
            <summary>
            條件資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.ExecutionInformation">
            <summary>
            執行狀態資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.AccountsUsed">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.ActionResult">
            <summary>
            動作結果
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.#ctor(System.String,CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder,CapitalPipe.LiteTrading.Orders.Order,System.String)">
            <summary>Constructor : 產生一個GenericaOrder物件，代表某筆實體委託的ConceptOrder</summary>
            <param name="orderno">COrderNo，ConceptOrerManager的自行編號</param>
            <param name="thisOrder"></param>
            <param name="pOrder">Parent Order</param>
            <param name="ordSource"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.#ctor(System.String,CapitalPipe.LiteTrading.Orders.OrderTerm,CapitalPipe.LiteTrading.Orders.Order,System.String)">
            <summary>
            遇到不認識的委託，Recover出一筆新委託時使用
            </summary>
            <param name="orderID"></param>
            <param name="ordTerm"></param>
            <param name="pOrder"></param>
            <param name="ordSource"></param>
        </member>
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.#ctor(System.String,System.String,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.String,System.String,System.String,System.String)" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.#ctor(System.String,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.Orders.OrderType,System.String,System.DateTime,System.Decimal,System.Int32,System.String,System.String,System.Object,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            給OrderGateway Recover使用的~~
            </summary>
            <param name="orderID"></param>
            <param name="bs"></param>
            <param name="ordType"></param>
            <param name="ordNo"></param>
            <param name="ordTime"></param>
            <param name="price"></param>
            <param name="qty"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="ordSource"></param>
            <param name="cmdInfo"></param>
            <param name="acc"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.UpdateDescription">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.HasCommodity(System.String)">
            <summary>如果是有包涵商品，Ture；反之，False</summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.DeleteOrder(System.Boolean)">
            <summary>
            刪單</summary>
            <param name="forceDelete">true:強制刪單；false:一般刪單</param>
            <returns>True if PhysicalOrderManager Accept the instruction, False</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.DecreaseOrder(System.Int32)">
            <summary>
            減量</summary>
            <param name="qty">要減少的數量</param>
            <returns>True/False</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.AmendOrder(System.Object)">
            <summary>
            改價量 
            20150726
            ※ 新增將限價單轉市價單功能
            </summary>
            <param name="amendinfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.HandlePhysicalOrderChanged(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,CapitalPipe.LiteTrading.Orders.Transaction,System.Boolean)">
            <summary>
            處理實體委託狀態改變，處理完畢要發送事件
            </summary>
            <param name="order"></param>
            <param name="tr"></param>
            <param name="isMach"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.RecoverPhysicalOrder(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            Recover實體委託
            </summary>
            <param name="ord"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.InitSendOrder">
            <summary>
            初始送單，當GenericOrder被Activate時
            或是合成改單收到前單的刪單，改送新單時
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.UpdateState">
            <summary>更新委託狀態</summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.gwSetOrderState(CapitalPipe.LiteTrading.Orders.OrderState)">
            <summary>
            設定委託狀態(僅供Gateway呼叫)
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.gwSetCanDelete(System.Boolean)">
            <summary>
            設定可否被刪單
            </summary>
            <param name="bCanDelete"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.gwSetAmendable(System.Boolean)">
            <summary>
            設定可否改單
            </summary>
            <param name="bAmendable"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteGenericOrder.gwSetOrderTime(System.DateTime)">
            <summary>
            設定委託時間
            </summary>
            <param name="dt"></param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder._ordTerm">
            <summary>
            委託參數資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder._porder">
            <summary>
            合成停損單的委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder._oldOrders">
            <summary>
             
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder._bTriggered">
            <summary>
            是否已經觸發送單？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder._amendPrice">
            <summary>
             
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder._amendQty">
            <summary>
             
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder._amending">
            <summary>
             
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder._direction">
            <summary>
            觸價方向
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder._quote">
            <summary>
             
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder._chgTime">
            <summary>
            異動時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.Active">
            <summary>
            啟用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.Code">
            <summary>
            Code property : Read Only
            </summary>
            <value>
            傳回對應到的實體委託的商品代碼(系統代碼)
            </value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.OrderNo">
            <summary>
            委託書號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.ServerOrderID">
            <summary>
            Server的委託ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.Type">
            <summary>
            OrderType property : Read Only
            </summary>
            <value>
            SyntheticStop(合成Stop單)
            </value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.Codes">
            <summary>
            Codes property : Read Only
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.RemainQuantity">
            <summary>
            RemainQty property : Read Only
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.OrderPrice">
            <summary>
            委託價 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.Quantity">
            <summary>
            委託數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.DealQuantity">
            <summary>
            DealQty Property : Read Only
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.Price">
            <summary>
            Price property : Read Only
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.BS">
            <summary>
            BS poperty : Read Only
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.Account">
            <summary>
            Account property : Read Only
            </summary>
            <value>
            帳號
            </value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.POrder">
            <summary>
            取得實體委託
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.ChangeTime">
            <summary>
            委託狀態改變時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.Transactions">
            <summary>
            所有成交資料
            ==>在client/server模式如何實做？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.BuySellInformation">
            <summary>
            買賣資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.PriceInformation">
            <summary>
            價格資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.QuantityInformation">
            <summary>
            委託量資訊 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.RemainQuantityInformation">
            <summary>
            剩餘量資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.ConditionInformation">
            <summary>
            條件資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.ExecutionInformation">
            <summary>
            執行狀態資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.AccountsUsed">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.#ctor(System.String,CapitalPipe.LiteTrading.Orders.OrderTerm,CapitalPipe.LiteTrading.Orders.MITDirection,System.Decimal,CapitalPipe.LiteTrading.Orders.Order,System.String)">
            <summary>
            
            </summary>
            <param name="orderID"></param>
            <param name="ordTerm"></param>
            <param name="pOrder"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.#ctor(System.String,CapitalPipe.LiteTrading.Orders.OrderTerm,CapitalPipe.LiteTrading.Orders.MITDirection,System.Decimal,CapitalPipe.LiteTrading.Orders.Order,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="orderID"></param>
            <param name="ordTerm"></param>
            <param name="mitDir"></param>
            <param name="triggerPrice"></param>
            <param name="pOrder"></param>
            <param name="ordSource"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.Quote_OnQuoteEvent(System.Object,CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.HasCommodity(System.String)">
            <summary>如果是有包涵商品，Ture；反之，False</summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.DeleteOrder(System.Boolean)">
            <summary>
            刪單
            </summary>
            <returns>True if PhysicalOrderManager Accept the instruction, False</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.DecreaseOrder(System.Int32)">
            <summary>
            減量
            </summary>
            <param name="qty">要減少的數量</param>
            <returns>True/False</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.AmendOrder(System.Object)">
            <summary>
            改價量 </summary>
            <param name="amendinfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.HandlePhysicalOrderChanged(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,CapitalPipe.LiteTrading.Orders.Transaction,System.Boolean)">
            <summary>
            
            </summary>
            <param name="order"></param>
            <param name="tr"></param>
            <param name="isMach"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.RecoverPhysicalOrder(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            Recover實體委託
            </summary>
            <param name="ord"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.newAmendOrder">
            <summary>下新的單(改單)</summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.InitSendOrder">
            <summary>
            初始送單，當GenericOrder被Activate時
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteMITOrder.UpdateState">
            <summary>更新委託狀態</summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter">
            <summary>
            OrderManager : Order的管理中心
            使用時必須在PhysicalOrderManager初始化後，呼叫initialize函式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter._cordNo">
            <summary>
            委託編號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter._instance">
            <summary>
            ConcreteOrderManager的instance
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter._reverseOrderMap">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter._queuedData">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter._strategyTypeCache">
            <summary>
            儲存策略代碼的Cache
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter._strategyIDCache">
            <summary>
            儲存策略ID的Cache
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter._orderSourceCache">
            <summary>
            儲存OrderSource資料的Cache
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter._ordersToBeWrite">
            <summary>
            待寫入Cache的委託單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter._writeCacheThread">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter._useCacheMechanism">
            <summary>
            是否啟用Cache機制？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter._eventThread">
            <summary>
            負責處理委託事件的thread
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.StrategyTypeCacheFile">
            <summary>
            UserText欄位的Cache檔名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.StrategyIDCacheFile">
            <summary>
            StrategyID欄位的Cache檔名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.OrderSourceCacheFile">
            <summary>
            委託來源資料的Cache File名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.UseCacheMechanism">
            <summary>
            是否啟用Cache檔案機制？
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.InitializeCacheFiles">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.GetFreeCOrdNo">
            <summary>
            取得一組尚未被使用的CoceptOrder編號
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.PushOrderIntoWriteCacheQueue(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            
            </summary>
            <param name="ord"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.DoWriteCacheThread">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.QueryOrderSourceFromCache(System.String,System.String)">
            <summary>
            應該只在初始化時被呼叫!!
            </summary>
            <param name="orderManagerID"></param>
            <param name="orderID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.QueryStrategyTypeFromCache(System.String,System.String)">
            <summary>
            應該只在初始化時被呼叫!!
            </summary>
            <param name="orderManagerID"></param>
            <param name="orderID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.QueryStategyIDFromCache(System.String,System.String)">
            <summary>
            應該只在初始化時被呼叫!!
            </summary>
            <param name="orderManagerID"></param>
            <param name="orderID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.InitializeConcreteOrderCenter">
            <summary>初始化ConceptOrderManager</summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.RecoverGenericOrderFromPhysicalOrder(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>自回補新單資料產生一筆GenericOrder(也可能是QuoteOrder)</summary>
            <param name="pOrd"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.CheckPhysicalOrder(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>處理委託回補新單事件的delegate</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.AddReverseIDMapEntry(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            增加反查紀錄(for gateway/recover)
            </summary>
            <param name="ord"></param>
            <param name="ord"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.CreateOrderPreference(System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType)">
            <summary>
            
            </summary>
            <param name="_cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.CreateOrderPreference(System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType)">
            <summary>
            
            </summary>
            <param name="orderCenterID"></param>
            <param name="_cmdInfo"></param>
            <param name="ordType"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.IsPreferenceValid(System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            
            </summary>
            <param name="pref"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.FormatOrderPreference(System.String,CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            
            </summary>
            <param name="orderCenterID"></param>
            <param name="pref"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.CreateOrderPreference(CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType)">
            <summary>
            
            </summary>
            <param name="_cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.CreateOrderPreference(CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType)">
            <summary>
            
            </summary>
            <param name="orderCenterID"></param>
            <param name="_cmdInfo"></param>
            <param name="ordType"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.IsPreferenceValid(CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            
            </summary>
            <param name="pref"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.FormatOrderPreference(CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            
            </summary>
            <param name="orderCenterID"></param>
            <param name="pref"></param>
            <returns></returns>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.OrderCenterIDs">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.OrderManagerIDs">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.GetOrderPreferenceEditor(CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            20150610
            ※ 加入參數是null的檢查
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.EditOrderPreference(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType@,CapitalPipe.LiteTrading.Orders.OrderPreference,CapitalPipe.LiteTrading.Orders.OrderPreferenceType,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="ordType"></param>
            <param name="pref"></param>
            <param name="paremeter"></param>
            <param name="acc"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.ConnectAllPhysicalOrderManagers">
            <summary>
            呼叫所有的委託管理員去執行連線
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.InitializeAllPhysicalOrderManagers">
            <summary>
            初始化所有的委託管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.NewGenericOrder(System.String,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int16,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,System.Int64)">
            <summary>
            送出一般單
            </summary>
            <param name="code">商品代碼</param>
            <param name="price">委託價</param>
            <param name="qty">委託量</param>
            <param name="bstype">買賣別</param>
            <param name="ordType">委託類型</param>
            <param name="priceUsing">委託價類型</param>
            <param name="tickOffset">委託價Tick調整(使用Fixed時，這個參數沒有做用)</param>
            <param name="pref">委託條件</param>
            <param name="strategyType">策略類型</param>
            <param name="strategyID">策略代碼</param>
            <param name="acc">帳號</param>
            <param name="orderSource">委託來源</param>
            <param name="fillType"></param>
            <param name="reqID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.NewGenericOrder(System.String,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int16,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="price"></param>
            <param name="qty"></param>
            <param name="bstype"></param>
            <param name="ordType"></param>
            <param name="priceUsing"></param>
            <param name="tickOffset"></param>
            <param name="pref"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="acc"></param>
            <param name="orderSource"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.NewQuoteOrder(System.String,System.Decimal,System.Decimal,System.Int32,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.String,System.String)">
            <summary>
            新增報價單
            </summary>
            <param name="code"></param>
            <param name="bidPrice"></param>
            <param name="askPrice"></param>
            <param name="bidQty"></param>
            <param name="askQty"></param>
            <param name="accInfo"></param>
            <param name="pref"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="acc"></param>
            <param name="orderSource"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.NewQuoteOrder(System.String,System.Decimal,System.Decimal,System.Int32,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.String,System.String,System.Int64)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="bidPrice"></param>
            <param name="askPrice"></param>
            <param name="bidQty"></param>
            <param name="askQty"></param>
            <param name="accInfo"></param>
            <param name="pref"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="orderSource"></param>
            <param name="reqID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.NewStopOrder(System.String,CapitalPipe.LiteTrading.Orders.StopOrderType,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,System.Int64)">
            <summary>
            停損單
            </summary>
            <param name="code"></param>
            <param name="stopType"></param>
            <param name="bs"></param>
            <param name="stopPrice"></param>
            <param name="orderPrice"></param>
            <param name="qty"></param>
            <param name="pref"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="acc"></param>
            <param name="orderSource"></param>
            <param name="reqID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.NewStopOrder(System.String,CapitalPipe.LiteTrading.Orders.StopOrderType,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="stopType"></param>
            <param name="bs"></param>
            <param name="stopPrice"></param>
            <param name="orderPrice"></param>
            <param name="qty"></param>
            <param name="pref"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="acc"></param>
            <param name="orderSource"></param>
            <param name="reqID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.NewBracketOrder(System.String,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Decimal,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int16,System.Int32,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="stopType"></param>
            <param name="bs"></param>
            <param name="upperPrice"></param>
            <param name="lowerPrice"></param>
            <param name="qty"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="orderSource"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.NewBracketOrder(System.String,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Decimal,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int16,System.Int32,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,System.Int64)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="stopType"></param>
            <param name="bs"></param>
            <param name="upperPrice"></param>
            <param name="lowerPrice"></param>
            <param name="qty"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="orderSource"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.NewTrailingStopOrder(System.String,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Int16,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int16,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="stopType"></param>
            <param name="bs"></param>
            <param name="beginTrailingPrice"></param>
            <param name="trailingTicks"></param>
            <param name="quantity"></param>
            <param name="accInfo"></param>
            <param name="orderSource"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.NewTrailingStopOrder(System.String,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Int16,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int32,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,System.String,System.String,System.Int64)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="stopType"></param>
            <param name="bs"></param>
            <param name="beginTrailingPrice"></param>
            <param name="trailingTicks"></param>
            <param name="quantity"></param>
            <param name="accInfo"></param>
            <param name="orderSource"></param>
            <param name="reqID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.NewBasketOrder(System.String,System.String,System.String,System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.Orders.OrderTerm})">
            <summary>
            
            </summary>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="orderSource"></param>
            <param name="ordTerms"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.NewBasketOrder(System.String,System.String,System.String,System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.Orders.OrderTerm},System.Int64)">
            <summary>
            
            </summary>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="orderSource"></param>
            <param name="ordTerms"></param>
            <param name="reqID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.NewMITOrder(System.String,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.Orders.MITDirection,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int16,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="bs"></param>
            <param name="triggerPrice"></param>
            <param name="qty"></param>
            <param name="bUseLimitPri"></param>
            <param name="tickOffset"></param>
            <param name="pref"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="acc"></param>
            <param name="orderSource"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.NewMITOrder(System.String,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.Orders.MITDirection,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int16,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,System.Int64)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="bs"></param>
            <param name="dir"></param>
            <param name="triggerPrice"></param>
            <param name="qty"></param>
            <param name="bUseLimitPri"></param>
            <param name="tickOffset"></param>
            <param name="pref"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="orderSource"></param>
            <param name="acc"></param>
            <param name="reqID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.AddQueuedOrderData(CapitalPipe.LiteTrading.Orders.QueuedOrderData)">
            <summary>
            加入回報資料
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.GetQueueCount">
            <summary>
            取得目前queue中資料的數量
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.InitEventThread">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.TerminateEventThread">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.DoEventLoop">
            <summary>
            執行事件迴圈
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.EventLoopImp">
            <summary>
            為了能被Override做這個調整
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.HandleCustomOrderCenterData(CapitalPipe.LiteTrading.Orders.QueuedOrderData)">
            <summary>
            
            </summary>
            <param name="queueData"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.FireOrderEvent(CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            喚起委託事件處理程序
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.FireTransactionEvent(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            成交訊息會以非同步方式發送
            2013/07/22，功能改成AddTransaction會呼叫此功能，先不開放子類別呼叫此功能
            2014/03/17，改成virtual，在GatewayOrderManager做特別處理
            </summary>
            <param name="trans">成交資料</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.FireTransactionUpdateEvent(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            發佈成交更新(成交比委託早回報，後來又收到成交時)
            2014/03/17，改成virtual，在GatewayOrderManager做特別處理
            </summary>
            <param name="trans"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteOrderCenter.PostMessage(CapitalPipe.LiteTrading.Orders.Order,CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>利用Event派送Thread來傳送Order事件</summary>
            <param name="ord"></param>
            <param name="e"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder">
            <summary>
            類別：報價單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder._bidPrice">
            <summary>
            買進委託價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder._askPrice">
            <summary>
            賣出委託價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder._bidQty">
            <summary>
            買進數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder._askQty">
            <summary>
            賣出數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder._cmdInfo">
            <summary>
            商品資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder._accInfo">
            <summary>
            帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder._porder">
            <summary>
            目前的委託單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder._preference">
            <summary>
            委託條件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.Account">
            <summary>
            下單帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.Active">
            <summary>
            啟用
            啟用後不可以再恢復成Pending
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.Code">
            <summary>Code property : Read Only</summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.Type">
            <summary>OrderType property : Read Only</summary>
            <value>QuoteOrder</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.BidPrice">
            <summary>BidPrice property : Read Only</summary>
            <value>買進委託價</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.AskPrice">
            <summary>AskPrice property : Read Only</summary>
            <value>賣出委託價</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.RemainBidQty">
            <summary>RemainBidQty property : Read Only</summary>
            <value>剩餘買量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.RemainAskQty">
            <summary>RemainAskQty property : Read Only</summary>
            <value>剩餘賣量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.BidQty">
            <summary>BidQty property : Read Only</summary>
            <value>買進委託量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.AskQty">
            <summary>AskQty property : Read Only</summary>
            <value>賣出委託量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.CancelBidQty">
            <summary>CancelBidQty property : Read Only</summary>
            <value>買進取消量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.CancelAskQty">
            <summary>CancelBidQty</summary>
            <value>賣出取消量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.DealAskQty">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.DealBidQty">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.OrderNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.ChangeTime">
            <summary>
            委託狀態改變時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.Transactions">
            <summary>
            所有成交資料
            ==>在client/server模式如何實做？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.BuySellInformation">
            <summary>
            買賣資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.PriceInformation">
            <summary>
            價格資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.QuantityInformation">
            <summary>
            委託量資訊 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.RemainQuantityInformation">
            <summary>
            剩餘量資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.ConditionInformation">
            <summary>
            條件資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.ExecutionInformation">
            <summary>
            執行狀態資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.AccountsUsed">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.#ctor(System.String,CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder,CapitalPipe.LiteTrading.Orders.Order,System.String)">
            <summary>
            
            </summary>
            <param name="orderID"></param>
            <param name="thisorder"></param>
            <param name="pOrder"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.#ctor(System.String,System.String,System.Decimal,System.Decimal,System.Int32,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="ordID"></param>
            <param name="code"></param>
            <param name="bidPrice"></param>
            <param name="askPrice"></param>
            <param name="bidQty"></param>
            <param name="askQty"></param>
            <param name="accInfo"></param>
            <param name="pref"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="ordSource"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.#ctor(System.String,System.String,System.Decimal,System.Decimal,System.Int32,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,System.String,System.String,System.String)">
            <summary>
            For錯誤委託使用!!
            </summary>
            <param name="ordID"></param>
            <param name="code"></param>
            <param name="bidPrice"></param>
            <param name="askPrice"></param>
            <param name="bidQty"></param>
            <param name="askQty"></param>
            <param name="accInfo"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="ordSource"></param>
            <param name="errMessage"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.HasCommodity(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.DecreaseOrder(System.Int32)">
            <summary>
            
            </summary>
            <param name="qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.DeleteOrder(System.Boolean)">
            <summary>
            
            </summary>
            <param name="forceDelete"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.AmendOrder(System.Object)">
            <summary>
            
            </summary>
            <param name="amendinfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.InitSendOrder">
            <summary>
            初始送單，當GenericOrder被Activate時
            或是合成改單收到前單的刪單，改送新單時
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.HandlePhysicalOrderChanged(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,CapitalPipe.LiteTrading.Orders.Transaction,System.Boolean)">
            <summary>
            處理實體委託改變
            </summary>
            <param name="order"></param>
            <param name="tr"></param>
            <param name="isMach"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.RecoverPhysicalOrder(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            Recover實體委託
            </summary>
            <param name="ord"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.UpdateDescription">
            <summary>
            更新委託狀態描述
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.ClearOrder">
            <summary>
            因為報價單太多了，要有一個可以release的機制
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.gwSetOrderState(CapitalPipe.LiteTrading.Orders.OrderState)">
            <summary>
            設定委託狀態(僅供Gateway呼叫)
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.gwSetCanDelete(System.Boolean)">
            <summary>
            設定可否被刪單
            </summary>
            <param name="bCanDelete"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.gwSetAmendable(System.Boolean)">
            <summary>
            設定可否改單
            </summary>
            <param name="bAmendable"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteQuoteOrder.gwSetOrderTime(System.DateTime)">
            <summary>
            設定委託時間
            </summary>
            <param name="dt"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder">
            <summary>
            移動停損委託
            買進：高點回落xx，停損單 ==> current trailing會一直提高
            賣出：低點漲回xx，停損單 ==> current trailing會一直降低
            ---------------------------------------------------------------------------
            目前只實做PhysicalGenericOrder的送單，是以合成停損方式實做，並不會真的送出停損委託
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder._priUsing">
            <summary>
            使用的委託價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder._offsetParameter">
            <summary>
            委託價的調整參數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder._quote">
            <summary>
            行情物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder._trailingOrder">
            <summary>
            執行Trailing的委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder._realTrailingPrice">
            <summary>
            真正在追蹤停損時使用的價格
            ==>
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.Active">
            <summary>
            啟動
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.Transactions">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.BuySellInformation">
            <summary>
            買賣資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.PriceInformation">
            <summary>
            價格資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.QuantityInformation">
            <summary>
            委託量資訊 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.RemainQuantityInformation">
            <summary>
            剩餘量資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.ConditionInformation">
            <summary>
            條件資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.ExecutionInformation">
            <summary>
            執行狀態資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.IsExecuted">
            <summary>
            停損單是否已送出？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.MatchQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.RemainQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.AccountsUsed">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.#ctor(System.String,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int32,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="code"></param>
            <param name="beginTrailingPrice"></param>
            <param name="trailingTicks"></param>
            <param name="quantity"></param>
            <param name="accInfo"></param>
            <param name="ordID"></param>
            <param name="ordSource"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.#ctor(System.String,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int32,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            For錯誤委託
            </summary>
            <param name="code"></param>
            <param name="bs"></param>
            <param name="beginTrailingPrice"></param>
            <param name="trailingTicks"></param>
            <param name="priUsing"></param>
            <param name="offsetParameter"></param>
            <param name="quantity"></param>
            <param name="accInfo"></param>
            <param name="ordID"></param>
            <param name="ordSource"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.AmendOrder(System.Object)">
            <summary>
            
            </summary>
            <param name="amendinfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.DecreaseOrder(System.Int32)">
            <summary>
            
            </summary>
            <param name="qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.DeleteOrder(System.Boolean)">
            <summary>
            
            </summary>
            <param name="forceDelete"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.ActivateOrder">
            <summary>
            啟動委託
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.Quote_OnQuoteEvent(System.Object,CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.UpdateRealTrailingPrice">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.SetOrderFail(System.String)">
            <summary>
            
            </summary>
            <param name="reason"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.HandlePhysicalOrderChanged(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,CapitalPipe.LiteTrading.Orders.Transaction,System.Boolean)">
            <summary>
            處理實體委託改變事件
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.UpdateDescription">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.UpdateState">
            <summary>更新委託狀態</summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.ConcreteTrailingStopOrder.RecoverPhysicalOrder(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            處理實體委託recover(for recover使用)
            </summary>
            <param name="ord"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder">
            <summary>
            原生的停損單
            ----------------------------------------------------
            暫不支援改單 ==> 未來要實做
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder._actionState">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder._ordTerm">
            <summary>
            委託參數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder._stpOrder">
            <summary>
            實體的停損委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder._amendLog">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.Active">
            <summary>
            啟用
            啟用後不可以再恢復成Pending
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.Code">
            <summary>
            傳回對應到的實體委託的商品代碼(系統代碼)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.Codes">
            <summary>
            商品代碼陣列，這裡只會回傳一個
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.RemainQuantity">
            <summary>
            剩餘量，若委託已終結，回傳0
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.DealQuantity">
            <summary>
            傳回已成交的數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.StopPrice">
            <summary>
            停損價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.Quantity">
            <summary>
            原始委託量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.PreviousPrice">
            <summary>
            改價前的價格
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.OrderPrice">
            <summary>
            委託價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.BS">
            <summary>BS poperty : Read Only</summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.Account">
            <summary>Account property : Read Only</summary>
            <value>(子)帳號</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.ChangeTime">
            <summary>
            委託狀態改變時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.Type">
            <summary>
            傳回委託的類型字串
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.Transactions">
            <summary>
            所有成交資料
            ==>在client/server模式如何實做？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.OrderNo">
            <summary>
            委託書號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.ServerOrderID">
            <summary>
            Server的委託ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.BuySellInformation">
            <summary>
            買賣資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.PriceInformation">
            <summary>
            價格資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.QuantityInformation">
            <summary>
            委託量資訊 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.RemainQuantityInformation">
            <summary>
            剩餘量資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.ConditionInformation">
            <summary>
            條件資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.ExecutionInformation">
            <summary>
            執行狀態資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.AccountsUsed">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.#ctor(System.String,CapitalPipe.LiteTrading.Orders.OrderTerm,System.String)">
            <summary>Constructor : 產生一個GenericaOrder物件，代表某筆實體委託的ConceptOrder</summary>
            <param name="orderno">COrderNo，ConceptOrerManager的自行編號</param>
            <param name="thisorder"></param>
            <param name="pOrder">Parent Order</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.UpdateDescription">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.HasCommodity(System.String)">
            <summary>如果是有包涵商品，Ture；反之，False</summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.DeleteOrder(System.Boolean)">
            <summary>
            刪單</summary>
            <param name="forceDelete">true:強制刪單；false:一般刪單</param>
            <returns>True if PhysicalOrderManager Accept the instruction, False</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.DecreaseOrder(System.Int32)">
            <summary>
            減量</summary>
            <param name="qty">要減少的數量</param>
            <returns>True/False</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.AmendOrder(System.Object)">
            <summary>
            改價量 
            </summary>
            <param name="amendinfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.HandlePhysicalOrderChanged(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,CapitalPipe.LiteTrading.Orders.Transaction,System.Boolean)">
            <summary>
            處理實體委託狀態改變，處理完畢要發送事件
            </summary>
            <param name="order"></param>
            <param name="tr"></param>
            <param name="isMach"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.RecoverPhysicalOrder(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            Recover實體委託
            </summary>
            <param name="ord"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.InitSendOrder">
            <summary>
            初始送單，當GenericOrder被Activate時
            或是合成改單收到前單的刪單，改送新單時
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.UpdateState">
            <summary>更新委託狀態</summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.gwSetOrderState(CapitalPipe.LiteTrading.Orders.OrderState)">
            <summary>
            設定委託狀態(僅供Gateway呼叫)
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.gwSetCanDelete(System.Boolean)">
            <summary>
            設定可否被刪單
            </summary>
            <param name="bCanDelete"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.gwSetAmendable(System.Boolean)">
            <summary>
            設定可否改單
            </summary>
            <param name="bAmendable"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.NativeStopOrder.gwSetOrderTime(System.DateTime)">
            <summary>
            設定委託時間
            </summary>
            <param name="dt"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder">
            <summary>
            合成Stop單，在下單系統不支援stop單時使用
            合成Stop單的改單：
            (1) Active情況下，若未觸發，允許改回pending
            ------------------------------------------------------------
            目前SyntheticStop不支援Better價的送單，只支援Market/指定價格
            ==>指定價格要在new出SyntheticStopOrder單前先計算好
            ==>在InitSendOrder時不會去依OrderTerm來重新計算委託價
            ------------------------------------------------------------
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder._ordTerm">
            <summary>
            委託參數資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder._porder">
            <summary>
            合成停損單的委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder._oldOrders">
            <summary>
             
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder._amendPrice">
            <summary>
             
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder._amendQty">
            <summary>
             
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder._amending">
            <summary>
             
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder._stopPrice">
            <summary>
            停損價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder._bTriggered">
            <summary>
            是否已經觸發送單？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder._quote">
            <summary>
             
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder._chgTime">
            <summary>
            異動時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.Active">
            <summary>
            啟用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.Code">
            <summary>
            Code property : Read Only
            </summary>
            <value>
            傳回對應到的實體委託的商品代碼(系統代碼)
            </value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.OrderNo">
            <summary>
            委託書號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.ServerOrderID">
            <summary>
            Server的委託ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.Type">
            <summary>
            OrderType property : Read Only
            </summary>
            <value>
            SyntheticStop(合成Stop單)
            </value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.Codes">
            <summary>
            Codes property : Read Only
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.RemainQuantity">
            <summary>
            RemainQty property : Read Only
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.OrderPrice">
            <summary>
            委託價 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.Quantity">
            <summary>
            委託數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.DealQuantity">
            <summary>
            DealQty Property : Read Only
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.Price">
            <summary>
            Price property : Read Only
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.BS">
            <summary>
            BS poperty : Read Only
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.StopPrice">
            <summary>
            停損價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.Account">
            <summary>
            Account property : Read Only
            </summary>
            <value>
            帳號
            </value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.POrder">
            <summary>
            取得實體委託
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.ChangeTime">
            <summary>
            委託狀態改變時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.Transactions">
            <summary>
            所有成交資料
            ==>在client/server模式如何實做？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.BuySellInformation">
            <summary>
            買賣資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.PriceInformation">
            <summary>
            價格資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.QuantityInformation">
            <summary>
            委託量資訊 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.RemainQuantityInformation">
            <summary>
            剩餘量資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.ConditionInformation">
            <summary>
            條件資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.ExecutionInformation">
            <summary>
            執行狀態資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.AccountsUsed">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.#ctor(System.String,CapitalPipe.LiteTrading.Orders.OrderTerm,CapitalPipe.LiteTrading.Orders.StopOrderType,System.Decimal,CapitalPipe.LiteTrading.Orders.Order,System.String)">
            <summary>
            
            </summary>
            <param name="orderID"></param>
            <param name="ordTerm"></param>
            <param name="pOrder"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.#ctor(System.String,CapitalPipe.LiteTrading.Orders.StopOrderType,System.Decimal,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,System.String,System.String,System.String)">
            <summary>
            For錯誤委託
            </summary>
            <param name="orderID"></param>
            <param name="ordTerm"></param>
            <param name="stpType"></param>
            <param name="stpPrice"></param>
            <param name="pOrder"></param>
            <param name="ordSource"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.Quote_OnQuoteEvent(System.Object,CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.HasCommodity(System.String)">
            <summary>如果是有包涵商品，Ture；反之，False</summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.DeleteOrder(System.Boolean)">
            <summary>
            刪單
            </summary>
            <returns>True if PhysicalOrderManager Accept the instruction, False</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.DecreaseOrder(System.Int32)">
            <summary>
            減量
            </summary>
            <param name="qty">要減少的數量</param>
            <returns>True/False</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.AmendOrder(System.Object)">
            <summary>
            改價量 </summary>
            <param name="amendinfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.HandlePhysicalOrderChanged(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,CapitalPipe.LiteTrading.Orders.Transaction,System.Boolean)">
            <summary>
            
            </summary>
            <param name="order"></param>
            <param name="tr"></param>
            <param name="isMach"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.RecoverPhysicalOrder(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            Recover實體委託
            </summary>
            <param name="ord"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.newAmendOrder">
            <summary>下新的單(改單)</summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.InitSendOrder">
            <summary>
            初始送單，當GenericOrder被Activate時
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.ConcreteOrders.SyntheticStopOrder.UpdateState">
            <summary>更新委託狀態</summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.QueuedOrderData">
            <summary>
            佇列中的委託/成交事件
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.QueuedOrderData.QueueOrderDataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.QueuedOrderData.QueueOrderDataType.OrderEvent">
            <summary>
            裡面的資料是OrderEventArgs
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.QueuedOrderData.QueueOrderDataType.Transaction">
            <summary>
            裡面的資料是Transaction
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.QueuedOrderData.QueueOrderDataType.RawOrderData">
            <summary>
            裡面的資料是原始的委託資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.QueuedOrderData.QueueOrderDataType.InformOrderChange">
            <summary>
            通知發Ack事件，For Relay Server的修改
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.QueuedOrderData.QueueOrderDataType.DispatchOrderEvent">
            <summary>
            在委託事件thread發送委託事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.QueuedOrderData.QueueOrderDataType.CustomOrderCenterEvent">
            <summary>
            自定事件，For ConcreteOrderCenter子類別改寫時使用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.QueuedOrderData.OrderManager">
            <summary>
            委託中心
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.QueuedOrderData.DataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.QueuedOrderData.Tag">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.QueuedOrderData.Data">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.QueuedOrderData.#ctor(CapitalPipe.LiteTrading.Orders.QueuedOrderData.QueueOrderDataType,System.Object,System.Int32,CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager)">
            <summary>
            Constructor
            </summary>
            <param name="dataType"></param>
            <param name="data"></param>
            <param name="tag"></param>
            <param name="ordMgr"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.AccountFilter">
            <summary>
            帳號過濾器
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountFilter.CheckValidAccounts">
            <summary>
            當CheckValidAccounts為true時，只有在ValidAccounts裡面的帳號相關資料會被選取
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountFilter.CheckExcludeAccounts">
            <summary>
            當CheckExcludeAccounts為true時，在ExcludeAccounts裡面的帳號相關資訊會被排除
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountFilter.ValidAccounts">
            <summary>
            有效的帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountFilter.ExcludedAccounts">
            <summary>
            要被排除的帳號
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountFilter.IsValidAccount(CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>Function:IsValidAccount</summary>
            <param name="exchange"></param>
            <param name="strAcc"></param>
            <returns>True/False</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountFilter.ClearValidAccounts">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountFilter.AddValidAccount(CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            
            </summary>
            <param name="exchange"></param>
            <param name="acct"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountFilter.RemoveValidAccount(CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            移除
            </summary>
            <param name="acc"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.ClientIPControlMode">
            <summary>
            允許的IP來源模式
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.AccountInfo">
            <summary>
            帳號資料
            實際委託使用AccountInfo做為下單的帳號控管
            Alias + Exchange需唯一
            目前的帳號Hierarchy僅支援到Account + SubAccount，部份系統另有外帳或是SaleNo，待研究處理方式
            帳號依權限分為兩種：
            (1) 可下單帳號 ==> 在Accounts裡面
            (2) 監控帳號 ==> 在MonitorAccounts裡面
            GetAccount功能會自這兩組資料裡面找尋
            ---------------------------------------------------------------------------------- 
            for OrderCenter容錯：如果找不到帳號，則必須使用NoAccount
            ---------------------------------------------------------------------------------- 
            20151013
            ※ 新增AccountStatus的Enumeration，用來控制帳號的狀態
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.AccountInfo.AccountType">
            <summary>
            帳號的類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo.AccountType.Normal">
            <summary>
            正常的一般交易帳號
            </summary>            
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo.AccountType.Group">
            <summary>
            群組帳號(虛擬)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._accType">
            <summary>
            帳號類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._orderManagerID">
            <summary>
            委託管理員代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._exchange">
            <summary>
            交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._alias">
            <summary>
            帳號別名
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._uniqueID">
            <summary>
            身份證字號/統一編號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._brokerID">
            <summary>
            經紀商代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._branchID">
            <summary>
            分公司代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._account">
            <summary>
            主帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._subAccount">
            <summary>
            子帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._salesNo">
            <summary>
            營業員代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._userName">
            <summary>
            使用者名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._extra">
            <summary>
            其他額外資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._accStatus">
            <summary>
            帳號狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._isAutoGenerated">
            <summary>
            是否為自動產生的帳號？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._clientIPCtrolMode">
            <summary>
            下單IP控管方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._clientIPControl">
            <summary>
            允許下單的IP來源
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._accounts">
            <summary>
            屬於該登入用戶的所有可交易帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._monitorAccounts">
            <summary>
            屬於該登入用戶的所有可監控帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._accKeys">
            <summary>
            帳號key值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._monAccKeys">
            <summary>
            監控帳號的key值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo.NoAccount">
            <summary>
            空的帳號資料，用途為容錯
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountInfo._wildcardAccount">
            <summary>
            
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Orders.AccountInfo.PropertyChanged">
            <summary>
            屬性改變事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.AccType">
            <summary>
            帳號類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.IsAutoGenerated">
            <summary>
            是否為由模組自動產生的帳號(例如kgi模組會自動吐出可交易帳號)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.OrderManagerID">
            <summary>
            委託中心代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.Exchange">
            <summary>
            交易所代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.BrokerID">
            <summary>
            券商/模組Key值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.Alias">
            <summary>
            帳號別名
            在ui端主要是顯示這個內容
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.UniqueID">
            <summary>
            身份證字號/統一編號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.BranchID">
            <summary>
            分公司
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.Account">
            <summary>
            帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.SubAccount">
            <summary>
            子帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.SalesNo">
            <summary>
            營業員代碼
            20140101新增
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.UserName">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.Extra">
            <summary>
            其他額外資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.AccStatus">
            <summary>
            帳號狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.IPControlMode">
            <summary>
            下單IP控管模式
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.ValidClientIPs">
            <summary>
            允許的下單來源
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.DisplayValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.Self">
            <summary>
            For Data binding
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.Accounts">
            <summary>
            所有可以交易的帳號資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.AllTradableAccounts">
            <summary>
            所有可以交易的帳號資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.MonitorAccounts">
            <summary>
            所有可監控交易帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.AccountInfo.WildcardAccount">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="brkID"></param>
            <param name="alias"></param>
            <param name="exchange"></param>
            <param name="branchID"></param>
            <param name="account"></param>
            <param name="subaccount"></param>
            <param name="uid">the unique ID</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.AssignValidIPs(System.Collections.Generic.List{System.String})">
            <summary>
            指定允許的IP來源
            </summary>
            <param name="ips"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.IsValidClientIP(System.String)">
            <summary>
            是否為有效的來源IP
            </summary>
            <param name="strIP"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.SaveToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            存到XML節點
            </summary>
            <param name="doc"></param>
            <param name="node"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.HasThisAlias(System.String,System.String)">
            <summary>
            是否有這個別名？
            </summary>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.HasThisAccount(CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            是否有這個帳號？
            </summary>
            <param name="acInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.HasThisMonitorAccount(CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            是否有這組監控帳號
            </summary>
            <param name="acInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.GetAccountsByExchange(System.String)">
            <summary>
            依交易所別找出可下單帳號
            </summary>
            <param name="exchange"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.GetAccount(System.String,System.String,System.String)">
            <summary>
            由交易所/帳號/子帳號 找出對應的 AccountInfo
            2014/03新增：當_accounts找不到時，會去_monitorAccounts找
            </summary>
            <param name="exchange"></param>
            <param name="account"></param>
            <param name="subacc"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.GetAccount(System.String,System.String)">
            <summary>
            由交易所 +  別名 找出對應的帳號資料
            2014/03新增：當_accounts找不到時，會去_monitorAccounts找
            </summary>
            <param name="exchange"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.GetAccountFromOrderManagerByAlias(System.String,System.String,System.String)">
            <summary>
            從某個OrderCenter取出帳號
            </summary>
            <param name="orderManagerID"></param>
            <param name="acc"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.GetAccountFromOrderManager(System.String,System.String,System.String)">
            <summary>
            從某個OrderManager取出帳號
            </summary>
            <param name="orderManagerID"></param>
            <param name="acc"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.GetAccountFromOrderManager(System.String,System.String,System.String,System.String)">
            <summary>
            從某個OrderCenter取出帳號
            </summary>
            <param name="orderManagerID"></param>
            <param name="acc"></param>
            <param name="subAcc"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.AddAccountInfos(System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.Orders.AccountInfo})">
            <summary>
            新增帳號資料，新增時會自動派送SystemConfigurationEvent，call這個方法時不用再額外處理這一段
            </summary>
            <param name="acc"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.AddAccountInfo(CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            新增帳號資料，新增時會自動派送SystemConfigurationEvent，call這個方法時不用再額外處理這一段
            </summary>
            <param name="acc"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.RemoveAccountInfo(CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            移除帳號資料
            </summary>
            <param name="acc"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.GetUniqueAliases">
            <summary>
            取得所有交易帳號的Alias集合
            </summary>
            <returns></returns>
        </member>
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.Orders.AccountInfo.GetAccountFromUnion(System.String,System.String)" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.GetAccountFromUnionByAccount(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="exchange"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.GetMonitorAccount(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="exchage"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.GetMonitorAccount(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="exchange"></param>
            <param name="account"></param>
            <param name="subAcc"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.GetAccountsByOrderManagerID(System.String)">
            <summary>
            依OrderManagerID取得可以交易的帳號
            </summary>
            <param name="orderMangerID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.AddMonitorAccountInfo(CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            新增帳號資料
            </summary>
            <param name="acc"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.RemoveMonitorAccountInfo(CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            移除帳號資料
            </summary>
            <param name="acc"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.ParseFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            自XML節點讀取資料
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.SaveToXMLFile(System.String,System.Boolean)">
            <summary>
            存入XML檔案(指定檔名)
            </summary>
            <param name="fn">檔案名稱</param>
            <param name="incAutoGen">是否包含自動產生的帳號？</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.SaveToXMLFile(System.Boolean)">
            <summary>
            存檔(預設檔名)
            </summary>
            <param name="incAutoGen"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.LoadFromXMLFile(System.String)">
            <summary>
            讀檔(指定檔名)
            </summary>
            <param name="fn"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.LoadFromXMLFile">
            <summary>
            讀檔(預設檔名)
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AccountInfo.FirePropertyChangedEvent(System.String)">
            <summary>
            
            </summary>
            <param name="fieldID"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.AccountStatus">
            <summary>
            帳號狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountStatus.Normal">
            <summary>
            正常狀態，可以下單交易
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountStatus.Monitor">
            <summary>
            監控帳號，只有view的權限
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountStatus.Forbidden">
            <summary>
            禁止交易狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountStatus.Inactive">
            <summary>
            非使用狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.AccountStatus.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.ActionResult">
            <summary>
            動作執行結果
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ActionResult.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ActionResult.NoBaseOrder">
            <summary>
            無委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ActionResult.Neutral">
            <summary>
            中立
            </summary>  
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ActionResult.FailToNew">
            <summary>
            新單失敗
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ActionResult.FailToCancel">
            <summary>
            刪單失敗
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ActionResult.FailToAmendPrice">
            <summary>
            改價失敗
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ActionResult.FailToAmendVolume">
            <summary>
            改量失敗
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ActionResult.NewOrderSuccess">
            <summary>
            新單成功
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ActionResult.AmendPriceSuccess">
            <summary>
            改價成功
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ActionResult.CancelSuccess">
            <summary>
            刪單成功
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ActionResult.AmendVolumeSucess">
            <summary>
            改量成功
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.ActivateState">
            <summary>
            委託的啟動狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ActivateState.Activate">
            <summary>
            已經啟用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ActivateState.Activating">
            <summary>
            正在啟用中
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ActivateState.Deactivate">
            <summary>
            未啟用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ActivateState.Deactivating">
            <summary>
            取消啟用中
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.BasketOrder">
            <summary>Basket委託</summary>
            BasketOrder一開始的狀態是Pending，將Active屬性設成true後會觸發flush方法，此時才會送出委託
            ConceptOrderManager要實做兩種下單式，一種是直接送單，一種是只先產生空殼
            追價用改單方式做
            ----------------------------------------------------------        
            要思考卡住時的處理機制
            每個商品當做一個獨立的entry來處理，basket委託只是sum總和的概念
            ----------------------------------------------------------
            每筆單的下單控制由OrderTerm來決定
            
             
            委託狀態管理：
            (1) 在回報收到任一筆單的新單錯誤(Error/Failure，不含刪單/減量的錯誤) ==> 進入Fail流程
                  Fail的流程：(a)先把Fail的旗標on起來；(b)刪除所有的委託；
            (2) 改單的狀態變化
            
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.BasketOrder.ResendType">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.BasketOrder.BasketOrderSingleEntry">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BasketOrder.BasketOrderSingleEntry.PropCode">
            <summary>
            For Binding使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BasketOrder.BasketOrderSingleEntry.PropBuySell">
            <summary>
            For Binding使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BasketOrder.BasketOrderSingleEntry.PropOrdPrice">
            <summary>
            For Binding使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BasketOrder.BasketOrderSingleEntry.PropQuantity">
            <summary>
            For Binding使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BasketOrder.BasketOrderSingleEntry.PropRemainQuantity">
            <summary>
            For Binding使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BasketOrder.BasketOrderSingleEntry.PropMatchQuantity">
            <summary>
            For Binding使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BasketOrder.Code">
            <summary>
            商品代碼 ==> Basket
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BasketOrder.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BasketOrder.BS">
            <summary>
            買賣別：Basket委託沒有買賣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BasketOrder.OrderEntryCount">
            <summary>
            商品筆數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BasketOrder.BasketOrderSingleEntries">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BasketOrder.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ordno"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BasketOrder.GetRemainQuantity(System.String)">
            <summary>
            取得剩餘數量
            </summary>
            <param name="strCode"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BasketOrder.GetDealQuantity(System.String)">
            <summary>
            取得成交數量
            </summary>
            <param name="strCode"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BasketOrder.GetBuyAmount">
            <summary>
            取得買入金額
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BasketOrder.GetSellAmount">
            <summary>
            取得賣出金額
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BasketOrder.GetBuyRemainAmount">
            <summary>
            取得買進未成交金額
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BasketOrder.GetSellRemainAmount">
            <summary>
            取得賣出未成交金額
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BasketOrder.GetBuyMatchAmount">
            <summary>
            取得買進成交金額
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BasketOrder.GetSellMatchAmount">
            <summary>
            取得賣出成交金額
            </summary>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.BasketOrderAmendInfo">
            <summary>
            Basket委託改單
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.BasketOrderAmendInfo.BasketOrderAmendType">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BasketOrderAmendInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.BracketOrder">
            <summary>
            Bracket
            ----------------------------------------------------------
            實做：
                會掛一筆limit及一筆stop單
            ----------------------------------------------------------
            Bracket委託的行為規範：
            部份成交行為：
                當limit單部份成交後，要減少stop單的掛單數量
            使用者手動刪實體委託單：
                來自非預期的刪單回報，將整筆委託單刪除
            ----------------------------------------------------------        
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.BracketOrder._bsType">
            <summary>
            買賣類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.BracketOrder._accInfo">
            <summary>
            帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.BracketOrder._priUsing">
            <summary>
            觸價後的委託價計算方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.BracketOrder._offsetParameter">
            <summary>
            觸價後的委託價計算調整參數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.BracketOrder._quantity">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.BracketOrder._chgTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketOrder.Code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketOrder.BS">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketOrder.Codes">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketOrder.Type">
            <summary>
            委託類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketOrder.ChangeTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketOrder.UpperPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketOrder.LowerPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketOrder.OrderQuantity">
            <summary>
            委託數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketOrder.MatchQuantity">
            <summary>
            成交數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketOrder.RemainQuantity">
            <summary>
            剩餘數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketOrder.OrderPriceUsing">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketOrder.OffsetParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketOrder.Account">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketOrder.ExecuteStatus">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BracketOrder.#ctor(System.String,System.String,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int16,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            Constructor
            </summary>
            <param name="ordID"></param>
            <param name="ordSource"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BracketOrder.HasCommodity(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.BSType">
            <summary>
            買賣別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.BSType.Buy">
            <summary>
            買進
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.BSType.Sell">
            <summary>
            賣出
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.BSType.Quote">
            <summary>
            報價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.BSType.Composite">
            <summary>
            複合 ==> 用在basket這類型無法確定買賣別的委託單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.BSType.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo">
            <summary>
            一般單的改單參數
            改單接受的是一個object，故要ConceptOrder要自己去cast成自已要的型態
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo.AmendOrderType">
            <summary>
            改單類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo.AmendOrderType.ReplacePrice">
            <summary>
            改價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo.AmendOrderType.DecreaseQuantity">
            <summary>
            減量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo.AmendOrderType.ChangeToMarketOrder">
            <summary>
            轉成市價單
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo.AmendType">
            <summary>
            改單類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo.NewOrderType">
            <summary>
            新的委託價類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo.PriceUsing">
            <summary>
            使用的委託價類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo.TickOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo.NewPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo.DecreaseQuanity">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo.#ctor(CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo.AmendOrderType,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int16,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType)">
            <summary>
            Constructor
            </summary>
            <param name="amdType"></param>
            <param name="pri"></param>
            <param name="qty"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo.#ctor(CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo.AmendOrderType,CapitalPipe.LiteTrading.Orders.OrderType)">
            <summary>
            
            </summary>
            <param name="amdType"></param>
            <param name="priceUsing"></param>
            <param name="tickOffset"></param>
            <param name="pri"></param>
            <param name="qty"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.GenericOrder">
            <summary>
            類別：GenericOrder一般單，
            QuoteOrder與GenericOrder獨立，ComboOrder屬GenericOrder
            委託價：
                ==> 支援在送單時以市場報價為基準
                ==> 揩示：使用PriceInfomation
            改單操作：
            (1)改價：
               (a)交易所支援改價，直接改價
                  ==> 若新傳入的委託價有誤，會略掉操作
               (b)交易所不支援改價，合成(synthetic)改價，刪單後改送新單
                  ==> 若新傳入的委託價有誤，則前單會被刪除，狀態為新單失敗
            (2)改量：僅支援減量
            
            可以刪單的時機：
            只要委託狀態不是Finalized，都允許刪單
            (改單中的刪單)
            
            ------------------------------------------------------------------
            20160319
            ※ 新增ReceivedMatchQuantity以及IsAllMatchesReceived屬性，若有成交時，用這個flag來判斷是否所有的成交資料都已收集到了
               ==> 用來處理：當成交時，有些系統會先打回委託回報，並且會有成交數量，但是此時尚未收到成交資料
                   若委託已處於finalized的狀態，會對自動交易的狀態判斷造成影響
                   (若還沒collect到所有的成交，在自動交易的避險處理時，不應該判斷成已經Finalized!!)
                   自動交易的避險端潛在風險：若計算應避險數量是以RemainQty為基準時，在這個case會有計算上的錯誤產生
                   修正這個問題的方法應該是：以OrderQuantity - Collect到的成交數量，用這個數量做為判斷依據，
                   可以避免上述問題造成的錯誤避險行為
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.Type">
            <summary>OrderType property : Read Only</summary>
            <value>GenericOrder</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.RemainQuantity">
            <summary>RemainQty property : Read Only</summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.DealQuantity">
            <summary>
            DealQty Property : Read Only
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.OriginalQuantity">
            <summary>
            原始委託量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.TargetQuantity">
            <summary>
            目標單量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.PreviousPrice">
            <summary>
            改價前的價格
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.Price">
            <summary>
            委託價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.Account">
            <summary>Account property : Read Only</summary>
            <value>(子)帳號</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.PhysicalOrderType">
            <summary>
            實體委託類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.FillType">
            <summary>
            委託單的Time in Force
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.PhysicalOrderMessage">
            <summary>
            實體委託單最後訊息
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.OrderNo">
            <summary>
            委託書號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.ServerOrderID">
            <summary>
            Server的OrderID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.Terms">
            <summary>
            委託條件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.ReceivedMatchQuantity">
            <summary>
            真正收到成交回報的數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.IsAllMatchesReceived">
            <summary>
            是否所有的成交都已經收到了？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.OpenClose">
            <summary>
            開平倉
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.GenericOrder.ActionResult">
            <summary>
            動作結果
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.GenericOrder.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="orderID"></param>
            <param name="ordSource"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.ManualOrderCheckService">
            <summary>
            手動下單的安全檢查機制!!
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Orders.ManualOrderCheckService.PropertyChanged">
            <summary>
            屬性改變
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ManualOrderCheckService._defaultService">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.ManualOrderCheckService.DefaultService">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.ManualOrderCheckService.CheckGenericOrder(System.String,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.Orders.OrderType,System.Decimal,System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.ManualOrderCheckService.CheckStopOrder(System.String,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.Orders.StopOrderType,System.Decimal,System.Decimal,System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.ManualOrderCheckService.CheckQuoteOrder(System.String,System.Decimal,System.Int32,System.Decimal,System.Int32)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="bidPri"></param>
            <param name="bidQty"></param>
            <param name="askPri"></param>
            <param name="askQty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.ManualOrderCheckService.FirePropertyChangedEvent(System.String)">
            <summary>
            
            </summary>
            <param name="field"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.MITOrder">
            <summary>
            Market If Touch委託單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.MITOrder._direction">
            <summary>
            觸價類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.MITOrder._triggerPrice">
            <summary>
            觸發價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.MITOrder.MITOrderType">
            <summary>
            MIC委託類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.MITOrder.OrderNo">
            <summary>
            委託書號
            ==> MI單未觸發前是"--"，觸發後是委託書號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.MITOrder.Direction">
            <summary>
            停損單類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.MITOrder.OrderPrice">
            <summary>
            委託價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.MITOrder.TriggerPrice">
            <summary>
            停損價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.MITOrder.Quantity">
            <summary>
            委託量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.MITOrder.DealQuantity">
            <summary>
            成交量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.MITOrder.RemainQuantity">
            <summary>
            剩餘量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.MITOrder.Account">
            <summary>
            帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.MITOrder.ServerOrderID">
            <summary>
            Server的OrderID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.MITOrder.OpenClose">
            <summary>
            開平倉
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.MITOrder.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ordID"></param>
            <param name="ordSource"></param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.MITDirection.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.MITDirection.Up">
            <summary>
            向上觸價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.MITDirection.Down">
            <summary>
            向下觸價
            </summary>
        </member>
        <!-- 已忽略成員 "T:CapitalPipe.LiteTrading.Orders.Order" 中格式錯誤的 XML 註解 -->
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._internalLock">
            <summary>
            For內部lock使用，避免出現lock(this)的寫法
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._lastModifiedClient">
            <summary>
            最後修改的Client端，for gateway使用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._orderSequenceID">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._reqID">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._activateState">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._parentOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._orderGroup">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._amendable">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._active">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._canDelete">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._orderID">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._orderSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._description">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._strategyType">
            <summary>
            策略類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._strategyID">
            <summary>
            策略代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._msg">
            <summary>
            此筆委託的相關訊息(後檯回應字串之類的)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._ordTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._ordState">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Order._defaultClientIP">
            <summary>
            委託來源IP
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Orders.Order.OnOrderChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.SequenceID">
            <summary>
            Local端使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.RequestID">
            <summary>
            原始請求序號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.ActiveState">
            <summary>
            啟用狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.ParentOrder">
            <summary>ParentOrder property : Read Only </summary>
            <value>傳回母單的參考值，若沒有母單則回傳null</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.Amendable">
            <summary>
            Amendable property : Read Only</summary>
            <value>是否允許改單，是傳回true，否則是false</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.Active">
            <summary>Active property : Read Only</summary>
            <value>是否在啟用狀態</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.OrderID">
            <summary>COrderNo property : Read Only</summary>
            <value>委託單號</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.OrderTime">
            <summary>OrderTime property : Read Only</summary>
            <value>初始委託時間</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.ChangeTime">
            <summary>
            委託修改時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.OrderState">
            <summary>
            OrderState property : Read Only</summary>
            <value>委託狀態</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.CanDelete">
            <summary>
            CanDelete property : Read Only</summary>
            <value>是否允許刪單</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.Description">
            <summary>
            委託描述
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.Message">
            <summary>Message property : Read Only</summary>
            <value>委託訊息</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.Tag">
            <summary>
            委託標籤
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.Code">
            <summary>Code property : Read Only</summary>
            <value>商品代碼(HPT代碼)</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.Type">
             <summary>OrderType property : Read Only</summary>
            <value>委託類型</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.Codes">
            <summary>
            該筆委託的所有商品代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.BS">
            <summary>
            買賣別：B = 買，S = 賣
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.Transactions">
            <summary>
            所有成交資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.OrderSource">
            <summary>
            委託來源資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.IsFinalized">
            <summary>
            委託是否已處於終止狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.IsFailOrError">
            <summary>
            是否為委託錯誤的狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.StrategyType">
            <summary>
            策略類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.StrategyID">
            <summary>
            策略代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.LastModifiedClient">
            <summary>
            最後修改的client端來源
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.DefaultClientIPAddress">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.BuySellInformation">
            <summary>
            買賣資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.PriceInformation">
            <summary>
            價格資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.QuantityInformation">
            <summary>
            委託量資訊 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.RemainQuantityInformation">
            <summary>
            剩餘量資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.ConditionInformation">
            <summary>
            條件資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.ExecutionInformation">
            <summary>
            執行狀態資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Order.AccountsUsed">
            <summary>
            使用的下單帳號
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Order.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ordID">委託編號</param>
            <param name="ordSource">委託來源</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Order.HasCommodity(System.String)">
            <summary>是否有某個商品？</summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Order.DeleteOrder(System.Boolean)">
            <summary>
            刪單
            20130822加入forceDelete flag
            </summary>
            <param name="forceDelete">true:強制刪單；false:一般刪單</param>
            <returns>True:可刪單且送出刪單指令，False:不可刪單。注意：回傳Ture不代表刪單成功</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Order.DecreaseOrder(System.Int32)">
            <summary>減量</summary>
            <param name="qty">減少的數量</param>
            <returns>True:可減量且送出減量指令，False:不可減量。注意：回傳Ture不代表減量成功</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Order.AmendOrder(System.Object)">
            <summary>改單</summary>
            <param name="amendinfo">改單的參數(因為無法預測會傳入什麼樣的值，所以用一個物件代替)</param>
            <returns>True:可以改單且送出改單指令，False:不可改單。注意：</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Order.FireOrderEvent(CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            透過Delegate來傳送委託改變事件，sender是自已。注意：本方法僅能在Order及其子類別中使用
            本方法會Post一個委託狀態改變的事件</summary>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Order.InvokeOrderEvent(CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            給外部呼叫用的
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Order.FireOrderEvent(CapitalPipe.LiteTrading.Orders.OrderEventType,CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            派送委託事件
            </summary>
            <param name="evType"></param>
            <param name="tr"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Order.SetOrderGroup(CapitalPipe.LiteTrading.Orders.OrderGroup)">
            <summary>
            設定委託群組
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Order.SetLastModifiedClient(System.String)">
            <summary>
            最後修改的來源
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Order.IsErrorOrFailState(CapitalPipe.LiteTrading.Orders.OrderState)">
            <summary>
            
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Order.OrderStateToString(CapitalPipe.LiteTrading.Orders.OrderState)">
            <summary>
            委託狀態字串
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Order.GetBuySellInformation(CapitalPipe.LiteTrading.Orders.BSType)">
            <summary>
            取得買賣別的說明文字
            </summary>
            <param name="bs"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderGuardService">
            <summary>
            委託交易安控服務
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderGuardService.OrderDtPair">
            <summary>
            送單時間紀錄
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderGuardService.OrderDtPair.SendOrdTime">
            <summary>
            送單時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderGuardService.OrderDtPair.BaseOrder">
            <summary>
            委託單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderGuardService._bCheckNominalAmount">
            <summary>
            是否檢查異常金額
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderGuardService._bCheckOrderSpeed">
            <summary>
            是否檢查委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderGuardService._bAbnormalSpeedTriggered">
            <summary>
            是否觸發金額檢查？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderGuardService._millionLimit">
            <summary>
            百萬檢查限額
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderGuardService._speedCheckSeconds">
            <summary>
            速度檢查秒數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderGuardService._speedCheckLimit">
            <summary>
            速度檢查限制
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderGuardService._bCheckBidAskSpreadPercentage">
            <summary>
            Bid/Ask Spread%的檢查
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderGuardService._maxSpread">
            <summary>
            最大的spread範圍
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderGuardService._bCheckBidAskSpreadTicks">
            <summary>
            檢查Bid/Ask的Tick差
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderGuardService._maxtSpreadTicks">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderGuardService._recentOrders">
            <summary>
            最近傳送的委託單
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Orders.OrderGuardService.PropertyChanged">
            <summary>
            屬性改變
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderGuardService._defaultService">
            <summary>
            預設的OrderService
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderGuardService.CheckNominalAmount">
            <summary>
            檢查名目金額
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderGuardService.CheckOrderSpeed">
            <summary>
            檢查速度上限
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderGuardService.AbnormalSpeedTriggered">
             <summary>
            
             </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderGuardService.MillionLimit">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderGuardService.MillionLimitValue">
            <summary>
            金額上限
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderGuardService.SpeedCheckSeconds">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderGuardService.SpeedCheckLimit">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderGuardService.CheckBidAskSpreadPercentage">
            <summary>
            檢查Bid/Ask價差%
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderGuardService.MaxBidAskSpreadInPercentage">
            <summary>
            Bid/Ask價差的上限%
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderGuardService.CheckBidAskSpreadTicks">
            <summary>
            檢查Bid/Ask價差的Ticks
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderGuardService.MaxBidAskSpreadTicks">
            <summary>
            Bid/Ask的Tick差上限
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderGuardService.DefaultService">
            <summary>
            預設的委託Service
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderGuardService.DefaultSettingFile">
            <summary>
            預設的設定檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderGuardService.#ctor">
            <summary>
            載入設定
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderGuardService.CheckOverSpeedLimit(CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            檢查是否超過速度限制
            </summary>
            <param name="newOrder"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderGuardService.CheckValidBidAsk(CapitalPipe.LiteTrading.Quotes.Quote,System.String@)">
            <summary>
            價差單怎麼辦？@@
            </summary>
            <param name="q"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderGuardService.DoOtherCheck(CapitalPipe.LiteTrading.Orders.Order,System.String@)">
            <summary>
            各客製化模組可以改寫這個方法來完成客製化的風控
            </summary>
            <param name="newOrder"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderGuardService.DoAmendGenericOrderCheck(CapitalPipe.LiteTrading.Orders.GenericOrder,CapitalPipe.LiteTrading.Orders.GenericOrderAmendInfo,System.String@)">
            <summary>
            檢查是否允許改單？
            </summary>
            <param name="amendOrdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderGuardService.SaveSettings">
            <summary>
            儲存設定
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderGuardService.LoadSettings">
            <summary>
            載入設定
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderGuardService.FirePropertyChangedEvent(System.String)">
            <summary>
            發送屬性改變事件
            </summary>
            <param name="field"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderHelper">
            <summary>
            委託工具程式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderHelper._autoSplitWhenOverVolumeLimit">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderHelper._autoSplitCountLimit">
            <summary>
            拆單次數上限
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderHelper.XMLTagValue_AutoSlpitWhenOverVolumeLimit">
            <summary>
            [XML Attribute Tag]當超過委託量上限後自動拆單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderHelper.XMLTagValue_AutoSplitCountLimit">
            <summary>
            [XML Attribute Tag]自動拆單筆數上限
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderHelper.AutoSplitWhenOverVolumeLimit">
            <summary>
            當超過委託量上限後，自動拆單
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderHelper.AutoSplitCountLimit">
            <summary>
            拆單筆數上限
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderHelper.DefaultSettingFile">
            <summary>
            預設的設定檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderHelper.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderHelper.LoadCommonSettings">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderHelper.SaveCommonSettings">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderHelper.ManualSendGenericOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="bsType"></param>
            <param name="pri"></param>
            <param name="iQty"></param>
            <param name="accInfo"></param>
            <param name="pref"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderHelper.ManualSendGenericOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.Orders.OrderType,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="bsType"></param>
            <param name="pri"></param>
            <param name="iQty"></param>
            <param name="accInfo"></param>
            <param name="pref"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderHelper.ToComboOrderBuySell(System.String,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.String,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,CapitalPipe.LiteTrading.Commodities.CommodityInfo@,CapitalPipe.LiteTrading.Orders.BSType@,System.Decimal@,System.String@)">
            <summary>
            找出複式商品的買賣別
            </summary>
            <param name="leg1Code"></param>
            <param name="leg1BS"></param>
            <param name="leg2Code"></param>
            <param name="leg2BS"></param>
            <param name="retBS"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderManager">
            <summary>
            20150118 OrderManager/OrderCenter的名稱互換，以更符合直覺
            ※ OrderManager分成兩類：Proxy與實際串接的
            20160429
            ※ 調整IsSupportXXX的介面(因DirectOrder修改)，加入AccountInfo參數
            20160521
            ※ 新增ExecuteCommand指令
            ※ 新增GetOrderManagerDetailStatus指令
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderManager._orderManagers">
            <summary>
            所有的委託管理員
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderManager._orderPreferenceEditors">
            <summary>
            委託條件編輯器
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderManager._preferenceEditors">
            <summary>
            委託條件編輯器(新)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderManager._orderSettingEditors">
            <summary>
            委託管理員的Admin介面
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderManager._preferenceFormatters">
            <summary>
            委託條件的Formatter
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderManager._preFormatters">
            <summary>
            委託條件的Formatter
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderManager.OrderManagerID">
            <summary>
            委託管理員代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderManager.AllOrderManagers">
            <summary>
            所有的委託管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.Terminate">
            <summary>
            Terminate委託管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.ExecuteCommand(System.String,System.String)">
            <summary>
            執行各項管理指令(For遠端管理使用)
            </summary>
            <param name="commandID"></param>
            <param name="paramenter"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.GetDiagnosticInfo">
            <summary>
            取得委託管理員的狀態(For遠端管理使用)
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.QueryInfo(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.AddOrderManagerSettingEditor(System.String,CapitalPipe.LiteTrading.Orders.DoEditOrderManagerSettingDelegate)">
            <summary>
            新增委託中心編輯器
            </summary>
            <param name="moduleID">委託模組代碼</param>
            <param name="editor">委託中心編輯器</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.RemoveManagerManagerEditor(System.String)">
            <summary>
            移除委託管理員的Editor編輯器
            </summary>
            <param name="moduleID">委託模組代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.GetOrderPreferenceEditor(System.String)">
            <summary>
            取得委託條件編輯器
            </summary>
            <param name="moduleID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.AddOrderPreferenceEditor(System.String,CapitalPipe.LiteTrading.Orders.DoEditOrderPreferenceDelegate)">
            <summary>
            加入委託條件編輯器
            </summary>
            <param name="moduleID"></param>
            <param name="editor"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.RemoveOrderPrefereceEditor(System.String)">
            <summary>
            移除委託條件編輯器
            </summary>
            <param name="moduleID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.GetPreferenceEditor(System.String)">
            <summary>
            取得委託條件編輯器
            </summary>
            <param name="moduleID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.AddPreferenceEditor(System.String,CapitalPipe.LiteTrading.Orders.EditOrderPreferenceDelegate)">
            <summary>
            加入委託條件編輯器
            </summary>
            <param name="moduleID"></param>
            <param name="editor"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.RemovePrefereceEditor(System.String)">
            <summary>
            移除委託條件編輯器
            </summary>
            <param name="moduleID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.GetPhysicalOrderManagerSettingEditor(System.String)">
            <summary>
            取得委託管理員編輯器
            </summary>
            <param name="moduleID">委託模組代碼</param>
            <returns>委託中心編輯器</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.GetOrderManagerByID(System.String)">
            <summary>
            利用委託管理員的代碼來取得委託管理員
            </summary>
            <param name="mgrID">委託管理員的代碼</param>
            <returns>
            有找到：委託管理員的物件
            沒找到：null
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.CreateOrderPreference(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType)">
            <summary>
            建立委託條件(Pure abstract，子類型要改寫)
            </summary>
            <param name="cmd"></param>
            <param name="ordType"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.CreateOrderPreference(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            上面function要取消時，這個function要改成abstract!!
            20160501之後的子類別都要實做個function
            </summary>
            <param name="cmd"></param>
            <param name="ordType"></param>
            <param name="acc"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.CreateOrderPreference(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType)">
            <summary>
            建立委託條件(Pure abstract，子類型要改寫)
            </summary>
            <param name="_cmdInfo"></param>
            <param name="ordType"></param>
            <param name="fillType"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.CreateOrderPreference(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            上面function要取消時，這個function要改成abstract!!
            20160501之後的子類別都要實做個function
            </summary>
            <param name="cmd"></param>
            <param name="ordType"></param>
            <param name="fillType"></param>
            <param name="accInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.IsPreferenceValid(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            委託條件是否有效？(Pure abstract，子類型要改寫)
            </summary>
            <param name="pref"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.IsPreferenceValid(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderPreference,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            委託條件是否有效？(Pure abstract，子類型要改寫)
            上面function要取消時，這個function要改成abstract!!
            20160501之後的子類別都要實做個function
            </summary>
            <param name="pref"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.DoClear(System.String)">
            <summary>
            執行各市場的清盤
            </summary>
            <param name="market"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.FinalClear">
            <summary>
            執行最終的清盤
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.AddPreferenceFormatter(System.String,CapitalPipe.LiteTrading.Orders.OrderPreferenceFormatter)">
            <summary>
            加入OrderPreference的Formatter
            </summary>
            <param name="orderManagerID"></param>
            <param name="formatter"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.HasByAccountPreferenceFormatter(System.String)">
            <summary>
            
            </summary>
            <param name="orderCenterID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.HasPreferenceFormatter(System.String)">
            <summary>
            
            </summary>
            <param name="orderManagerID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.AddPreferenceFormatter(System.String,CapitalPipe.LiteTrading.Orders.OrderPreferenceFormatterDelegate)">
            <summary>
            加入OrderPreference的Formatter
            </summary>
            <param name="orderManagerID"></param>
            <param name="formatter"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.FormatOrderPreference(System.String,CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            
            </summary>
            <param name="orderCenterID"></param>
            <param name="pref"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderManager.FormatOrderPreference(CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            Format委託條件
            </summary>
            <param name="accInfo"></param>
            <param name="pref"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderContainer">
            <summary>
            用來過濾並儲存特定條件的委託資料
            ==>目前僅適用一般委託(GenericOrder)及觸價委託(StopOrder)
            Inspired by Ken Wu
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderEventArgs">
            <summary>
            用來當做POrdEvent傳送時的事件描述(包括PhysicalOrderManager事件)</summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderEventArgs._eventCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderEventArgs._eventMsg">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderEventArgs.EventCode">
            <summary>
            事件代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderEventArgs.EventOrder">
            <summary>
            委託資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderEventArgs.EventMessage">
            <summary>
            事件訊息
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderEventArgs.EventTransaction">
            <summary>
            有成交的話會帶入該筆成交資料，無則是null
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderEventArgs.#ctor(CapitalPipe.LiteTrading.Orders.OrderEventType,System.String,CapitalPipe.LiteTrading.Orders.Order,CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            Constructor</summary>
            <param name="evCode">事件代碼</param>
            <param name="evMsg">事件訊息</param>
            <param name="ord">委託資訊</param>
            <param name="trans">成交資訊</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderEventHandler">
            <summary>
            委託事件處理程序
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderEventType">
            <summary>
            Enumeration : 此列舉做為通用的委託事件類型(包括ConceptOrderManager事件)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderEventType.NewOrder">
            <summary>
            新單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderEventType.OrderChanged">
            <summary>
            委託狀態改變
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderEventType.OrderMatched">
            <summary>
            委託成交
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderFillType">
            <summary>
            委託Fill類型
            委託條件之一，不見得所有的交易所都有支援
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderGroup">
            <summary>
            類別：群組委託。要視為一個同一個群組的委託可以用OrderGroup來做model</summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderGroup.Groups">
            <summary>
            Groups property : Read Only</summary>
            <value>傳回所有的群組委託</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderGroup.Orders">
            <summary>
            傳回該群組目前的所有ConceptOrder</summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderGroup.#ctor(System.Collections.Generic.List{CapitalPipe.LiteTrading.Orders.Order})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderGroup.AddOrder(CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            
            </summary>
            <param name="order"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderCenter">
            <summary>
            OrderManager : Order的管理中心
            20150118 OrderManager/OrderCenter的名稱互換，以更符合直覺
            使用時必須在PhysicalOrderManager初始化後，呼叫initialize函式
            20150222
            ※ 重大修改，把OrderSource改成string
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderCenter.LastError">
            <summary>LastError property : Read Only</summary>
            <value>最後的錯誤訊息</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderCenter.DefaultOrderCenter">
            <summary>Manager property : Read Only</summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.GetAllGenericOrderByCode(System.String)">
            <summary>回傳所有的一般單</summary>
            <param name="code">商品代碼(RTS系統代碼)</param>
            <returns>所有符合條件的GenericOrder</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.GetAllOrdersByCode(System.String,System.Boolean)">
            <summary>回傳所有的一般單</summary>
            <param name="code">商品代碼</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.GetAllGenericOrders">
            <summary>回傳所有的一般單</summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.GetWorkingOrders">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.GetAllQuoteOrders">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.GetAllStopOrders">
            <summary>回傳所有的觸價單</summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.GetAllOrders">
            <summary>回傳所有委託</summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.AddAmendOrderHandler(System.String,CapitalPipe.LiteTrading.Orders.OrderCenter.DoAmendOrderDelegate)">
            <summary>
            增加改單的Delegate
            </summary>
            <param name="ordType"></param>
            <param name="degl"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.DoAmendOrder(CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            修改委託
            </summary>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.CreateOrderPreference(System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType)">
            <summary>
            
            </summary>
            <param name="_cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.CreateOrderPreference(System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType)">
            <summary>
            
            </summary>
            <param name="orderManagerID"></param>
            <param name="_cmdInfo"></param>
            <param name="ordType"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.IsPreferenceValid(System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            
            </summary>
            <param name="pref"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.FormatOrderPreference(System.String,CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            格式化顯示委託條件
            </summary>
            <param name="orderManagerID"></param>
            <param name="pref"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.CreateOrderPreference(CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType)">
            <summary>
            
            </summary>
            <param name="_cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.CreateOrderPreference(CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType)">
            <summary>
            
            </summary>
            <param name="orderManagerID"></param>
            <param name="_cmdInfo"></param>
            <param name="ordType"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.IsPreferenceValid(CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            
            </summary>
            <param name="pref"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.FormatOrderPreference(CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            格式化顯示委託條件
            </summary>
            <param name="orderManagerID"></param>
            <param name="pref"></param>
            <returns></returns>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderCenter.OrderCenterIDs">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderCenter.OrderManagerIDs">
            <summary>
            委託管理員ID
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.GetOrderPreferenceEditor(CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.EditOrderPreference(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType@,CapitalPipe.LiteTrading.Orders.OrderPreference,CapitalPipe.LiteTrading.Orders.OrderPreferenceType,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="ordType"></param>
            <param name="pref"></param>
            <param name="paremeter"></param>
            <param name="acc"></param>
            <returns></returns>
        </member>
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.Orders.OrderCenter.NewGenericOrder(System.String,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int16,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String)" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.NewQuoteOrder(System.String,System.Decimal,System.Decimal,System.Int32,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.String,System.String)">
            <summary>
            報價單
            </summary>
            <param name="code"></param>
            <param name="bidPrice"></param>
            <param name="askPrice"></param>
            <param name="bidQty"></param>
            <param name="askQty"></param>
            <param name="pref"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="acc"></param>
            <param name="orderSource"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.NewStopOrder(System.String,CapitalPipe.LiteTrading.Orders.StopOrderType,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String)">
            <summary>
            停損單
            </summary>
            <param name="code"></param>
            <param name="stopType"></param>
            <param name="bs"></param>
            <param name="stopPrice"></param>
            <param name="pref"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="ac"></param>
            <param name="orderSource"></param>
            <param name="reqID">
            請求序號，只有在OrderManager處於Gateway模式才需要填入此參數
            一般的AP開發時，請填入-1
            </param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.NewBracketOrder(System.String,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Decimal,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int16,System.Int32,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="stopType"></param>
            <param name="bs"></param>
            <param name="upperPrice"></param>
            <param name="lowerPrice"></param>
            <param name="qty"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="orderSource"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.NewTrailingStopOrder(System.String,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Int16,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int16,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="stopType"></param>
            <param name="bs"></param>
            <param name="beginTrailingPrice"></param>
            <param name="trailingTicks"></param>
            <param name="quantity"></param>
            <param name="accInfo"></param>
            <param name="orderSource"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.NewBasketOrder(System.String,System.String,System.String,System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.Orders.OrderTerm})">
            <summary>
            新增basket委託
            </summary>
            <param name="ordTerms"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderCenter.NewMITOrder(System.String,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.Orders.MITDirection,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,System.Int16,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
             MIT(Market If Touch)委託單
            </summary>
            <param name="code"></param>
            <param name="bs"></param>
            <param name="triggerPrice"></param>
            <param name="qty"></param>
            <param name="priUsing"></param>
            <param name="tickOffset"></param>
            <param name="pref"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="acc"></param>
            <param name="orderSource"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderPreferenceType">
            <summary>
            OrderPreference的編輯方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderPreferenceType.Normal">
            <summary>
            一般編輯模式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderPreferenceType.LimitOrderOnly">
            <summary>
            僅限價單的編輯模式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderPreferenceType.MarketOrderOnly">
            <summary>
            僅市價單的編輯模式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderPreferenceType.StopOrderOnly">
            <summary>
            僅停損單的編輯模式
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.DoEditOrderPreferenceDelegate">
            <summary>
            編輯委託條件的delegate
            </summary>
            <param name="cmdInfo"></param>
            <param name="ordType"></param>
            <param name="pref"></param>
            <param name="paremeter"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.EditOrderPreferenceDelegate">
            <summary>
            編輯委託條件的delegate
            </summary>
            <param name="cmdInfo"></param>
            <param name="ordType"></param>
            <param name="pref"></param>
            <param name="paremeter"></param>
            <param name="accInfo"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.DoEditOrderManagerSettingDelegate">
            <summary>
            編輯委託管理員的Delegate
            </summary>
            <param name="orderManager"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderPreferenceFormatter">
            <summary>
            Format委託條件的Delegate
            </summary>
            <param name="pref"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderPreferenceFormatterDelegate">
            <summary>
            Format委託條件的Delegate
            </summary>
            <param name="pref"></param>
            <param name="accInfo"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher">
            <summary>
            監控委託單是否成交
            -------------------------------------------
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher.WatcherState">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher._sourceOrderBS">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher._commodityInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher._watcherState">
            <summary>
            WATCH的狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher._bActive">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher._quote">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher._soruceOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher._transactions">
            <summary>
            
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher.OnOrderWatcherChanged">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher._allWatchers">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher.SourceOrder">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher.Commodity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher.OrderID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher.WathcerDecription">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher.WatcherType">
            <summary>
            成交追蹤的處理方式
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher.State">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher.Active">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher.Watchers">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher.AddOrderMatchWatcher(CapitalPipe.LiteTrading.Orders.OrderMatchWatcher)">
            <summary>
            
            </summary>
            <param name="watcher"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher.Order_OnOrderChange(System.Object,CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher.FireWatcherEvent(System.Object,CapitalPipe.LiteTrading.Orders.OrderMatchWatcherEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderMatchWatcher.HandleOrderMatched(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            
            </summary>
            <param name="tr"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.BracketExitWatcher">
            <summary>
            停利停損出場策略
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketExitWatcher.WathcerDecription">
            <summary>
            停利停損策略的說明
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BracketExitWatcher.WatcherType">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BracketExitWatcher.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.Order,CapitalPipe.LiteTrading.OrderTemplates.BracketExitStrategyTempalte)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="order"></param>
            <param name="template"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BracketExitWatcher.CreateWatcher(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.Order,CapitalPipe.LiteTrading.OrderTemplates.BracketExitStrategyTempalte)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="order"></param>
            <param name="template"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BracketExitWatcher.HandleOrderMatched(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            
            </summary>
            <param name="tr"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.StopLossExitWatcher">
            <summary>
            停損出場策略
            參數：
              (1)委託類型
              (2)價格基準
              (3)Tick調整
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.StopLossExitWatcher.WathcerDecription">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.StopLossExitWatcher.WatcherType">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.StopLossExitWatcher.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.Order,CapitalPipe.LiteTrading.OrderTemplates.StopLossExitStrategyTemplate)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="order"></param>
            <param name="template"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.StopLossExitWatcher.CreateWatcher(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.Order,CapitalPipe.LiteTrading.OrderTemplates.StopLossExitStrategyTemplate)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="order"></param>
            <param name="template"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.StopLossExitWatcher.HandleOrderMatched(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            
            </summary>
            <param name="tr"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.ProfitTakingExitWatcher">
            <summary>
            停利出場策略
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.ProfitTakingExitWatcher.WathcerDecription">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.ProfitTakingExitWatcher.WatcherType">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.ProfitTakingExitWatcher.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.Order,CapitalPipe.LiteTrading.OrderTemplates.ProfitTakeExitStratetgyTemplate)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="order"></param>
            <param name="template"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.ProfitTakingExitWatcher.CreateWatcher(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.Order,CapitalPipe.LiteTrading.OrderTemplates.ProfitTakeExitStratetgyTemplate)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="order"></param>
            <param name="template"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.ProfitTakingExitWatcher.HandleOrderMatched(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            
            </summary>
            <param name="tr"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.BreakevenExitWatcher">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BreakevenExitWatcher.Active">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BreakevenExitWatcher.WathcerDecription">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.BreakevenExitWatcher.WatcherType">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BreakevenExitWatcher.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.Order,CapitalPipe.LiteTrading.OrderTemplates.BreakevenExitStrategyTemplate)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="order"></param>
            <param name="template"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BreakevenExitWatcher.Quote_OnQuoteEvent(System.Object,CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BreakevenExitWatcher.CreateWatcher(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.Order,CapitalPipe.LiteTrading.OrderTemplates.BreakevenExitStrategyTemplate)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="order"></param>
            <param name="template"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.BreakevenExitWatcher.HandleOrderMatched(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            
            </summary>
            <param name="tr"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderMatchWatcherEventType">
            <summary>
            Ｗatcher的行為
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderMatchWatcherEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderMatchWatcherEventArgs._eventType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderMatchWatcherEventArgs._eventWatcher">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderMatchWatcherEventArgs.EventType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderMatchWatcherEventArgs.EventWatcher">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderMatchWatcherEventArgs.#ctor(CapitalPipe.LiteTrading.Orders.OrderMatchWatcherEventType,CapitalPipe.LiteTrading.Orders.OrderMatchWatcher)">
            <summary>
            
            </summary>
            <param name="evType"></param>
            <param name="evWatcher"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.ChainOrderWatcher">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ChainOrderWatcher.SendChildOrderType.SendOnMatch">
            <summary>
            一成交就送子單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ChainOrderWatcher.SendChildOrderType.SendOnFilled">
            <summary>
            完全成交才送子單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ChainOrderWatcher._childOrdType">
            <summary>
            預設：完全成交才送單!!
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ChainOrderWatcher._parentOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ChainOrderWatcher._childOrders">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.ChainOrderWatcher._matches">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.ChainOrderWatcher.WathcerDecription">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.ChainOrderWatcher.WatcherType">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.ChainOrderWatcher.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.GenericOrder)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="order"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.ChainOrderWatcher.SendChildOrder(System.Int32)">
            <summary>
            
            </summary>
            <param name="iLog"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.ChainOrderWatcher.HandleOrderMatched(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            
            </summary>
            <param name="tr"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.ChainOrderWatcher.CreateWatcher(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.GenericOrder)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="order"></param>
            <param name="template"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderMatchWatcherHandler">
            <summary>
            監控的委託單成交後所發出的通知事件
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderPreference">
            <summary>
            委託偏好設定
            一個Key-Value的map
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderPreference._preferenceValues">
            <summary>
            儲存下單設定的Dictionary
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderPreference.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderPreference.GetField(System.String)">
            <summary>
            取出某個欄位的值，若該欄位不存在，會回傳空字串
            </summary>
            <param name="key">欄位的Key值</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderPreference.GetField(System.String,System.String)">
            <summary>
            取出某個欄位的值，若該欄位不存在，會回傳預設值
            </summary>
            <param name="key">欄位的Key值</param>
            <param name="defaultValue">預設值</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderPreference.SetField(System.String,System.String)">
            <summary>
            設定某個欄位的值
            </summary>
            <param name="key">欄位的Key值</param>
            <param name="value">欄位的資料</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderPreference.ClonePreference">
            <summary>
            複製下單條件物件
            </summary>
            <returns>新產生的下單條件物件，內容與原物件一樣</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderPreference.GetString">
            <summary>
            取得可讀的字串表示方式
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderPreference.ToPacketString">
            <summary>
            傳送到gateway的字串格式
            </summary>
            <returns>轉換後的字串</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderPreference.ToXMLNode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderPreference.SaveToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderPreference.ParseXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderPreference.ParseFromPacketString(System.String)">
            <summary>
            從gateway字串格式拆解回OrderPreference物件
            </summary>
            <param name="strPacket">packet字串</param>
            <returns>委託條件的物件</returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderSource">
            <summary>
            委託來源資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderSource.SourceKey">
            <summary>
            key值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderSource.Description">
            <summary>
            說明
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderSource.AllSources">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderSource.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="description"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderSource.GetRegisteredOrderSource(System.String)">
            <summary>
            找到已註冊的OrderSource
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderSource.RegisterOrderSource(CapitalPipe.LiteTrading.Orders.OrderSource)">
            <summary>
            註冊
            </summary>
            <param name="key"></param>
            <param name="src"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderState">
            <summary>
            Enumeration : ConceptOrder的狀態
            以下狀態表示該筆委託不再會發生變化(同時任何操作都不被允許)
                Filled
                Canceled
                Fail
                Error
            -----------------------------------------------------------
            2016
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.Undefined">
            <summary>
            不應該有任何委託的狀態是這個值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.Pending">
            <summary>
            Inactive狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.NotReply">
            <summary>
            委託已送出，尚待回報
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.PartialReplied">
            <summary>
            部份委託已回報，委託全部送出後已收到部份回應時使用 
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.NotSend">
            <summary>
            委託尚未送出，Que(觸價、OCO、虛擬停損)單時使用 
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.Ready">
            <summary>
            委託ok
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.PartialFilled">
            <summary>
            部份成交(取消量=0，且尚未完全成交)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.Filled">
            <summary>
            完全成交(剩量==0，且取消量==0)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.Canceled">
            <summary>
            委託已取消(剩量==0，且取消量!=0)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.Canceling">
            <summary>
            刪單中
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.Amending">
            <summary>
            改單中
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.Fail">
            <summary>
            委託失敗(被後檯或交易所踢回來的委託)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.Error">
            <summary>
            委託錯誤(還沒送單過程就發生錯誤的委託)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.NewOrderAcked">
            <summary>
            委託Gateway確認收到新單請求
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.ReplacingAcked">
            <summary>
            委託Gateway確認收到改單請求
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderState.CancelAcked">
            <summary>
            委託Gateway確認收到刪單請求
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderTerm">
            <summary>
            用來儲存下單相關參數的物件
            -----------------------------------------------
            ※ 跟OrderPreference是兩個不同的物件
            ※ OrderTerm是儲存下單的商品、價格(含成交/bid/ask價加減碼)、帳號及OrderPreference…等等
            ※ OrderPreference是PhysicalOrderCenter-Dependent，用來儲存特定下單API相關的參數
            ※ 這個物件可以用來儲存Pending Order的下單相關參數
               ==> Generic Order在Pending Order狀態時，下單相關參數是儲存在這個物件之中
            ※ 這個物件有幾個static functions可以用來方便取得下單價格
              (1)
              
            ----------------------------------------------
            20151107
            ※ 新增Time in force欄位(FillType)
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing">
            <summary>
            委託價格類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing.Fixed">
            <summary>
            使用固定價格(指定價格)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing.Market">
            <summary>
            使用市價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing.Last">
            <summary>
            使用最後成交價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing.BidOffset">
            <summary>
            使用Bid第一檔價格加以調整
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing.AskOffset">
            <summary>
            使用Ask第一檔價格加以調整
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing.BidAtSeq">
            <summary>
            使用第xx個Bid價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing.AskAtSeq">
            <summary>
            使用第xx個Ask價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing.Better">
            <summary>
            由買賣別來決定是bid/ask
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing.MiddleOrFavor">
            <summary>
            使用Middle價，如果Middle價不是有效tick時，買進要TickDown，賣出要TickUp
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing.Middle">
            <summary>
            使用Middle價，如果Middle價不是有效tick時，取最接近值 
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing.Open">
            <summary>
            使用開盤價，如果開盤價不存在時，傳回 Decimal.MinValue 
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing.High">
            <summary>
            使最高價，如果最高價不存在時，傳回 Decimal.MinValue 
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing.Low">
            <summary>
            使最低價，如果最低價不存在時，傳回 Decimal.MinValue 
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderTerm.PriceSide">
            <summary>
            使用價格的方向
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.PriceSide.BidSide">
            <summary>
            買進價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.PriceSide.AskSide">
            <summary>
            賣出價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm.PriceSide.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._strategyID">
            <summary>
            策略ID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._strategyType">
            <summary>
            策略類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._orderSource">
            <summary>
            委託來源
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._buySell">
            <summary>
            買賣別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._ordPrice">
            <summary>
            委託價格
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._ordQty">
            <summary>
            委託數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._tickOffset">
            <summary>
            Tick調整數(注意：在BidAtSeq/AskAtSeq模式下指的是第xx個價格)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._sent">
            <summary>
            是否已傳送
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._cancel">
            <summary>
            是否已取消
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._ordType">
            <summary>
            委託類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._fillType">
            <summary>
            Time in force資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._ordPriUsing">
            <summary>
            委託價格類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._accountInfo">
            <summary>
            下單使用的帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._preference">
            <summary>
            委託條件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._stopPrice">
            <summary>
            Stop觸發價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._bidOrderQuantity">
            <summary>
            買進委託量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._askOrderQuantity">
            <summary>
            賣出委託量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._bidOrderPrice">
            <summary>
            買進委託價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderTerm._askOrderPrice">
            <summary>
            賣出委託價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.Code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.StrategyID">
            <summary>
            策略ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.StrategyType">
            <summary>
            策略類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.OrderSource">
            <summary>
            委託來源
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.BuySell">
            <summary>
            買賣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.OrdPrice">
            <summary>
            委託價格
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.OrdQty">
            <summary>
            委託數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.TickOffset">
            <summary>
            Tick調整數(注意：在BidAtSeq/AskAtSeq模式下指的是第xx個價格)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.Sent">
            <summary>
            是否已傳送
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.Cancel">
            <summary>
            是否已取消
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.OrdType">
            <summary>
            委託類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.FillType">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.OrdPriUsing">
            <summary>
            委託價格類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.AccountInfo">
            <summary>
            下單使用的帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.Preference">
            <summary>
            委託條件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.FormattedPreference">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.StopPrice">
            <summary>
            Stop觸發價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.BidOrderQuantity">
            <summary>
            買進委託量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.AskOrderQuantity">
            <summary>
            賣出委託量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.BidOrderPrice">
            <summary>
            買進委託價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.AskOrderPrice">
            <summary>
            賣出委託價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.OrderTerm.Self">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderTerm.CloneOrderTerm">
            <summary>
            複製一個OrderTerm
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderTerm.GetPriceInformation(CapitalPipe.LiteTrading.Orders.OrderTerm)">
            <summary>
            取得OrderTerm設定的價格參數說明
            </summary>
            <param name="ordTerm">傳入的OrderTerm物件</param>
            <returns>說明OrderTerm物件內容的字串</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderTerm.GetOrderPrice(CapitalPipe.LiteTrading.Orders.OrderTerm)">
            <summary>
            取得OrderTerm物件表示的委託價
            ※ 會依當時的市場價格決定
            </summary>
            <param name="ordTerm">OrderTerm物件</param>
            <returns>依OrderTerm計算出的價格</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderTerm.GetOrderPrice(CapitalPipe.LiteTrading.Orders.OrderTerm,CapitalPipe.LiteTrading.Quotes.Quote)">
            <summary>
            取得OrderTerm物件表示的委託價
            ※ 會依當時的市場價格決定
            </summary>
            <param name="ordTerm">傳入的OrderTerm物件</param>
            <param name="quote">該OrderTerm下單商品的行情物件</param>
            <returns>依OrderTerm計算出的價格</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderTerm.GetQuoteAtSeq(CapitalPipe.LiteTrading.Quotes.Quote,CapitalPipe.LiteTrading.Orders.OrderTerm.PriceSide,System.Int32)">
            <summary>
            自quote的bid/ask取第幾檔
            價格方向：BidSide==>取買價，AskSide==>取賣價
            </summary>
            <param name="priceSide">價格方向：BidSide==>取買價，AskSide==>取賣價</param>
            <param name="iTick"></param>
            <returns>
            如果第xx檔沒有資料時，會使用最接近有資料的那一檔值
            NullDecimalValue:無法計算出回傳值時
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderTerm.GetQuotePriceOffset(CapitalPipe.LiteTrading.Quotes.Quote,CapitalPipe.LiteTrading.Orders.OrderTerm.PriceSide,System.Int32)">
            <summary>
            取bid/ask價+/- xx個ticks
            注意：nTicks > 0表示向上調整， 反之表示向下調整。在讓價時==>
            </summary>
            <param name="quote">行情物件</param>
            <param name="bBuySell">true:bid價 false:ask價</param>
            <param name="iTicks"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderTerm.GetOrderPrice(System.String,System.Decimal,CapitalPipe.LiteTrading.Orders.OrderTerm.OrderPriceUsing,CapitalPipe.LiteTrading.Orders.BSType,System.Int32,CapitalPipe.LiteTrading.Quotes.Quote)">
            <summary>
            取得委託價
            </summary>
            <param name="priUsing"></param>
            <param name="bsSide">買賣價的方向</param>
            <param name="tickOffset"></param>
            <param name="quote"></param>
            <returns>
            當無法計算時，會回傳decimal.MinValue
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderTerm.GetComboCommodityBS(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.Orders.BSType)">
            <summary>
            取得複式商品的買賣別
            </summary>
            <param name="cmd"></param>
            <param name="bs1"></param>
            <param name="bs2"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderTerm.ToXMLNode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.OrderTerm.ParseFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.BidAskSide">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.OrderType">
            <summary>
            常用的委託類型
            -----------------------------------------
            20160423
            ※ 新增Custom類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderType.Undefined">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderType.Limit">
            <summary>
            限價單(Limit)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderType.RangeMarket">
            <summary>
            一定範圍市價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderType.Market">
            <summary>
            市價單(Market)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderType.StopLoss">
            <summary>
            停損單(停損市價，Stop Market)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderType.StopLimit">
            <summary>
            停損單(停損限價，Stop Limit)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderType.OCO">
            <summary>
            OCO委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderType.OSO">
            <summary>
            OSO委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderType.Quote">
            <summary>
            雙邊報價委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.OrderType.Custom">
            <summary>
            後檯系統支援的特定委託類型
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.QuoteOrder">
            <summary>
            類別：報價單</summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.QuoteOrder.Type">
            <summary>OrderType property : Read Only</summary>
            <value>QuoteOrder</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.QuoteOrder.OrderNo">
            <summary>
            委託書號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.QuoteOrder.BidPrice">
            <summary>
            買進委託價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.QuoteOrder.AskPrice">
            <summary>
            賣出委託價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.QuoteOrder.RemainBidQty">
            <summary>
            剩餘買量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.QuoteOrder.RemainAskQty">
            <summary>
            剩餘賣量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.QuoteOrder.BidQty">
            <summary>
            買進委託量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.QuoteOrder.AskQty">
            <summary>
            賣出委託量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.QuoteOrder.CancelBidQty">
            <summary>
            買進取消量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.QuoteOrder.CancelAskQty">
            <summary>
            賣出取消量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.QuoteOrder.DealBidQty">
            <summary>
            買進成交量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.QuoteOrder.DealAskQty">
            <summary>
            賣出成交量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.QuoteOrder.Account">
            <summary>
            下單帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.QuoteOrder.Codes">
            <summary>Codes property : Read Only</summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.QuoteOrder.BS">
            <summary>
            買賣別，報價單沒有買賣別
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.QuoteOrder.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="orderID"></param>
            <param name="thisorder"></param>
            <param name="pOrder"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.SpeedControlItemData">
            <summary>
            用來控制交易速度的物件
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.StopOrderType">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.StopExecuteStatus">
            <summary>
            停損單執行狀態
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.StopOrder">
            <summary>
            StopOrder分為兩種：
            (1) MirroredStop
                實體委託管理員支援Stop單時，僅做單純的對照
            (2) SyntheicStop
                實體委譯管理員不支援Stop單時，做合成的StopOrder
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.StopOrder._stopType">
            <summary>
            停損單類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.StopOrder._stopExecuteStatus">
            <summary>
            停損執行狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.StopOrder.SyntheticStopOrderType">
            <summary>
            合成停損單委託類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.StopOrder.NativeStopOrderType">
            <summary>
            原生停損委託類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.StopOrder.OrderNo">
            <summary>
            委託書號
            ==> 合成停損單未觸發前是"--"，觸發後是委託書號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.StopOrder.StopType">
            <summary>
            停損單類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.StopOrder.OrderPrice">
            <summary>
            委託價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.StopOrder.StopPrice">
            <summary>
            停損價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.StopOrder.Quantity">
            <summary>
            委託量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.StopOrder.DealQuantity">
            <summary>
            成交量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.StopOrder.RemainQuantity">
            <summary>
            剩餘量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.StopOrder.Account">
            <summary>
            帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.StopOrder.ExecuteStatus">
            <summary>
            停損單執行狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.StopOrder.ServerOrderID">
            <summary>
            Server的OrderID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.StopOrder.OpenClose">
            <summary>
            開平倉
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.StopOrder.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ordID"></param>
            <param name="ordSource"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.TradeTags">
            <summary>
            交易旗標
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TradeTags.TradeTag_General">
            <summary>
            一般交易
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TradeTags.TradeTag_MarginBuy">
            <summary>
            融資交易
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TradeTags.TradeTag_ShortSell">
            <summary>
            融券交易
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TradeTags.TradeTag_Borrow">
            <summary>
            借券交易
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.TradeThroughWatcher">
            <summary>
            穿價警示器 ==>
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.TradingCostResult">
            <summary>
            交易成本的計算結果
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TradingCostResult.CommissionCost">
            <summary>
            手續費
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TradingCostResult.HandleCost">
            <summary>
            經手費
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TradingCostResult.TaxCost">
            <summary>
            交易稅
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.AbstractTradingCostCalculator">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.AbstractTradingCostCalculator.CostType">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.AbstractTradingCostCalculator.TradingCostEntry">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AbstractTradingCostCalculator.GetTradingCost(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            
            </summary>
            <param name="tr"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AbstractTradingCostCalculator.GetTradingCost(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Decimal,System.Int32)">
            <summary>
            
            </summary>
            <param name="cType"></param>
            <param name="costParamenter"></param>
            <param name="cmdInfo"></param>
            <param name="matchPrice"></param>
            <param name="lots"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AbstractTradingCostCalculator.GetTradingCost(CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Decimal,System.Int32)">
            <summary>
            
            </summary>
            <param name="bsType"></param>
            <param name="cmdInfo"></param>
            <param name="matchPrice"></param>
            <param name="lots"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.AbstractTradingCostCalculator.GetTransactionCost(CapitalPipe.LiteTrading.Orders.AbstractTradingCostCalculator.CostType,System.Decimal,CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Decimal,System.Int32)">
            <summary>
            
            </summary>
            <param name="cType"></param>
            <param name="costParamenter"></param>
            <param name="tr"></param>
            <returns></returns>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TrivialTradingCostCalculator._costByCmdType">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TrivialTradingCostCalculator.GetTradingCost(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Decimal,System.Int32)">
            <summary>
            
            </summary>
            <param name="tr"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TrivialTradingCostCalculator.LoadFromCSVFile(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TaiwanTradingCostCalculator._costByCmdType">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TaiwanTradingCostCalculator.GetTradingCost(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Decimal,System.Int32)">
            <summary>
            
            </summary>
            <param name="tr"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TaiwanTradingCostCalculator.LoadFromCSVFile(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.TrailingStopOrder">
            <summary>
            TrailingStop委託
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.TrailingType">
            <summary>
            計算Trailing的方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.TrailingType.Ticks">
            <summary>
            用Tick檔數計算
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.TrailingType.Points">
            <summary>
            用點差計算
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.TrailingType.Dollar">
            <summary>
            用金額計算
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TrailingStopOrder._cmd">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TrailingStopOrder._bsType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TrailingStopOrder._accInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TrailingStopOrder._trailingType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TrailingStopOrder._beginTrailingPrice">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TrailingStopOrder._currTrailingPrice">
            <summary>
            這個價格會依行情調整
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TrailingStopOrder._trailingTicks">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TrailingStopOrder._trailingParameter">
            <summary>
            在TrailingDollar及TrailingPoints時使用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TrailingStopOrder._quantity">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TrailingStopOrder._isMarket">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TrailingStopOrder._chgTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.Type">
            <summary>
            委託單類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.BS">
            <summary>
            買賣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.Code">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.Codes">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.ChangeTime">
            <summary>
            更新時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.Account">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.BeginTrailingPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.CurrentTrailingPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.TrailingParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.TrailingTicks">
            <summary>
            /
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.OrderQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.MatchQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.RemainQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.#ctor(System.String,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Int32,System.Int32,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="beginTrailingPrice"></param>
            <param name="quantity"></param>
            <param name="ordID"></param>
            <param name="ordSource"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TrailingStopOrder.HasCommodity(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.Transaction">
            <summary>
            成交資訊<para/>
            代表一筆來自各委託管理員的成交資料，成交資料只會有一份，會被Cache在記憶體中。<para/>
            這個物件的用途如下：<para/>
            <list type="bullet">
            <item>
            <description>有需要處理委託之後的追蹤(例如：成交後要掛反向單)，可以透過委託事件回傳的Transaction物件取得成交的詳細資料</description>
            </item>
            <item>
            <description>RTS系統計算即時庫存時是以前日庫存+當日所有的成交物件來計算</description>
            </item>
            <item>
            <description>在畫面上揩示，讓使用者知道成交的概況</description>
            </item>
            </list>
            成交資料在產生後，一般來說不會修改。但是考慮到某些系統可能發生委託回報會比成交回報早回來的情況，此時可能會無法辨識出這筆成交是由哪一筆委託引發產生的。目前RTS系統的處理原則是：
            <list type="number">
            <item>
            <description>收到成交時，無論是否已接收到委託資料都會立即處理並發佈成交事件。此時因為還不知道原始的委託是哪一筆，StrategyType,StrategyID,OrderSource,Order等欄位是無效的。</description>
            </item>
            <item>
            <description>收到委託後，會更新StrategyType,StrategyID,OrderSource,Order等欄位，並在更新後發佈成交更新的事件</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._accInfo">
            <summary>
            此筆成交的帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._orderID">
            <summary>
            委託的ID(虛擬委託/智慧單)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._physicalOrderID">
            <summary>
            實體委託單的OrderID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._session">
            <summary>
            委託的Session
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._transNo">
            <summary>
            成交單號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._orderNo">
            <summary>
            委託書號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._saleNo">
            <summary>
            營業員代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._tradeTag">
            <summary>
            交易旗標
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._strategyType">
            <summary>
            策略類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._strategyID">
            <summary>
            策略代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._openClose">
            <summary>
            開平倉碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._bs">
            <summary>
            買賣別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._price">
            <summary>
            成交價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._comm">
            <summary>
            手續費
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._handle">
            <summary>
            經手費
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._tax">
            <summary>
            交易稅
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._lots">
            <summary>
            成交量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._orderSource">
            <summary>
            委託來源
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._order">
            <summary>
            委託單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._transTime">
            <summary>
            成交時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._message">
            <summary>
            成交訊息
            </summary>
            <remarks>
            這個欄位的有效性待討論，未來可能需要取消。
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._isDetermined">
            <summary>
            是否已經確定？(是否已經有找到委託了？若成交比委託早回來，這個變數會是false!!)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._isIncludedInCalPos">
            <summary>
            是否要列入部位計算？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._cmdInfo">
            <summary>
            商品資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._transactions">
            <summary>
            Key==>Exchange#OrderManagerID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.Transaction._allTrans">
            <summary>
            目前系統的所有成交資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.OrderID">
            <summary>
            委託代碼
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.OrderNo">
            <summary>
            委託書號
            </summary>
            <remarks>
            這筆成交單對應到的實體單的委託書號
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.Order">
            <summary>
            對應到的委託物件
            </summary>
            <remarks>
            (這筆成交是因執行這個委託物件產生的)
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.TransNo">
            <summary>
            成交單號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.Session">
            <summary>
            交易時段，實際資料視各OrderModule定義
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.Price">
            <summary>
            成交價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.Commission">
            <summary>
            手續費
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.Handle">
            <summary>
            經手費
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.Tax">
            <summary>
            交易稅
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.Lots">
            <summary>
            成交量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.Code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.ExchangeCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.BS">
            <summary>
            買賣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.OpenClose">
            <summary>
            開平倉碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.Exchange">
            <summary>
            交易所代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.SubAccount">
            <summary>
            子帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.SaleNo">
            <summary>
            業業員代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.Account">
            <summary>
            外帳
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.TradeTag">
            <summary>
            交易旗標
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.TransTime">
            <summary>
            成交時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.Alias">
            <summary>
            帳號別名
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.AccountInfo">
            <summary>
            帳號物件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.CommodityInfo">
            <summary>
            商品資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.CommodityName">
            <summary>
            商品名稱：20140205 為了wpf而增加
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.OrderSource">
            <summary>
            委託來源
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.StrategyType">
            <summary>
            策略類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.StrategyID">
            <summary>
            策略代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.IsDetermined">
            <summary>
            是否已經找到對應的委託單了？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.IsUsedInPosCalculation">
            <summary>
            是否列入部位計算？
            </summary>
            <remarks>
            true:是<para/>
            false:不是
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.PhysicalOrderID">
            <summary>
            實體委託單的ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.AllTransactioons">
            <summary>
            RTS系統的所有的成交資料(Obsolete)
            </summary>
            <remarks>
            先前打錯字，即將取消，請改用AllTransactions，造成不便敬請見諒!!
            </remarks>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.AllTransactions">
            <summary>
            RTS系統的所有的成交資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.Transaction.InternalTransactions">
            <summary>
            所有的成交
            </summary>
            <remarks>
            這個物件是為了避免在產生Position時，同時有新成交，造成計算會有漏，用來做Lock使用。
            僅供RTS系統內部使用，請勿使用這個屬性，這個做法不好應該要儘快取消。
            </remarks>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Transaction.#ctor(CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,System.String,System.String,System.String,System.String,System.String,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int32,System.DateTime,System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.String)">
            <summary>
            Constructor of Transaction : 許多唯讀欄位僅在Constructor傳入
            實做的PhysicalOrderManager必須負責正確填入所需資料</summary>
            <param name="accInfo">帳號</param>
            <param name="strategyType">策略類型</param>
            <param name="strategyID">策略代碼</param>
            <param name="oid">委託ID</param>
            <param name="session">盤別ID</param>
            <param name="tno">成交單號</param>
            <param name="ono">委託書號</param>
            <param name="bs">買賣別</param>
            <param name="pri">成交價</param>
            <param name="comm">手續費</param>
            <param name="handle">經手費</param>
            <param name="tax">交易稅</param>
            <param name="lots">成交量</param>
            <param name="ttime">成交時間</param>
            <param name="msg">訊息</param>
            <param name="cmdInfo">商品資訊</param>
            <param name="orderSource">委託來源</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Transaction.SetOrderID(System.String)">
            <summary>
            設定委託ID，注意：這個方法應該只能被PhysicalOrderManager及其衍生類別呼叫</summary>
            <param name="oID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Transaction.SetPhysicalOrderID(System.String)">
            <summary>
            設定實體委託單的OrderID
            </summary>
            <param name="pOID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Transaction.SetOrderSource(System.String)">
            <summary>
            設定OrderSource
            </summary>
            <param name="orderSource"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Transaction.SetOrder(CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            設定對應到的委託，注意：這個方法應該只能被PhysicalOrderManager及其衍生類別呼叫</summary>
            <param name="ord"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Transaction.SetStrategyInfo(System.String,System.String)">
            <summary>
            設定策略相關欄位資訊
            </summary>
            <param name="strategyType">策略類型</param>
            <param name="strategyID">策略代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Transaction.SetTradeTag(System.String)">
            <summary>
            設定交易旗標
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Transaction.SetIsDetermined(System.Boolean)">
            <summary>
            設定是否已找到委託的旗標
            </summary>
            <param name="bVal"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Transaction.SetOpenClose(System.String)">
            <summary>
            設定開平倉
            </summary>
            <param name="openClose"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Transaction.SetIsUsedInPosCalculation(System.Boolean)">
            <summary>
            設定是否列入部位計算旗標
            </summary>
            <param name="bVal"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Transaction.AddTransaction(System.String,CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            加入一筆成交，若該筆成交已存在，不會做任何處理。若是新成交，在將成交加到Cache成交資料的Collection後，會立該發佈成交廣播事件
            </summary>
            <param name="orderManagerID">產生該筆成交物件的委託管理員代碼</param>
            <param name="tr">成交物件</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Transaction.HasThisTransaction(System.String,CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            檢查此筆成交是否在PhysicalOrderManager中
            </summary>
            <param name="tr">成交資訊</param>
            <returns>
            true:如果成交已在OrderManager中，false:若委託不在OrderManager中
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.Transaction.HasThisTransaction(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            檢查此筆成交是否已存在？這個方法通常是給實做PhysicalOrderMoudle時，判斷收到的成交回報是否已處理過時使用 
            </summary>
            <param name="orderManagerID">產生該筆成交物件的委託管理員代碼</param>
            <param name="exchange">交易所代碼</param>
            <param name="orderNo">委託書號</param>
            <param name="transno">成交單號</param>
            <param name="session">交易盤別</param>
            <returns>
            true:該筆成交資料已存在<para/>
            false:該筆成交資料不存在
            </returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.TransactionLogFile">
            <summary>
            成交資料的Cache值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFile._fileStream">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFile._baseFile">
            <summary>
            基準檔案
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFile._dataSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TransactionLogFile.DataSize">
            <summary>
            每筆資料長度
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TransactionLogFile.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TransactionLogFile.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TransactionLogFile.FinalClear">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TransactionLogFile.WriteTransaction(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            
            </summary>
            <param name="tr"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TransactionLogFile.GetRecordsEnumerator(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.Code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.OrderNo">
            <summary>
            委託書號，每筆委託的Key = 書號+盤別+交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.OrderID">
            <summary>
            委託ID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.PhysicalOrderID">
            <summary>
            實體委託單ID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.TransNo">
            <summary>
            成交單號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.Session">
            <summary>
            盤別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.Alias">
            <summary>
            帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.OpenClose">
            <summary>
            開平倉
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.Price">
            <summary>
            成交價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.Commission">
            <summary>
            手續費
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.Handle">
            <summary>
            經手費
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.Tax">
            <summary>
            交易稅
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.Lots">
            <summary>
            成交量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.BuySellType">
            <summary>
            買賣別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.SaleNo">
            <summary>
            營業員
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.TradeTag">
            <summary>
            交易旗標
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.TransTimeTicks">
            <summary>
            成交時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.StrategyType">
            <summary>
            策略類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.StrategyID">
            <summary>
            策略代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.OrderSource">
            <summary>
            委託來源註記
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.ToBytes">
            <summary>
            轉成byte[]
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TransactionLogFileRecord.FromBytes(System.Byte[],System.Int32)">
            <summary>
            從byte[]轉成GenericOrderStruct封包
            </summary>
            <param name="bytesArr"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.TransactionEventyType">
            <summary>
            成交事件
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.TransactionEventArgs">
            <summary>
            成交事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TransactionEventArgs.EventType">
            <summary>
            成交事件類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TransactionEventArgs.Transaction">
            <summary>
            成交
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TransactionEventArgs.#ctor(CapitalPipe.LiteTrading.Orders.TransactionEventyType,CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            Constructor
            </summary>
            <param name="tr"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.TransactionEventHandler">
            <summary>
            成交事件
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.SimpleTranactionEventHandler">
            <summary>
            簡單的成交事件
            </summary>
            <param name="sender"></param>
            <param name="tr"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Orders.TransSummary">
            <summary>
            交易彙整資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TransSummary.AveragePrice">
            <summary>
            (Read)：平均成交價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TransSummary.TransVolume">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Orders.TransSummary.TransAmount">
            <summary>
            (Read)：成交金額
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TransSummary.SetAveragePrice(System.Decimal)">
            <summary>
            
            </summary>
            <param name="avgPri"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Orders.TransSummary.SetTransVolume(System.Decimal)">
            <summary>
            /
            </summary>
            <param name="vol"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Constants">
            <summary>
            常數定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.SessionID_TAIFEX1">
            <summary>
            台灣期交所正常盤使用的session id
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.XMLTag_StreamLog">
            <summary>
            給是否write stream log(ordermanager的)使用的tag
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.String_Name">
            <summary>
            名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.String_Currency">
            <summary>
            計價幣別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.String_TickType">
            <summary>
            升降單位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.String_HasQuote">
            <summary>
            有報價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.String_Tradable">
            <summary>
            可交易
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.String_Factor">
            <summary>
            契約乘數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.String_VolumeMultiplier">
            <summary>
            委託量倍數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.String_OrderType">
            <summary>
            委託類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.OrderSource_Quoter">
            <summary>
            來自Quoter下的單，在order source填入的值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.OrderSource_RelativeTrade">
            <summary>
            來自相對交易的委託來源
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.OrdeSource_SandBox">
            <summary>
            來自SandBoxOrderManager的委託單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.OrderSource_ProgramTrade">
            <summary>
            來自程式交易的委託單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.PrefTag_QuoteID">
            <summary>
            詢價ID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.OpenCloseFlag_Open">
            <summary>
            開平倉碼 ==> 開倉
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.OpenCloseFlag_Close">
            <summary>
            開平倉碼 ==> 平倉
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.OpenCloseFlag_Auto">
            <summary>
            開平倉碼 - 自動
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.OpenCloseFlag_DayTrade">
            <summary>
            開平倉碼 - 當沖
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.PrefTag_SessionType">
            <summary>
            盤別類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.SessionType_Auto">
            <summary>
            自動指定盤別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.SessionType_Normal">
            <summary>
            正常盤
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.SessionType_AfterHour">
            <summary>
            盤後交易
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.MachineError">
            <summary>
            機器誤差
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Constants.CFCCommodityChanged">
            <summary>
            連續月商品的基準商品改變
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.DataLoadingUtilities">
            <summary>
            載入資料的工具程式
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.DataLoadingUtilities.CheckDirectories(System.Boolean,System.String)">
            <summary>
            檢查所需要的各個子目錄是否存在？
            使用User+appName時，資料夾會建置在"C:\Users\[UserID]\AppData\Roaming\[appName]\"
            不使用時，資料夾會被建置在"[應用程式執行檔所在目錄]\" 
            建置的子目錄如下：
                ※ Configs ： 系統設定檔
                ※ Logs    ： 系統log訊息
                ※ Data    ： 商品資料檔
                ※ Plugins ： 擴充的plugin功能模組
            </summary>
            <param name="bUser">是否使用User的AppData目錄</param>
            <param name="appName">應用程式名稱，在AppData的目錄。在bUser == true時才有做用</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.DataLoadingUtilities.LoadTradingCalendars(CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate)">
            <summary>
            載入交易行事歷
            </summary>
            <param name="splashWindow"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.DataLoadingUtilities.LoadTradingSessions(CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate)">
            <summary>
            載入交易時段
            </summary>
            <param name="splashWindow"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.DataLoadingUtilities.LoadCommodityCalendar(CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate)">
            <summary>
            載入商品行事曆
            </summary>
            <param name="splashWindow"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.DataLoadingUtilities.LoadTickValues(CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate)">
            <summary>
            載入tick資料
            </summary>
            <param name="splashWindow"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.DataLoadingUtilities.LoadExchangeRates(CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate)">
            <summary>
            載入匯率資料
            </summary>
            <param name="updateLabselFunc"></param>
            <param name="updateProgressFunc"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.DataLoadingUtilities.LoadZippedCommodities(System.Boolean,System.String,CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate,System.Int32)">
            <summary>
            載入商品資料
            2016-01-12 修改
            加入Update Flag
             ==> 0 : Replace
             ==> 1 : Update If Exist
             ==> 2 : Ignore If Exist
            </summary>
            <param name="splashWindow"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.DataLoadingUtilities.LoadContracts(CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate)">
            <summary>
            載入契約資料
            </summary>
            <param name="splashWindow"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.DataLoadingUtilities.LoadQuoteSpreads(CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate)">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.DataLoadingUtilities.LoadCommodityGroups(CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate)">
            <summary>
            20150127修改，改從csv檔案載入
             欄位：GroupID,Group說明,修改人員
            </summary>
            <param name="splashWindow"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.DataLoadingUtilities.LoadIdentifiers(CapitalPipe.Utilities.SingleStringDelegate,CapitalPipe.Utilities.SingleDoubleDelegate)">
            <summary>
            20150127修改，改從csv檔案載入
            欄位：GroupID,商品類型,商品代碼,交易所,契約代碼,修改日期,修改人員
            </summary>
            <param name="splashWindow"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.DataLoadingUtilities.UpdateCommodities(System.Collections.Generic.List{CapitalPipe.LiteTrading.Commodities.CommodityInfo},System.Collections.Generic.List{CapitalPipe.LiteTrading.Commodities.CommodityInfo},System.Collections.Generic.List{CapitalPipe.LiteTrading.Commodities.CommodityInfo},System.Collections.Generic.List{System.String})">
            <summary>
            
            </summary>
            <param name="added"></param>
            <param name="updated"></param>
            <param name="removed"></param>
            <param name="recoveredNULLCmds"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Indices.EstimatedValueType">
            <summary>
            估算器估出的價格類型
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Indices.ValueEstimator">
            <summary>
            指數估算器
            -------------------------------------------------------
            ETF淨值-市值法：          sum(PCF的市值) / 單位數
            ETF淨值-權益變動：        (昨權益總值 + 今日變動) / 單位數
            指數-市值加權：           sum(市值) / divisor
            指數-市值加權用權重算：   (1 + sum(權重*變動率))*昨收(參考價)
            指數-價格平均：           sum(價格) / divisor
            指數-價格平均用變動率算： (1 + average(變動率))*昨收(參考價)           
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimator._estimatorID">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimator._baseBasket">
            <summary>
            這個淨值計算器的基準Basket
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimator._estimatedValue">
            <summary>
            估計的bid value
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimator._bidValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimator._askValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimator._listenQuotes">
            <summary>
            目前監聽的報價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimator._useQuoteRef">
            <summary>
            指數使用報價的參考價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimator._estimationMethod">
            <summary>
            
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Indices.ValueEstimator.OnValueEstimatorChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimator.EstimatorID">
            <summary>
            淨值計算器的ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimator.EstimatorCreaterGUID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimator.EstimatedValue">
            <summary>
            估算值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimator.EstimatedBidValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimator.EstimatedAskValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimator.UnderlyingBasket">
            <summary>
            基準Basket
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimator.EstimationMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimator.PrevSettleValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimator.UseQuoteReference">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimator.BasketDataTime">
            <summary>
            資料時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimator.BasketDataTimeString">
            <summary>
            資料時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimator.BasketDescription">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.#ctor(System.String,CapitalPipe.LiteTrading.Baskets.Basket,CapitalPipe.LiteTrading.Indices.ValueEstimationMethod)">
            <summary>
            
            </summary>
            <param name="basket"></param>
            <param name="method"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="estimatorID"></param>
            <param name="basket"></param>
            <param name="method"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.SetBasket(CapitalPipe.LiteTrading.Baskets.Basket)">
            <summary>
            
            </summary>
            <param name="basket"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.CalculateUnitPriceUseMarketValue(CapitalPipe.LiteTrading.Indices.QuotePriceTerm)">
            <summary>
            計算Basket的單位價格
            </summary>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.CalculateUnitPriceUseMarketValue(CapitalPipe.LiteTrading.Baskets.Basket,CapitalPipe.LiteTrading.Indices.QuotePriceTerm)">
            <summary>
            
            </summary>
            <param name="baseBasket"></param>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.CalculateUnitPriceUseMarketValueChange(CapitalPipe.LiteTrading.Indices.QuotePriceTerm)">
            <summary>
            利用市值權益變動法來計算ETF單位淨值
            </summary>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.CalculateUnitPriceUseMarketValueChange(CapitalPipe.LiteTrading.Baskets.Basket,CapitalPipe.LiteTrading.Indices.QuotePriceTerm)">
            <summary>
            
            </summary>
            <param name="baseBasket"></param>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.CalculateIndexUsePriceAverage(CapitalPipe.LiteTrading.Indices.QuotePriceTerm)">
            <summary>
            
            </summary>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.CalculateIndexUsePriceAverage(CapitalPipe.LiteTrading.Baskets.Basket,CapitalPipe.LiteTrading.Indices.QuotePriceTerm)">
            <summary>
            
            </summary>
            <param name="baseBasket"></param>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.CalculateIndexUsePriceAverageByPriceChanged(CapitalPipe.LiteTrading.Indices.QuotePriceTerm)">
            <summary>
            
            </summary>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.CalculateIndexUsePriceAverageByPriceChanged(System.Boolean,CapitalPipe.LiteTrading.Baskets.Basket,CapitalPipe.LiteTrading.Indices.QuotePriceTerm)">
            <summary>
            
            </summary>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.CalculateIndexUseWeightedAverageByPriceChanged(CapitalPipe.LiteTrading.Indices.QuotePriceTerm)">
            <summary>
            
            </summary>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.CalculateIndexUseWeightedAverageByPriceChanged(System.Boolean,CapitalPipe.LiteTrading.Baskets.Basket,CapitalPipe.LiteTrading.Indices.QuotePriceTerm)">
            <summary>
            計算淨值
            </summary>
            <param name="bUseQuoteRef"></param>
            <param name="baseBasket"></param>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.CalculateIndexUseWeightedAverageByMarketValue(CapitalPipe.LiteTrading.Indices.QuotePriceTerm)">
            <summary>
            計算指數值
            </summary>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.CalculateIndexUseWeightedAverageByMarketValue(CapitalPipe.LiteTrading.Baskets.Basket,CapitalPipe.LiteTrading.Indices.QuotePriceTerm)">
            <summary>
            
            </summary>
            <param name="baseBasket"></param>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.ListenBasket">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.UnlistenBasket">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.BaseQuote_OnQuoteEvent(System.Object,CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.UpdateValues">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.FireValueEstimatorEvent(CapitalPipe.LiteTrading.Indices.ValueEstimatorEventType)">
            <summary>
            
            </summary>
            <param name="evType"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.GetValue(CapitalPipe.LiteTrading.Indices.EstimatedValueType)">
            <summary>
            取得估算值
            </summary>
            <param name="valType"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.ReleaseListenQuotes">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.ToXMLNode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimator.ParseEstimator(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Indices.ValueEstimatorEventType">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Indices.ValueEstimatorType">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Indices.ValueEstimatorEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimatorEventArgs.EventType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimatorEventArgs.EventEstimator">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorEventArgs.#ctor(CapitalPipe.LiteTrading.Indices.ValueEstimatorEventType,CapitalPipe.LiteTrading.Indices.ValueEstimator)">
            <summary>
            
            </summary>
            <param name="evType"></param>
            <param name="evEstimator"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Indices.ValueEstimatorEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Indices.QuotePriceTerm">
            <summary>
            報價價格Term
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Indices.ValueEstimatorCreater">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimatorCreater.CreaterDescription">
            <summary>
            這個淨值/指數計算器的Creater的說明
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimatorCreater.CreaterGUID">
            <summary>
            這個淨值/指數計算器的Creater的GUID
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorCreater.CreateValueEstimator(System.Xml.Linq.XElement)">
            <summary>
            程式的Restore流程是用這個方法
            </summary>
            <param name="xConfig"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorCreater.CreateValueEstimator(System.String,CapitalPipe.LiteTrading.Baskets.Basket)">
            <summary>
            這個方法是給UI用的，在程式的Restore時，不會用這個機制
            </summary>
            <param name="estimatorID"></param>
            <param name="basket"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorCreater.EditEstimator(CapitalPipe.LiteTrading.Indices.ValueEstimator)">
            <summary>
            編輯設定
            </summary>
            <param name="estimator"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Indices.ETFSourceType">
            <summary>
            ETF資料來源類型
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Indices.ETFValueEstimatorCreater">
            <summary>
            ETF類型的計算器的Creater
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ETFValueEstimatorCreater.CreaterDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ETFValueEstimatorCreater.CreaterGUID">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ETFValueEstimatorCreater.CreateValueEstimator(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xConfig"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ETFValueEstimatorCreater.CreateValueEstimator(System.String,CapitalPipe.LiteTrading.Baskets.ETFDetailInfo)">
            <summary>
            這個方法是給UI用的，在程式的Restore時，不會用這個機制
            </summary>
            <param name="estimatorID"></param>
            <param name="etfDetial"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ETFValueEstimatorCreater.CreateValueEstimator(System.String,System.String)">
            <summary>
            這個方法是給UI用的，在程式的Restore時，不會用這個機制
            </summary>
            <param name="estimatorID"></param>
            <param name="etfDetialSourceFile"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ETFValueEstimatorCreater.EditEstimator(CapitalPipe.LiteTrading.Indices.ValueEstimator)">
            <summary>
            
            </summary>
            <param name="estimator"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Indices.ValueEstimationMethod">
            <summary>
            淨值/指數的估算方法
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimationMethod.ETFNAV_PCFAverage">
            <summary>
            ETF淨值計算，使用PCF的平均值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimationMethod.ETFNAV_MarketValueChange">
            <summary>
            ETF淨值計算，權益變動法
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimationMethod.Index_Weighted">
            <summary>
            指數計算，市值加權法
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimationMethod.Index_WeightedUseWeight">
            <summary>
            指數計算，市值加權法使用權重
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimationMethod.Index_PriceAverage">
            <summary>
            指數計算，價格平均法
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimationMethod.Index_PriceAverageUseChangeRate">
            <summary>
            指數計算，價格平均法使用權重
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimationMethod.Custom">
            <summary>
            使用者自行定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimationMethod.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager._valueEstimators">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager._estimatorCreaters">
            <summary>
            ValueEstimator的Creater
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager._etfEstimatorCreaters">
            <summary>
            ETF的ValueEstimator的Creater
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.OnValueEstimatorManagerEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager._defaultManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.Estimators">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.ValueEstimatorCreaters">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.ETFValueEstimatorCreaters">
            <summary>
            ETF類的淨值計算器
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.DefaultManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.DefaultSettingFile">
            <summary>
            預設的設定檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.GetValueEstimator(System.String)">
            <summary>
            
            </summary>
            <param name="estimatorID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.HasThisEstimator(System.String)">
            <summary>
            
            </summary>
            <param name="estimatorID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.AddEstimator(CapitalPipe.LiteTrading.Indices.ValueEstimator)">
            <summary>
            
            </summary>
            <param name="ve"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.RemoveEstimator(System.String)">
            <summary>
            
            </summary>
            <param name="estimatorID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.RegisterValueEstimatorCreater(CapitalPipe.LiteTrading.Indices.ValueEstimatorCreater)">
            <summary>
            
            </summary>
            <param name="creater"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.RegisterETFValueEstimatorCreater(CapitalPipe.LiteTrading.Indices.ETFValueEstimatorCreater)">
            <summary>
            
            </summary>
            <param name="creater"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.GetRegisteredValueEstimatorCreater(System.String)">
            <summary>
            
            </summary>
            <param name="strGUID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.GetRegisteredETFValueEstimatorCreater(System.String)">
            <summary>
            
            </summary>
            <param name="strGUID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.LoadFromFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.LoadFromFile(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.SaveToFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorManager.SaveToFile(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimatorManagerEventArgs._evType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Indices.ValueEstimatorManagerEventArgs._evEstimator">
            <summary>
            事件的淨值估算器
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimatorManagerEventArgs.EventType">
            <summary>
            淨值計算器管理員事件類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Indices.ValueEstimatorManagerEventArgs.EventEstimator">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Indices.ValueEstimatorManagerEventArgs.#ctor(CapitalPipe.LiteTrading.Indices.ValueEstimatorManagerEventType,CapitalPipe.LiteTrading.Indices.ValueEstimator)">
            <summary>
            
            </summary>
            <param name="evType"></param>
            <param name="evEstimator"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.CubicSplineYieldCurveModelInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.CubicSplineYieldCurveModelInfo.ModelGUID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.CubicSplineYieldCurveModelInfo.ModelName">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.CubicSplineYieldCurveModelInfo.ModelDescription">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve._interestRates">
            <summary>
            利率
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve._endCondition">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve._spline">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.CurveGUID">
            <summary>
            殖利率曲線GUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.CurveType">
            <summary>
            殖利率曲線的類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.InterestRateEntries">
            <summary>
            利率樣本點
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="curveID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.AssignInterestRates(System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.InterestRates.InterestRateEntry})">
            <summary>
            
            </summary>
            <param name="rates"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.SetCurveID(System.String)">
            <summary>
            
            </summary>
            <param name="curveID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.GetYield(System.DateTime)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.GetYield(System.Double)">
            <summary>
            /
            </summary>
            <param name="ttm"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.GetYieldByDays(System.Double)">
            <summary>
            
            </summary>
            <param name="ttmDays"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.ParseFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="settingNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.UpdateCurve">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.SaveToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="settingNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.CreateCubicCurveCreater(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="settingNode"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.CubicSplineYieldCurve.RegisterCubicSplineYieldCurve">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.InterestRateEntry.TTM">
            <summary>
            距到期日
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.InterestRateEntry.Rate">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.InterestRateEntry.RateInPercentage">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.InterestRateEntry.TTMDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.InterestRateEntry.InterestRateDescription">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.QuadraticYieldCurveModelInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.QuadraticYieldCurveModelInfo.ModelGUID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.QuadraticYieldCurveModelInfo.ModelName">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.QuadraticYieldCurveModelInfo.ModelDescription">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve._interestRates">
            <summary>
            利率
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve._endCondition">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve._spline">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.CurveGUID">
            <summary>
            殖利率曲線GUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.CurveType">
            <summary>
            殖利率曲線的類型
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="curveID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.AssignInterestRates(System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.InterestRates.InterestRateEntry})">
            <summary>
            
            </summary>
            <param name="rates"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.SetCurveID(System.String)">
            <summary>
            
            </summary>
            <param name="curveID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.GetYield(System.DateTime)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.GetYield(System.Double)">
            <summary>
            /
            </summary>
            <param name="ttm"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.GetYieldByDays(System.Double)">
            <summary>
            
            </summary>
            <param name="ttmDays"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.ParseFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="settingNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.UpdateCurve">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.SaveToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="settingNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.CreateQuadraticCurveCreater(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="settingNode"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.QuadraticSplineYieldCurve.RegisterQuadraticYieldCurve">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve">
            <summary>
            簡單的殖利率曲線實做(平的~~~XD)
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.TrivialYieldCurveModelInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.TrivialYieldCurveModelInfo.ModelGUID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.TrivialYieldCurveModelInfo.ModelName">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.TrivialYieldCurveModelInfo.ModelDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.CurveGUID">
            <summary>
            殖利率曲線GUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.CurveType">
            <summary>
            殖利率曲線的類型
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="curveID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.SetCurveID(System.String)">
            <summary>
            
            </summary>
            <param name="curveID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.GetYield">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.GetYield(System.DateTime)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.GetYield(System.Double)">
            <summary>
            /
            </summary>
            <param name="ttm"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.GetYieldByDays(System.Double)">
            <summary>
            
            </summary>
            <param name="ttmDays"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.SetYield(System.Double)">
            <summary>
            
            </summary>
            <param name="rate"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.ParseFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="settingNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.SaveToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="settingNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.CreateTrivialCurveCreater(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="settingNode"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.TrivialYieldCurve.RegisterTrivialYieldCurve">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.InterestRates.YieldCurve">
            <summary>
            用來Modle Yield Curve的物件：
            ※ Yield Curve是By ID管理，目前的ID暫時設定 = 國家別，用兩碼的Country Code(ZA,US,EN,TW,...)
              問題：cross listing，歐洲的商品但利率要設定成台灣？
              摩台選擇權要設定成台灣的利率
              ==> 這個設定應該是要by商品而定，但是會造成商品資訊過於繁雜
            ※提供兩種查詢方式：
             (1)by日期
             (2)by距到期天數
            ※先實做Trivial版，都回傳固定值
            ※
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.InterestRates.YieldCurve._curveID">
            <summary>
            曲線ID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.InterestRates.YieldCurve._description">
            <summary>
            殖利率曲線說明
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.YieldCurve.CurveID">
            <summary>
            殖利率線ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.YieldCurve.CurveGUID">
            <summary>
            殖利率曲線的GUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.YieldCurve.CurveType">
            <summary>
            殖利率曲線類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.YieldCurve.Description">
            <summary>
            殖利率曲線的說明
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurve.GetYield(System.DateTime)">
            <summary>
            取得利率
            </summary>
            <param name="dt">指定的到期日</param>
            <returns>該期間的zero counpon rate</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurve.GetYield(System.Double)">
            <summary>
            取得利率
            </summary>
            <param name="ttm">距到期天數，1年 = 1</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurve.GetYieldByDays(System.Double)">
            <summary>
            取得利率
            </summary>
            <param name="ttmDays">距到期天數，1天 = 1</param>
            <returns>該期間的zero counpon rate</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurve.SaveToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            儲存到XML節點
            ==> Curve的ID與說明由ParentNode負責
            </summary>
            <param name="settingNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurve.ParseFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            從XML節點parse資料
            </summary>
            <param name="settingNode"></param>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.YieldCurveManager.YieldCurves">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.YieldCurveManager.DefaultManager">
            <summary>
            殖利率曲線管理員
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.YieldCurveManager.DefaultSettingFile">
            <summary>
            預設的設定檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveManager.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveManager.GetYeildCurve(System.String)">
            <summary>
            由殖利率曲線代碼取得殖利率曲線
            </summary>
            <param name="curveID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveManager.RenameYieldCurve(System.String,CapitalPipe.LiteTrading.InterestRates.YieldCurve)">
            <summary>
            這裡應該要發一些事件出來？
            </summary>
            <param name="oldID"></param>
            <param name="curve"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveManager.RemoveYieldCurve(System.String)">
            <summary>
            這裡應該要發一些事件出來？
            </summary>
            <param name="oldID"></param>
            <param name="curve"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveManager.AddYieldCurve(CapitalPipe.LiteTrading.InterestRates.YieldCurve)">
            <summary>
            加入殖利率曲線
            </summary>
            <param name="curve"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveManager.RegisterYieldCurveCreater(System.String,CapitalPipe.LiteTrading.InterestRates.CrateYieldCurveDelegate)">
            <summary>
            註冊YieldCurve的Serializer
            </summary>
            <param name="guid"></param>
            <param name="del"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveManager.LoadFromFile(System.String)">
            <summary>
            
            </summary>
            <param name="fn"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveManager.LoadFromFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveManager.SaveToFile(System.String)">
            <summary>
            
            </summary>
            <param name="fn"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveManager.SaveToFile">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.InterestRates.CreateYieldCurveUIDelegate">
            <summary>
            建立Yield Curve的UI Delegate
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.InterestRates.EditYieldCurveUIDelegate">
            <summary>
            編輯Yield Curve的UI Delegate
            </summary>
            <param name="curve"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.InterestRates.YieldCurveModelInfo">
            <summary>
            擔任Factory的角色
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.InterestRates.YieldCurveModelInfo._models">
            <summary>
            所有的Model
            Key => Model GUID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.InterestRates.YieldCurveModelInfo._createUIs">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.InterestRates.YieldCurveModelInfo._editorUIs">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.YieldCurveModelInfo.ModelGUID">
            <summary>
            模型GUID代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.YieldCurveModelInfo.ModelName">
            <summary>
            模型名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.YieldCurveModelInfo.ModelDescription">
            <summary>
            模型說明
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.InterestRates.YieldCurveModelInfo.Models">
            <summary>
            所有的模型
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveModelInfo.RegisterModel(CapitalPipe.LiteTrading.InterestRates.YieldCurveModelInfo)">
            <summary>
            註冊YieldCurveModel
            </summary>
            <param name="model">
            殖利率曲線模型的說明物件
            </param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveModelInfo.GetYieldCurveModelInfo(System.String)">
            <summary>
            
            </summary>
            <param name="strGUID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveModelInfo.RegisterCreateUI(System.String,CapitalPipe.LiteTrading.InterestRates.CreateYieldCurveUIDelegate)">
            <summary>
            
            </summary>
            <param name="strGUID"></param>
            <param name="del"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveModelInfo.GetCreateUI(System.String)">
            <summary>
            
            </summary>
            <param name="strGUID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveModelInfo.RegisterEditUI(System.String,CapitalPipe.LiteTrading.InterestRates.EditYieldCurveUIDelegate)">
            <summary>
            
            </summary>
            <param name="strGUID"></param>
            <param name="del"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.InterestRates.YieldCurveModelInfo.GetEditUI(System.String)">
            <summary>
            
            </summary>
            <param name="strGUID"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.KeyValuePairEntry">
            <summary>
            可產生PropertyChanged事件的Key/Value組合物件
            </summary>
            <remarks>
            當Key或是Value值改變時，會發出PropertyChanged事件的Key/Value組合物件。主要是方便做Binding(WPF)時使用，這個物件的Key/Value型態都是字串。
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.KeyValuePairEntry._keyValue">
            <summary>
            Key資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.KeyValuePairEntry._value">
            <summary>
            Value資料
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.KeyValuePairEntry.PropertyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.KeyValuePairEntry.KeyData">
            <summary>
            Key值，使用setter設定值時，會發佈PropertyChanged事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.KeyValuePairEntry.ValueData">
            <summary>
            Value值，使用setter設定值時，會發佈PropertyChanged事件
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.KeyValuePairEntry.FirePropertyChangedEvent(System.String)">
            <summary>
            發佈屬性改變事件
            </summary>
            <param name="field">屬性名稱</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.LitePositions.IssuedSecurityTreasury">
            <summary>
             發行商證券庫存資料
             自己發行證券的部位資訊
             -------------------------------------------
             自已發行的證券要處理流通在外(負債)的概念，故不適合直接以Treasury方式處理
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.IssuedSecurityTreasury._exerciseAdj">
            <summary>
            因證券履約產生的調整項
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.IssuedSecurityTreasury._issuepri">
            <summary>
            發行價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.IssuedSecurityTreasury._issuedShares">
            <summary>
            發行數量(扣掉己註銷/已履約)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.IssuedSecurityTreasury._lastDebtMkt">
            <summary>
            累算至前日以市價計算的負債餘額
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.IssuedSecurityTreasury._lastDebtTheo">
            <summary>
            累算至前日以理論價計算的負債餘額
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.IssuedSecurityTreasury._issuedTreasuries">
            <summary>
            自己發行商品部位
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.IssuedSecurityTreasury.ExerciseAdjustment">
            <summary>
            ExerciseAdjustment property : Read Only
            </summary>
            <value>履約調整項</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.IssuedSecurityTreasury.IssuedPrice">
            <summary>
            IssuedPrice property : Read Only</summary>
            <value>
            發行價
            </value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.IssuedSecurityTreasury.IssuedShares">
            <summary>IssuedShares property : Read Only</summary>
            <value>發行數量(要扣掉已註銷/已履約的數量)</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.IssuedSecurityTreasury.LastDebtMarkToMarket">
            <summary>DebtMarkToMarket property : Read Only</summary>
            <value>MTM的負債餘額</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.IssuedSecurityTreasury.LastDebtMarkToTheory">
            <summary>DebtMarkToTheory property : Read Only</summary>
            <value>MT理論的負債餘額</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.IssuedSecurityTreasury.IssuedTreasuries">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.IssuedSecurityTreasury.#ctor(CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.String,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int32,System.Decimal,System.Decimal)">
            <summary>Constructor</summary>
            <param name="accInfo">帳號</param>
            <param name="cmdInfo">商品資訊</param>
            <param name="tradeTag">交易類型</param>
            <param name="lots">單位數</param>
            <param name="price">均價</param>
            <param name="urpl">未實現損益</param>
            <param name="urplth">未實現損益(Mark To 理論價)</param>
            <param name="dividend">現金股利</param>
            <param name="cumdividend">累積現金股利</param>
            <param name="cumtax">累積交易稅</param>
            <param name="cumcomm">累積手續費</param>
            <param name="cumhandle">累積經手費</param>
            <param name="cumrpl">累積已實現損益</param>
            <param name="npl">淨損益(累計至前一個交易日)</param>
            <param name="npllm">淨損益(累計至上月底)</param>
            <param name="npllq">淨損益(累計至上季底)</param>        
            <param name="nplth">淨損益(累計至前一個交易日，Mark To 理論價)</param>
            <param name="npllmth">淨損益(累計至上季底，Mark To 理論價)</param>
            <param name="npllqth">淨損益(累計至上季底，Mark To 理論價)</param>
            <param name="exadj">履約調整項</param>
            <param name="ispri">發行價</param>
            <param name="isshares">發行數量</param>
            <param name="debtmkt">市價負債餘額</param>
            <param name="debtmtt">理論價負債餘額</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.IssuedSecurityTreasury.HasThisIssuedTreasury(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="exchange"></param>
            <param name="alias"></param>
            <param name="code"></param>
            <param name="tradeTag"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.LitePositions.LitePosition">
             <summary>
             基礎部位資訊
             在SST裡面，針對每一個商品的持有數量及損益會用一個Position(PrimePosition/Position)物件來代表
             部位的產生方式為：前日庫存 + 當日成交
             在SST裡面，Position是可以由單一或是多個帳號組成，使用者可以藉由這個方式來觀察單一或是多個帳號組合的部位資訊
             部位資訊區分為兩種：(1)基礎部位PrimePosition及(2)進階部位Position
             兩者主要差異為PrimePosition僅包含一個相對應的CommodityInfo物件，而Position會包含一個想對應的Commodity物件
             在SST裡面，取得基礎部位(PrimePosition)的方式有兩種：
             (1)使用PrimePositionUtilities的CreatePosition及AddTransaction，手動管理
             (2)使用PrimePositionSource，只要設定好相關的Filter，PositionSource會自動處理相關的成交資料，產生正確的部位資訊
             
             當部位產生變化時，會透過OnPositionChange事件派送相關事件，事件來源有：
             (1)Update:報價更新或是成交移除造成部位資料更新
             (2)AddTransaction:新成交造成部位資料更新
             (3)StateChanged:其他原因造成的部位資料改變(例如：Selected Flag資料改變)
             
             成交移除：
                 在正常狀況下，可以透過AddTransaction加入新成交資料。但在特殊狀況下，有可能需要移除成交資料。
                 通常是發生在成交資料比委託資料早先回來，此時第一次送出的成交資料不會包含StrategyType及StrategyID等欄位
                 故會造成StrategyFilter無法進行準確的判斷，在這個case下，當該筆成交的委託資料回覆時，會重新加上
                 StrategyType及StrategyID的值，並重新派送此筆成交事件(此時事件類型為Update，非NewTransaction)
                 若先前已加入該筆成交，但在收到Update後發現此筆成交並不應該加入此部位時，會觸動RemoveTransaction
                 
             ------------------------------------------------------------------------------------------
             PrimePosition被產生出來時，會自動去監聽報價事件。
             若要進行PrimePosition物件的釋放，請記得呼叫SetQuote(NULL)
             ------------------------------------------------------------------------------------------
             20160809 
             ※ 新增以下欄位
                1.  BuyOpenPosition 買進開倉
                2.  SellOpenPosition 賣出開倉
                3.  TodayBuyOpen 今日買進開倉
                4.  TodayBuyClose 今日買進平倉
                5.  TodaySellOpen 今日賣出開倉
                5.  TodaySellClose 今日賣出平倉
                7.  CarriedOverBuyOpen 昨日買進留倉 (今日開盤時昨天留倉的BuyOpen部位)
                8.  CarriedOverSellOpen 昨日賣出留倉 (今日開盤時昨天留倉的SellOpen部位)
             20170809
             ※ 新增以下欄位
                SettlePL 結算損益
            
             </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._lastUpdate">
            <summary>
            最後更新的時間點
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._lastCalPLPri">
            <summary>
            最後更新時使用的計算價格
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._dirty">
            <summary>
            資料是否處於dirty的狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._commodity">
            <summary>
            這個部位的商品物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._bSelect">
            <summary>
            是否被選到
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._lots">
            <summary>
            部位的數量，若是股票的話是以零股為單位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._onwayLots">
            <summary>
            在股數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._oriCost">
            <summary>
            原始庫存成本 ===> 這個存廢待討論？ 
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._price">
            <summary>
            目前部位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._rpl">
            <summary>
            已實現損益
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._unrl">
            <summary>
            未實現損益
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._npl">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._dpl">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._nplLast">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._plAdjust">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._comm">
            <summary>
            手續費
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._handle">
            <summary>
            經手費
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._tax">
            <summary>
            交易稅
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._tsell">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._tbuyAvg">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._tsellAvg">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._todayPL">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._buyOpenPos">
            <summary>
            買進開倉 ==> for買賣開倉使用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._sellOpenPos">
            <summary>
            賣出開倉 ==> for買賣開倉使用 
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._balanceNPL">
            <summary>
            來自庫存資料的已實損益
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._buyOpenPosAvgCost">
            <summary>
            買進均價 ==> for買賣開倉使用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._sellOpenPosAvgCost">
            <summary>
            賣出均價 ==> for買賣開倉使用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._todayBuyOpenMktVal">
            <summary>
            今日買進開倉總值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._todayBuyCloseMktVal">
            <summary>
            今日買進平倉總值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._todaySellOpenMktVal">
            <summary>
            今日賣出開倉總值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._todaySellCloseMktVal">
            <summary>
            今日賣出平倉總值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._todayBuyOpen">
            <summary>
            今日買進開倉
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._todayBuyClose">
            <summary>
            今日買進平倉
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._todaySellOpen">
            <summary>
            今日賣出開倉
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._todaySellClose">
            <summary>
            今日賣出平倉
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._carriedOverBuyOpen">
            <summary>
            昨日買進留倉 (今日開盤時昨天留倉的BuyOpen部位)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._carriedOverSellOpen">
            <summary>
            昨日賣出留倉 (今日開盤時昨天留倉的SellOpen部位)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._tag">
            <summary>
            交易類別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._dailySettlePL">
            <summary>
            日損益(Mark to結算價)
            </summary>
            <remarks>
            以結算價來計算的日損益
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._markToSettlePrice">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._allTrans">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePosition._quote">
            <summary>
            
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.LitePositions.LitePosition.OnPrimePositionChanged">
            <summary>
            部位改變事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.Commodity">
            <summary>
            Commodity property : Read Only
            會根據Code取得Commodity，如果找不到商品，會是HPTNullCommodity
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.Code">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.Selected">
            <summary>
            Selected property : Read/Write
            目前部位是否有被選到
            (在一個List裡面，用來區分有選到或是沒選到的部位)
            </summary>
            <value>選擇</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.MarketValue">
            <summary>MarketValue property : Read Only</summary>
            <value>市值</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.Lots">
            <summary>Lots property : Read/Write</summary>
            <value>數量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.OnwayLots">
            <summary>
            在途數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.Price">
            <summary>Price property : Read/Write</summary>
            <value>成本均價</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.RPL">
            <summary>RPL property : Read Only</summary>
            <value>>已實現損益，僅含當日</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.URPL">
            <summary>URPL property : Read Only</summary>
            <value>未實現損益</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.NetPL">
            <summary>NetPL property : Read Only</summary>
            <value>淨損益</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.DailyPL">
            <summary>DailyPL propety : Read Only</summary>
            <value>日損益</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.NetPLLast">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.Commission">
            <summary>Commission property : Read Only</summary>
            <value></value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.Handle">
            <summary>Handle property : Read Only</summary>
            <value></value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.Tax">
            <summary>Tax property : Read Only</summary>
            <value></value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.TodaySellAvg">
            <summary>
            當日交易的平均賣出價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.TodayBuyAvg">
            <summary>
            當日交易的平均買入價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.TodaySell">
            <summary>
            當日賣出數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.TodayBuy">
            <summary>
            當日買進數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.TodayPL">
            <summary>
            當日交易部位的總損益
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.BuyOpenPosition">
            <summary>
            買進開倉部位
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.SellOpenPosition">
            <summary>
            賣出開倉部位
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.BuyOpenPosAvgCost">
            <summary>
            買進開倉均價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.SellOpenPosAvgCost">
            <summary>
            賣出開倉均價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.Quote">
            <summary>
            報價物件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.OriCost">
            <summary>
            原始成本
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.Transactions">
            <summary>
            所有成交資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.TodayBuyOpen">
            <summary>
            TodayBuyOpen 今日買進開倉
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.TodayBuyClose">
            <summary>
            TodayBuyClose 今日買進平倉
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.TodaySellOpen">
            <summary>
            TodaySellOpen 今日賣出開倉
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.TodaySellClose">
            <summary>
            TodaySellClose 今日賣出平倉
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.CarriedOverBuyOpen">
            <summary>
            CarriedOverBuyOpen 昨日買進留倉 (今日開盤時昨天留倉的BuyOpen部位)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.CarriedOverSellOpen">
            <summary>
            昨日賣出留倉 (今日開盤時昨天留倉的SellOpen部位)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.TodayBuyOpenAvg">
            <summary>
            今日買進開倉平均價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.TodayBuyCloseAvg">
            <summary>
            今日買進平倉平均價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.TodaySellOpenAvg">
            <summary>
            今日賣出開倉平均價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.TodaySellCloseAvg">
            <summary>
            今日賣出平倉平均價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.DailySettlePL">
            <summary>
            對齊結算價的日損益
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.Tag">
            <summary>
            交易類別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePosition.MarkToSettlePrice">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.#ctor(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            Constructor由成交資料來建立部位
            </summary>
            <param name="trans"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.#ctor(CapitalPipe.LiteTrading.LitePositions.Treasury)">
            <summary>
            Constructor由庫存資料來建立部位
            </summary>
            <param name="tr"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.#ctor(System.String)">
            <summary>
            由商品代碼建立一個空的庫存部位
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.SetCommodity(System.String)">
            <summary>
            設定商品
            找不到商品時，應該輸出系統錯誤訊息
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.FirePositionEvent(CapitalPipe.LiteTrading.LitePositions.LitePositionEventArgs)">
            <summary>
            發送Position事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.ToTreasury(CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            將Position轉成Treasury
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.HasThisTransaction(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            是否已經有處理過這筆交易資料？
            </summary>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.UpdateDayTradeTransactionInfoOnly(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            
            </summary>
            <param name="tr"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.AddTransaction(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            當成交資料產生時，call這個function新增一筆交易資料
            </summary>
            <param name="trans"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.RemoveTransaction(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            移除一筆交易資料
            </summary>
            <param name="trans"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.UpdateTodayPL">
            <summary>
            更新日內總損益
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.CalculateDailyPL(System.Decimal)">
            <summary>
            計算日內交易損益
            </summary>
            <param name="pri">計算損益的價格</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.AddTreasury(CapitalPipe.LiteTrading.LitePositions.Treasury)">
            <summary>
            加入庫存資訊
            </summary>
            <param name="tr">庫存物件</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.HandleQuoteEvent(System.Object,CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            處理行情事件
            為了避免快市連續報價事件太多影響效能，故新增一個dirty變數，
            用來暫停住的狀態
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.SetQuote(CapitalPipe.LiteTrading.Quotes.Quote)">
            <summary>
            設定Quote物件
            </summary>
            <param name="q"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.UpdateQuoteData(System.Boolean)">
            <summary>
            更新報價資料
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.GetAccountingPrice">
            <summary>
            取得計算損益用的會計價格
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.GetSettlePrice">
            <summary>
            取得結算價
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.HasTransaction(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            是否包括某筆成交資料？
            </summary>
            <param name="tr"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.clearPosition">
            <summary>
            將部位資料歸零
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePosition.Dispose">
            <summary>
            Dispose this object
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.LitePositions.LitePositionEventArgs">
            <summary>
            部位事件參數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePositionEventArgs.EventType">
            <summary>EventType property : Read Only</summary>
            <value>傳回事件類型</value>
        </member>
        <member name="T:CapitalPipe.LiteTrading.LitePositions.LitePositionEventHandler">
            <summary>
            Delegate : 部位事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.LitePositions.LitePositionEventType">
            <summary>
            部位事件類型</summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePositionEventType.Update">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePositionEventType.AddTransaction">
            <summary>
            新成交
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePositionEventType.StateChanged">
            <summary>
            狀態改變(ex:Selected值改變
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePositionEventType.WillBeDisposed">
            <summary>
            即將被Dispose
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource">
            <summary>
            部位來源
            用來控管想要監管的部位資訊
            抽象類別
            ----------------------------------------------------------------
            部位來源事件的發送時點：
            (1) Refresh事件：refresh事件通常是由程式開發人員在建立時呼叫產生的
                            是同步的發送，亦即在Refresh()的執行過程中發送
            (2) 成交造成的部位資料改變：因為成交是在OrderManager的HandleOrderData thread中
                                     發送，故這個事件應該會在這個thread中產生
            (3) 報價造成的部位資料改變：因為報價有一個HandleQuoteData的Thread在處理，故因
                                      報價改變產生的部位變化會在該thread中產生
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource._pos">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource._dayTradeOnly">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource.PositionSortAlgorithm">
            <summary>
            
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource.OnPositionSourceChanged">
            <summary>
            部位來源事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource.Positions">
            <summary>
            部位資料
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource.ListenPosition">
            <summary>
            監控部位事件
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource.ReleasePosition">
            <summary>
            釋放部位
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource.HandlePositionChanged(System.Object,CapitalPipe.LiteTrading.LitePositions.LitePositionEventArgs)">
            <summary>當Position事件時的處理程序</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource.FireEvent(CapitalPipe.LiteTrading.LitePositions.LitePositionSourceEventArgs)">
            <summary>
            派送事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource.GetPositionCount">
            <summary>
            取得目前部位的數量
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource.GetPositionAt(System.Int32)">
            <summary>
            取得索引位置idx的部位
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource.Sort">
            <summary>
            部位資料排序
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource.GetPortfolioDailyPL(CapitalPipe.LiteTrading.Commodities.CurrencyID)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.ApplicationPositionSource.RefreshPosition">
            <summary>
            更新部位
            子類別依需求改寫
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.LitePositions.LitePositionSourceEventArgs">
            <summary>
            PositionSouceEvent
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePositionSourceEventArgs._evType">
            <summary>
            事件類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePositionSourceEventArgs._pos">
            <summary>
            事件的部位
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePositionSourceEventArgs.Position">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePositionSourceEventArgs.EventType">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionSourceEventArgs.#ctor(CapitalPipe.LiteTrading.LitePositions.LitePositionSourceEventType,CapitalPipe.LiteTrading.LitePositions.LitePosition)">
            <summary>
            
            </summary>
            <param name="ev"></param>
            <param name="pos"></param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePositionSourceEventType.ItemAdded">
            <summary>
            新部位產生
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePositionSourceEventType.PositionChanged">
            <summary>
            部位的資料發生改變
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePositionSourceEventType.QuoteUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.LitePositionSourceEventType.Refresh">
            <summary>
            整個部位來源做Refresh
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities">
            <summary>
            Static類別：PositionUtilities，部位相關的公用程式
            這個類別主要的功能是用來產生即時部位以及將成交加進某個部位之中
            
            在SST的部位資料是以一個Position物件的List表示
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.ByPassCalculatedTransactionMode">
            <summary>
            是否使用部位已計算模式
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.UpdateByPassTransactionInfoToPosition">
            <summary>
            是否更新bypass
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.AddTransaction(CapitalPipe.LiteTrading.Commodities.CommodityFilter,CapitalPipe.LiteTrading.Strategies.StrategyFilter,CapitalPipe.LiteTrading.Orders.AccountFilter,System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.LitePositions.LitePosition},CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            新增一筆成交資料到部位List之中
            </summary>
            <param name="cmdFilter">用來過濾特殊Commodity的Filter，若為null表示不過濾商品</param>
            <param name="strategyFilter">用來過濾特定策略的Filter，若為null表示不過濾策略</param>
            <param name="accFilter">用來過濾特定帳號的Filter，若為null表示不過濾帳號</param>
            <param name="posArr">部位List</param>
            <param name="trans">成交資料</param>
            <returns>被修改的部位物件</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.AddTransaction(CapitalPipe.LiteTrading.Commodities.CommodityFilter,CapitalPipe.LiteTrading.Strategies.StrategyFilter,CapitalPipe.LiteTrading.Orders.AccountFilter,System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.LitePositions.LitePosition},CapitalPipe.LiteTrading.Orders.Transaction,CapitalPipe.LiteTrading.LitePositions.LitePositionCreater)">
            <summary>
            使用PositionCreater版本
            </summary>
            <param name="cmdFilter"></param>
            <param name="strategyFilter"></param>
            <param name="accFilter"></param>
            <param name="posArr"></param>
            <param name="trans"></param>
            <param name="creater"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.AddTransaction(System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.LitePositions.LitePosition},CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            加入部位
            若在部位List無該商品，會新增一筆PrimePosition
            </summary>
            <param name="posArr">部位List</param>
            <param name="trans">成交資料</param>
            <returns>被修改的部位物件</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.AddTransaction(System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.LitePositions.LitePosition},CapitalPipe.LiteTrading.Orders.Transaction,CapitalPipe.LiteTrading.LitePositions.LitePositionCreater)">
            <summary>
            
            </summary>
            <param name="posArr"></param>
            <param name="trans"></param>
            <param name="creater"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.UpdateDayTradeTransactionOnly(System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.LitePositions.LitePosition},CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            
            </summary>
            <param name="posArr"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.RemoveTransaction(System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.LitePositions.LitePosition},CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            移除成交資訊
            </summary>
            <param name="posArr">部位List</param>
            <param name="trans">成交資料</param>
            <returns>被修改的部位物件，若部位List裡面無該成交的商品，會回傳null</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.AddTreasury(System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.LitePositions.LitePosition},CapitalPipe.LiteTrading.LitePositions.Treasury)">
            <summary>
            加入庫存
            </summary>
            <param name="pos">部位List</param>
            <param name="tr">庫存資料</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.AddTreasury(System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.LitePositions.LitePosition},CapitalPipe.LiteTrading.LitePositions.Treasury,CapitalPipe.LiteTrading.LitePositions.LitePositionCreater)">
            <summary>
            加入庫存
            </summary>
            <param name="pos">部位List</param>
            <param name="tr">庫存資料</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.CreatePosition(CapitalPipe.LiteTrading.Commodities.CommodityFilter,CapitalPipe.LiteTrading.Strategies.StrategyFilter,CapitalPipe.LiteTrading.Orders.AccountFilter,System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.LitePositions.LitePosition},CapitalPipe.LiteTrading.LitePositions.Treasury)">
            <summary>將庫存資訊加入部位資訊中</summary>
            <param name="cmdFilter">用來過濾特殊Commodity的Filter，若為null表示不過濾商品</param>
            <param name="strategyFilter">用來過濾特定策略的Filter，若為null表示不過濾策略</param>
            <param name="accFilter">用來過濾特定帳號的Filter，若為null表示不過濾帳號</param>
            <param name="pos">部位List</param>
            <param name="tr">庫存資料</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.CreatePosition(CapitalPipe.LiteTrading.Commodities.CommodityFilter,CapitalPipe.LiteTrading.Strategies.StrategyFilter,CapitalPipe.LiteTrading.Orders.AccountFilter,System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.LitePositions.LitePosition},CapitalPipe.LiteTrading.LitePositions.Treasury,CapitalPipe.LiteTrading.LitePositions.LitePositionCreater)">
            <summary>
            
            </summary>
            <param name="cmdFilter"></param>
            <param name="strategyFilter"></param>
            <param name="accFilter"></param>
            <param name="pos"></param>
            <param name="tr"></param>
            <param name="creater"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.CreatePosition(CapitalPipe.LiteTrading.Commodities.CommodityFilter,CapitalPipe.LiteTrading.Strategies.StrategyFilter,CapitalPipe.LiteTrading.Orders.AccountFilter,System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.LitePositions.LitePosition},CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            
            </summary>
            <param name="cmdFilter">用來過濾特殊Commodity的Filter，若為null表示不過濾商品</param>
            <param name="strategyFilter">用來過濾特定策略的Filter，若為null表示不過濾策略</param>
            <param name="accFilter">用來過濾特定帳號的Filter，若為null表示不過濾帳號</param>
            <param name="pos"></param>
            <param name="tr"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.CreatePosition(CapitalPipe.LiteTrading.Commodities.CommodityFilter,CapitalPipe.LiteTrading.Strategies.StrategyFilter,CapitalPipe.LiteTrading.Orders.AccountFilter,System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.LitePositions.LitePosition},CapitalPipe.LiteTrading.Orders.Transaction,CapitalPipe.LiteTrading.LitePositions.LitePositionCreater)">
            <summary>
            
            </summary>
            <param name="cmdFilter"></param>
            <param name="strategyFilter"></param>
            <param name="accFilter"></param>
            <param name="pos"></param>
            <param name="tr"></param>
            <param name="creater"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.CreatePosition(CapitalPipe.LiteTrading.Commodities.CommodityFilter,CapitalPipe.LiteTrading.Strategies.StrategyFilter,CapitalPipe.LiteTrading.Orders.AccountFilter,CapitalPipe.LiteTrading.LitePositions.Treasury[],System.Boolean)">
            <summary>
            產生部位資訊
            會加入目前的成交資料
            </summary>
            <param name="filter"></param>
            <param name="treasuries">庫存資訊</param>
            <param name="bAddTrans">是否加入成交資料</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.CreatePosition(CapitalPipe.LiteTrading.Commodities.CommodityFilter,CapitalPipe.LiteTrading.Strategies.StrategyFilter,CapitalPipe.LiteTrading.Orders.AccountFilter,CapitalPipe.LiteTrading.LitePositions.Treasury[],System.Boolean,CapitalPipe.LiteTrading.LitePositions.LitePositionCreater)">
            <summary>
            
            </summary>
            <param name="cmdFilter"></param>
            <param name="strategyFilter"></param>
            <param name="accFilter"></param>
            <param name="treasuries"></param>
            <param name="bAddTrans"></param>
            <param name="creater"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.CreatePosition(CapitalPipe.LiteTrading.Commodities.CommodityFilter,CapitalPipe.LiteTrading.Strategies.StrategyFilter,CapitalPipe.LiteTrading.Orders.AccountFilter,CapitalPipe.LiteTrading.LitePositions.Treasury[],CapitalPipe.LiteTrading.Orders.Transaction[])">
            <summary>
            產生部位資訊
            </summary>
            <param name="cmdFilter">用來過濾特殊Commodity的Filter，若為null表示不過濾商品</param>
            <param name="strategyFilter">用來過濾特定策略的Filter，若為null表示不過濾策略</param>
            <param name="accFilter">用來過濾特定帳號的Filter，若為null表示不過濾帳號</param>
            <param name="treasuries">庫存資料</param>
            <param name="trs">成交資料</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.LitePositionUtilities.ContainsTrans(CapitalPipe.LiteTrading.Orders.Transaction,System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.LitePositions.LitePosition})">
            <summary>
            是否包括某筆成交資料？
            </summary>
            <param name="tr">成交資訊物件</param>
            <param name="posList">部位List</param>
            <returns>true:目前部位有包括該筆成交；false:目前部位不包括該筆成交</returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.LitePositions.ShortSellingTreasury">
            <summary>
            融券部位資訊
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.LitePositions.SimpleObervableLitePositionSource">
            <summary>
            簡單的PositionSource實做
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.SimpleObervableLitePositionSource._commodityFilter">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.SimpleObervableLitePositionSource._accountFilter">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.SimpleObervableLitePositionSource._strategyFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.SimpleObervableLitePositionSource.CommodityFilter">
            <summary>
            商品過慮器
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.SimpleObervableLitePositionSource.AccountFilter">
            <summary>
            帳號過濾器
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.SimpleObervableLitePositionSource.StrategyFilter">
            <summary>
            策略過濾器
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.SimpleObervableLitePositionSource.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.SimpleObervableLitePositionSource.DefaultEventCenter_OnSystemConfigurationChanged(System.Object,CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.SimpleObervableLitePositionSource.DefaultEventCenter_OnTransactionChanged(System.Object,CapitalPipe.LiteTrading.Orders.TransactionEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.SimpleObervableLitePositionSource.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.SimpleObervableLitePositionSource.RefreshPosition">
            <summary>
            重新產生Position
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource">
            <summary>
            簡單的PositionSource實做
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource._commodityFilter">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource._accountFilter">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource._strategyFilter">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource._posCreater">
            <summary>
            若是null，會使用預設模式
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource.CommodityFilter">
            <summary>
            商品過慮器
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource.AccountFilter">
            <summary>
            帳號過濾器
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource.StrategyFilter">
            <summary>
            策略過濾器
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource.PositionCreator">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource.#ctor(CapitalPipe.LiteTrading.LitePositions.LitePositionCreater)">
            <summary>
            
            </summary>
            <param name="creater"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource.GetPosition(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            取得部位物件
            </summary>
            <param name="cmdInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource.DefaultEventCenter_OnSystemConfigurationChanged(System.Object,CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource.DefaultEventCenter_OnTransactionChanged(System.Object,CapitalPipe.LiteTrading.Orders.TransactionEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.SimpleLitePositionSource.RefreshPosition">
            <summary>
            重新產生Position
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.LitePositions.TaggedPosition">
            <summary>
            處理需要做資券拆帳的部位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.TaggedPosition._tradeTag">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.TaggedPosition._accInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.TaggedPosition.TradeTag">
            <summary>
            交易旗標
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.TaggedPosition.AccountInfo">
            <summary>
            交易帳號
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPosition.#ctor(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            Constructor由成交資料來建立部位
            </summary>
            <param name="trans"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPosition.#ctor(CapitalPipe.LiteTrading.LitePositions.Treasury)">
            <summary>
            Constructor由庫存資料來建立部位
            </summary>
            <param name="tr"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource">
            <summary>
            TaggedPositionSource實做
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.CommodityFilter">
            <summary>
            商品過慮器
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.AccountFilter">
            <summary>
            帳號過濾器
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.StrategyFilter">
            <summary>
            策略過濾器
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.Positions">
            <summary>
            部位資料
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.DefaultEventCenter_OnTransactionChanged(System.Object,CapitalPipe.LiteTrading.Orders.TransactionEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.RefreshPosition">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.ListenPosition">
            <summary>
            監控部位事件
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.ReleasePosition">
            <summary>
            釋放部位
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.HandlePositionChanged(System.Object,CapitalPipe.LiteTrading.LitePositions.LitePositionEventArgs)">
            <summary>當Position事件時的處理程序</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.FireEvent(CapitalPipe.LiteTrading.LitePositions.LitePositionSourceEventArgs)">
            <summary>
            派送事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.GetPositionCount">
            <summary>
            取得目前部位的數量
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.GetPositionAt(System.Int32)">
            <summary>
            取得索引位置idx的部位
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.Sort">
            <summary>
            部位資料排序
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionSource.GetPortfolioDailyPL">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionUtilities.AddTransaction(CapitalPipe.LiteTrading.Commodities.CommodityFilter,CapitalPipe.LiteTrading.Strategies.StrategyFilter,CapitalPipe.LiteTrading.Orders.AccountFilter,System.Collections.Generic.List{CapitalPipe.LiteTrading.LitePositions.TaggedPosition},CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            新增一筆成交資料到部位List之中
            </summary>
            <param name="cmdFilter">用來過濾特殊Commodity的Filter，若為null表示不過濾商品</param>
            <param name="accFilter">用來過濾特定帳號的Filter，若為null表示不過濾帳號</param>
            <param name="posArr">部位List</param>
            <param name="trans">成交資料</param>
            <returns>被修改的部位物件</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionUtilities.AddTransaction(System.Collections.Generic.List{CapitalPipe.LiteTrading.LitePositions.TaggedPosition},CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            加入部位
            若在部位List無該商品，會新增一筆TaggedPosition
            </summary>
            <param name="posArr">部位List</param>
            <param name="trans">成交資料</param>
            <returns>被修改的部位物件</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionUtilities.RemoveTransaction(System.Collections.Generic.List{CapitalPipe.LiteTrading.LitePositions.TaggedPosition},CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            移除成交資訊
            </summary>
            <param name="posArr">部位List</param>
            <param name="trans">成交資料</param>
            <returns>被修改的部位物件，若部位List裡面無該成交的商品，會回傳null</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionUtilities.AddTreasury(System.Collections.Generic.List{CapitalPipe.LiteTrading.LitePositions.TaggedPosition},CapitalPipe.LiteTrading.LitePositions.Treasury)">
            <summary>
            加入庫存
            </summary>
            <param name="pos">部位List</param>
            <param name="tr">庫存資料</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionUtilities.CreatePosition(CapitalPipe.LiteTrading.Commodities.CommodityFilter,CapitalPipe.LiteTrading.Strategies.StrategyFilter,CapitalPipe.LiteTrading.Orders.AccountFilter,System.Collections.Generic.List{CapitalPipe.LiteTrading.LitePositions.TaggedPosition},CapitalPipe.LiteTrading.LitePositions.Treasury)">
            <summary>將庫存資訊加入部位資訊中</summary>
            <param name="cmdFilter">用來過濾特殊Commodity的Filter，若為null表示不過濾商品</param>
            <param name="strategyFilter">用來過濾特定策略的Filter，若為null表示不過濾策略</param>
            <param name="accFilter">用來過濾特定帳號的Filter，若為null表示不過濾帳號</param>
            <param name="pos">部位List</param>
            <param name="tr">庫存資料</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionUtilities.CreatePosition(CapitalPipe.LiteTrading.Commodities.CommodityFilter,CapitalPipe.LiteTrading.Strategies.StrategyFilter,CapitalPipe.LiteTrading.Orders.AccountFilter,System.Collections.Generic.List{CapitalPipe.LiteTrading.LitePositions.TaggedPosition},CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            
            </summary>
            <param name="cmdFilter">用來過濾特殊Commodity的Filter，若為null表示不過濾商品</param>
            <param name="strategyFilter">用來過濾特定策略的Filter，若為null表示不過濾策略</param>
            <param name="accFilter">用來過濾特定帳號的Filter，若為null表示不過濾帳號</param>
            <param name="pos"></param>
            <param name="tr"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionUtilities.CreatePosition(CapitalPipe.LiteTrading.Commodities.CommodityFilter,CapitalPipe.LiteTrading.Strategies.StrategyFilter,CapitalPipe.LiteTrading.Orders.AccountFilter,CapitalPipe.LiteTrading.LitePositions.Treasury[],System.Boolean)">
            <summary>
            產生部位資訊
            會加入目前的成交資料
            </summary>
            <param name="filter"></param>
            <param name="treasuries">庫存資訊</param>
            <param name="bAddTrans">是否加入成交資料</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionUtilities.CreatePosition(CapitalPipe.LiteTrading.Commodities.CommodityFilter,CapitalPipe.LiteTrading.Strategies.StrategyFilter,CapitalPipe.LiteTrading.Orders.AccountFilter,CapitalPipe.LiteTrading.LitePositions.Treasury[],CapitalPipe.LiteTrading.Orders.Transaction[])">
            <summary>
            產生部位資訊
            </summary>
            <param name="cmdFilter">用來過濾特殊Commodity的Filter，若為null表示不過濾商品</param>
            <param name="strategyFilter">用來過濾特定策略的Filter，若為null表示不過濾策略</param>
            <param name="accFilter">用來過濾特定帳號的Filter，若為null表示不過濾帳號</param>
            <param name="treasuries">庫存資料</param>
            <param name="trs">成交資料</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.TaggedPositionUtilities.ContainsTrans(CapitalPipe.LiteTrading.Orders.Transaction,System.Collections.Generic.List{CapitalPipe.LiteTrading.LitePositions.TaggedPosition})">
            <summary>
            是否包括某筆成交資料？
            </summary>
            <param name="tr">成交資訊物件</param>
            <param name="posList">部位List</param>
            <returns>true:目前部位有包括該筆成交；false:目前部位不包括該筆成交</returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.LitePositions.Treasury">
            <summary>
            前日庫存資訊
            SST系統初始化的時侯，會自SST後檯(DataService)載入庫存資料，
            並存在AppTreasuries裡面
            --------------------------------------------------------------------
            20150909
            ※ 新增SetLots, SetCost方法
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._accInfo">
            <summary>
            此筆庫存的帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._cmd">
            <summary>
            此筆庫存的商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._strategyType">
            <summary>
            策略類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._strategyID">
            <summary>
            策略代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._lots">
            <summary>
            庫存的單位數，股票的話是以股數為單位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._onwayLots">
            <summary>
            在途數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._price">
            <summary>
            庫存成本
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._urpl">
            <summary>
            至前一交易日的未實現損益(重要欄位，如果錯誤可能會導致Daily P/L計算錯誤)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._npl">
            <summary>
            累積至昨日的淨損益(含現金股利)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._tradeTag">
            <summary>
            交易旗標：融資、融券、一般…(在TaggedPosition裡面有定義一些常數)
            若要處理融資券拆帳，這個欄位要正確。另外，成交資料也要能正確帶出這個旗標     
            請參考：Orders.TradeTags
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._cumTax">
            <summary>
            累積交易稅
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._cumFees">
            <summary>
            累積手續費
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._nullTreasuries">
            <summary>
            Sentinel變數，用來處理空的部位
            ==> 如果只需要計算當日部位，就傳這個資料進去
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._appTreasuries">
            <summary>
            庫存資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._isSupportDetailPosition">
            <summary>
            是否支援明細帳務
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.LitePositions.Treasury._strategyTreasuries">
            <summary>
            策略別的庫存資料，目前無作用
            ------------------------------------------------------
            依策略拆帳時使用，需要有OrderGateway值及帳務系統配合
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.Treasuries">
            <summary>
            傳回所有的庫存資料
            Treasuries property : Read Only
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.NullTreasuries">
            <summary>
            空的庫存資料，用來配合PositionSource產生當日交易部位使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.StrategyTreasuries">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.IsSupportDetailPosition">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.Exchange">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.Code">
            <summary>Code property : Read Only</summary>
            <value>商品代碼</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.StrategyType">
            <summary>
            策略類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.StrategyID">
            <summary>
            策略代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.AccountInfo">
            <summary>
            交易帳戶
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.Alias">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.Account">
            <summary>Account property : Read Only</summary>
            <value>帳號</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.SubAccount">
            <summary>SubAccount property : Read Only</summary>
            <value>帳號/</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.Lots">
            <summary>Lots property : Read Only</summary>
            <value>口數</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.OnwayLots">
            <summary>
            在途數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.Price">
            <summary>Price property : Read Only</summary>
            <value>成本/均價</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.URPL">
            <summary>URPL property : Read Only</summary>
            <value>未實現損益(累算至前一個交易日)</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.NPL">
            <summary>NPL property : Read Only</summary>
            <value>淨損益(累算至前一交易日=RPL+Dividend+URPL)</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.TradeTag">
            <summary>
            交易旗標
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.CummulativeTax">
            <summary>
            累積交易稅
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.LitePositions.Treasury.CummulativeFees">
            <summary>
            累積手續費
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.Treasury.#ctor(CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.String)">
            <summary>Constructor</summary>
            <param name="acc">帳號</param>
            <param name="subAcc">子帳號</param>
            <param name="code">商品代碼</param>
            <param name="lots">單位數</param>
            <param name="price">均價</param>
            <param name="urpl">未實現損益</param>
            <param name="urplth">未實現損益(Mark To 理論價)</param>
            <param name="dividend">現金股利</param>
            <param name="cumdividend">累積現金股利</param>
            <param name="cumtax">累積交易稅</param>
            <param name="cumcomm">累積手續費</param>
            <param name="cumhandle">累積經手費</param>
            <param name="cumrpl">累積已實現損益</param>
            <param name="npl">淨損益(累計至前一個交易日)</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.Treasury.SetLots(System.Int32)">
            <summary>
            設定持有數量
            </summary>
            <param name="iLots"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.Treasury.SetOnwayLots(System.Int32)">
            <summary>
            設定在途數量
            </summary>
            <param name="iLots"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.Treasury.SetCost(System.Decimal)">
            <summary>
            設定成本
            </summary>
            <param name="price"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.Treasury.SetCummulativeTaxes(System.Decimal)">
            <summary>
            累責交易稅
            </summary>
            <param name="taxes"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.Treasury.SetCumulativeFess(System.Decimal)">
            <summary>
            設定累積的手續費
            </summary>
            <param name="fees"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.Treasury.AddTreasury(CapitalPipe.LiteTrading.LitePositions.Treasury)">
            <summary>
            加入庫存資料
            注意：這個Function應該只有在初始化的時侯被呼叫!!
            </summary>
            <param name="tr"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.Treasury.RemoveTreasuries(CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            移除庫存
            </summary>
            <param name="accInfo"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.Treasury.HasThisTreasury(System.String,System.String,System.String,System.String)">
            <summary>
            查詢是否有這筆部位資料
            </summary>
            <param name="exchange"></param>
            <param name="alias"></param>
            <param name="code"></param>
            <param name="tradeTag"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.Treasury.SetSupportDetailPosition(System.Boolean)">
            <summary>
            是否支援明細部位
            </summary>
            <param name="isSupport"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.LitePositions.Treasury.LoadFromXMLFile(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.MarketMaking.TargetOrderBook">
            <summary>
            User可以指定上下各掛N檔
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry">
            <summary>
            客戶端可以使用的模項目
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry._isActivated">
            <summary>
            是否已啟用？
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.PropertyChanged">
            <summary>
            屬性改變事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry._availableModules">
            <summary>
            所有可供使用的模組列表 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.ModuleFile">
            <summary>
            模組檔案
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.ModuleFileFullName">
            <summary>
            含路徑的模組檔案全名
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.ModuleGUID">
            <summary>
            模組的GUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.IsActivate">
            <summary>
            是否啟用？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.ModuleSourceType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.IsSystemModule">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.ActivateDeactivateString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.FileStatus">
            <summary>
            檔案狀態
            </summary>
        </member>
        <!-- 已忽略成員 "P:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.ModuleType" 中格式錯誤的 XML 註解 -->
        <member name="P:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.ModuleInfoInstance">
            <summary>
            ModuleInfo的實例
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.AvailableModules">
            <summary>
            所有可使用的模組集合
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.DefaultSystemModuleDefsFile">
            <summary>
            預設的系統模組來源
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.DefaultUserModuleDefsFile">
            <summary>
            預設的使用者模組來源
            ------------------------------------
            ==>潛在問題：如果不同的使用者？....(會看到任何有裝載過的模組)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.DefaultSettingFile">
            <summary>
            預設的設定檔案
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.FirePropertyChangedEvent(System.String)">
            <summary>
            派送屬性改變事件
            </summary>
            <param name="field">屬性欄位</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.LoadSystemModuleDefs">
            <summary>
            載入系統模組檔案
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.LoadUserModuleDefs">
            <summary>
            載入使用者模組檔案
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.LoadModuleDefsFile(System.String,System.Boolean)">
            <summary>
            載入可使用的模組定義檔案
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.AddCustomClientEntry(CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="clEntry"></param>
            <param name="pathType"></param>
            <param name="relPath"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.RemoveCustomClientEntry(CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry)">
            <summary>
            
            </summary>
            <param name="clEntry"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.IsModuleExist(System.String)">
            <summary>
            
            </summary>
            <param name="strGUID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.LoadModuleActivateStatus">
            <summary>
            載入各模鉏的啟用狀態
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.LoadTradeModuleActivateStatus">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.ActivateClientEntryTradeModuleInfo(CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry)">
            <summary>
            因為trade模組的啟動流程必須在quote/order之後，所以做這樣的處理
            </summary>
            <param name="clEntry"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.DeactivateClientEntryTradeModuleInfo(CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry)">
            <summary>
            
            </summary>
            <param name="clEntry"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.ActivateClientEntryModuleInfo(CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry)">
            <summary>
            
            </summary>
            <param name="clEntry"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.DeactivateClientEntryModuleInfo(CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry)">
            <summary>
            
            </summary>
            <param name="clEntry"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.ClientAvailableModuleEntry.SaveModuleActivateStatus">
            <summary>
            儲存各模組的啟用狀態
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Modules.DummyTradingModuleInfo">
            <summary>
            Dummy交易模組資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.DummyTradingModuleInfo.ModuleID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.DummyTradingModuleInfo.ModuleName">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.DummyTradingModuleInfo.#ctor(System.String,System.String,CapitalPipe.LiteTrading.Modules.ModuleStatus)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <param name="codeBase"></param>
            <param name="status"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.DummyTradingModuleInfo.SetModuleID(System.String)">
            <summary>
            
            </summary>
            <param name="moduleID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.DummyTradingModuleInfo.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.DummyTradingModuleInfo.Terminate">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Modules.IModuleConfig">
            <summary>
            配合nigiri所新增的interface
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.IModuleConfig.ToXMLConfigString">
            <summary>
            將參數設定轉成xml的字串
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.IModuleConfig.CloneConfig">
            <summary>
            複製參數設定物件
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.IModuleConfig.ParseXMLString(System.String)">
            <summary>
            解析參數設定資料
            </summary>
            <param name="strConfig"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Modules.ModuleEntry">
            <summary>
            用來表示某個模組的某個產生實例(instance)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleEntry.ModuleType">
            <summary>
            模組類型：Order, Quote, ...
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleEntry.ModuleID">
            <summary>
            該模組的GUID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleEntry.BaseFolder">
            <summary>
            模組Assembly的檔案位置(相對)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleEntry.ModuleFile">
            <summary>
            模組Assembly檔(含ModuleInfo定義的檔案)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleEntry.InstanceID">
            <summary>
            模組實例的代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleEntry.Setting">
            <summary>
            該實例的參數設定值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleEntry.IsPlugin">
            <summary>
            是否為Plugin模組？
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Modules.ModuleInfo">
            <summary>
            模組的基本資訊
            模組分為
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleInfo._fileName">
            <summary>
            實際載入的dll檔案位置
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleInfo._fileNameID">
            <summary>
            檔案名稱(由模組決定，與實際檔案無關)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleInfo._codeBase">
            <summary>
            保留欄位for registered assembly
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleInfo._source">
            <summary>
            來源別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ModuleInfo.ModuleID">
            <summary>
            傳回模組的GUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ModuleInfo.ModuleName">
            <summary>
            傳回模組的名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ModuleInfo.ModuleConfigObjectName">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ModuleInfo.Status">
            <summary>
            模組狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ModuleInfo.FileName">
            <summary>
            檔案名稱(完整路徑)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ModuleInfo.FileNameID">
            <summary>
            檔案名稱(由模組決定，與實際檔案無關)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ModuleInfo.CodeBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.ModuleInfo.Source">
            <summary>
            來源別
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Modules.ModuleStatus">
            <summary>
            模組狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleStatus.NotValidModule">
            <summary>
            非有效的模組
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleStatus.FileNotExist">
            <summary>
            檔案不存在
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleStatus.FailToLoadAssembly">
            <summary>
            載入失敗
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleStatus.UnknownError">
            <summary>
            未知錯誤
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Modules.ModuleStatus.Ready">
            <summary>
            就緒
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Modules.TradingModuleInfo">
            <summary>
            交易模組資訊物件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.TradingModuleInfo.Modules">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Modules.TradingModuleInfo.DefaultSettingFile">
            <summary>
            預設的設定檔位置
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.TradingModuleInfo.Initialize">
            <summary>
            子類別需要改寫，在這裡執行初始化工作
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.TradingModuleInfo.PostInitialize(System.String)">
            <summary>
            
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.TradingModuleInfo.Terminate">
            <summary>
            子類別需要改寫，在這裡執行結束釋放工作
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.TradingModuleInfo.CreateTradingModuleInfoFromFile(System.String)">
            <summary>
            產生模組
            </summary>
            <param name="fn"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.TradingModuleInfo.CreateTradingModuleInfoFromCodeBase(System.String,System.String)">
            <summary>
            2016-01-30 當輸出DummyModule時，將FileNameID填上exception的內容
            </summary>
            <param name="codeBase"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.TradingModuleInfo.GetTradingModule(System.String)">
            <summary>
            
            </summary>
            <param name="moduleGUID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.TradingModuleInfo.AddTradingModule(CapitalPipe.LiteTrading.Modules.TradingModuleInfo)">
            <summary>
            
            </summary>
            <param name="module"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.TradingModuleInfo.RemoveTradingModule(System.String)">
            <summary>
            
            </summary>
            <param name="moduleID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.TradingModuleInfo.ClearAllModules">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.TradingModuleInfo.LoadModules">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.TradingModuleInfo.LoadModules(System.String)">
            <summary>
            
            </summary>
            <param name="fn"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.TradingModuleInfo.SaveModules">
            <summary>
            儲存模組設定
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Modules.TradingModuleInfo.SaveModules(System.String)">
            <summary>
            
            </summary>
            <param name="fn"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.NotifyList`1">
            <summary>
            會通知Collection改變的List物件
            </summary>
            <remarks>
            一個類似ObservableCollection，在Collection改變時會發出事件的List物件
            </remarks>
            <typeparam name="T">Collection內的資料類型</typeparam>
        </member>
        <member name="E:CapitalPipe.LiteTrading.NotifyList`1.CollectionChanged">
            <summary>
            Collection改變事件
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.NotifyList`1.AddItem(`0)">
            <summary>
            增加一個元素物件
            </summary>
            <param name="item">物件</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.NotifyList`1.RemoveItem(`0)">
            <summary>
            移除一個元素物件
            </summary>
            <param name="item">物件</param>
            <returns>
            true:成功移除
            false:物件不存在或是移除失敗
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.NotifyList`1.FireCollectionChangedeEvent(System.Collections.Specialized.NotifyCollectionChangedAction,`0)">
            <summary>
            發佈Collection改變事件
            </summary>
            <param name="act"></param>
            <param name="item"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry">
            <summary>
            格式：名稱,價格,部位,時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry._isCommaSeperated">
            <summary>
            是否用逗號區隔
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry._isUnderScoreSeperated">
            <summary>
            是否用underscore區隔
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry._filename">
            <summary>
            檔案名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry._code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry._baseCommodity">
             <summary>
            基準商品
             </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry._aliasID">
            <summary>
            帳號代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry._accInfo">
            <summary>
            下單帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry._strategyID">
            <summary>
            策略代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry._positionQuantity">
            <summary>
            部位數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry._dataTime">
            <summary>
            資料時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry._strategyStatus">
            <summary>
            策略狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry._spliters">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.IsCommaSeperated">
            <summary>
            是否為逗號區隔？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.IsUnderscoreSeperated">
            <summary>
            是否用"_"區隔？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.Filename">
            <summary>
            檔案名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.StrategyID">
            <summary>
            策略代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.Code">
            <summary>
            下單商品代號 ==> friendly code
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.BaseCommodityCode">
            <summary>
            基準商品 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.AliasID">
            <summary>
            下單帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.AccountAlias">
            <summary>
            帳號別名
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.AccountStatus">
            <summary>
            帳號狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.DataTime">
            <summary>
            資料時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.PositionQuantity">
            <summary>
            部位數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.StrategyStatus">
            <summary>
            策略狀態
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.ParseData">
            <summary>
            20150727
            ※ 下單改由OrderMachineOrderEntry負責~~~
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.OnOrderEntryChanged(CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry,CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            
            </summary>
            <param name="oe"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.SetPositionQuantity(System.Int32)">
            <summary>
            
            </summary>
            <param name="qty"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.UpdateAccountInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.UpdateBaseCommodity">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.ToXMLNode">
            <summary>
            轉成xml節點
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileEntry.ParseFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            從xml節點解回
            </summary>
            <param name="xNode"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileMachine">
            <summary>
            格式：名稱,價格,部位,時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileMachine.DefaultSettingFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileMachine.Signals">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileMachine.InitializeDataReadingThread">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileMachine.DoReadDataThread">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileMachine.LoadFromFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OneStrategyPerFileMachine.SaveToFile">
            <summary>
            
            </summary>
        </member>
        <!-- 已忽略成員 "T:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry" 中格式錯誤的 XML 註解 -->
        <member name="T:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.ExecStatus">
            <summary>
            目前的執行狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.ExecStatus.WaitForActivating">
            <summary>
            等待啟動
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.ExecStatus.OrderActivated">
            <summary>
            委託已啟動，等待追價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.ExecStatus.Executed">
            <summary>
            委託已執行
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.ExecStatus.Error">
            <summary>
            執行錯誤!!
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.ExecStatus.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._useFixedPriceAtFirst">
            <summary>
            第一筆單使用指定價格
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._baseCmd">
            <summary>
            下單商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._accInfo">
            <summary>
            下單帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._ordType">
            <summary>
            下單方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._bsType">
            <summary>
            買賣別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._useFixedPrice">
            <summary>
            使用固定委託價送單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._fixedOrderPrice">
            <summary>
            委託價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._ticksOffset">
            <summary>
            限價調整Ticks
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._raisePriceSeconds">
            <summary>
            追價秒數
            ===>若達追價秒數委託仍未就緒？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._raisePriceUseMarketOrder">
            <summary>
            追價使用市價單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._orderVolume">
            <summary>
            委託數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._delaySeconds">
            <summary>
            延遲秒數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._activateTime">
            <summary>
            委託啟動時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._raisePriceTime">
            <summary>
            委託追價時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._execStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._strategyType">
            <summary>
            策略類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._strategyID">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._order">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._thread">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._createTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._statusMessage">
            <summary>
            執行狀態訊息
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._comment">
            <summary>
            註解
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._parentStrategy">
            <summary>
            擁有這個Order的strategy
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.PropertyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry._orders">
            <summary>
            
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.OnNewOrderMachineEntryGenerated">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.CreateTime">
            <summary>
            建立時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.ExecutionStatus">
            <summary>
            執行狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.StrategyType">
            <summary>
            策略類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.StrategyID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.StrategyOrder">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.OrderNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.DealQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.MatchedQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.BuySellType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.RemainQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.AverageMatchPrice">
            <summary>
            平均成交價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.OrderState">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.ActivateTime">
            <summary>
            委託啟動時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.RaisePriceTime">
            <summary>
            委託追價時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.StatusMessage">
            <summary>
            委託狀態訊息
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.Orders">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.Comment">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.#ctor(System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.Orders.OrderType,System.Boolean,System.Decimal,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase)">
            <summary>
            
            </summary>
            <param name="strategyID"></param>
            <param name="cmdInfo"></param>
            <param name="accInfo"></param>
            <param name="bs"></param>
            <param name="ordType"></param>
            <param name="orderVolume"></param>
            <param name="delaySeconds"></param>
            <param name="ticksOffset"></param>
            <param name="raisePriceSeconds"></param>
            <param name="raisePriceUseMarketOrder"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.#ctor(System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.Orders.OrderType,System.Decimal,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase)">
            <summary>
            Constructor ==>使用固定委託價送單
            </summary>
            <param name="strategyID"></param>
            <param name="cmdInfo"></param>
            <param name="accInfo"></param>
            <param name="bs"></param>
            <param name="ordType"></param>
            <param name="orderPrice"></param>
            <param name="orderVolume"></param>
            <param name="delaySeconds"></param>
            <param name="ticksOffset"></param>
            <param name="raisePriceSeconds"></param>
            <param name="raisePriceUseMarketOrder"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.InitSendOrder">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.RaisePrice">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.SetFixedOrderPrice(System.Decimal)">
            <summary>
            設定固定委託價格
            </summary>
            <param name="pri"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.Order_OnOrderChange(System.Object,CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.FirePropertyChangeEvent(System.String)">
            <summary>
            
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.AddOrderMachineOrderEntry(CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry)">
            <summary>
            
            </summary>
            <param name="oe"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.FireOrderMachineOrderEntryEvent(CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry)">
            <summary>
            
            </summary>
            <param name="oe"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.DoCheckOrdersThread">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry.CheckOrderEntries">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase">
            <summary>
            下單機的策略原型
            20151030
            ※ 新增持有倉位(CurrPos欄位)
            ※ 新增OnOrderEntryChanged的abstract method
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase._active">
            <summary>
            是否啟用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase._useSignalPrice">
            <summary>
            使用訊號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase._volumeMultiplier">
            <summary>
            委託量乘數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase._priceTickOffset">
            <summary>
            委託價使用Bid/Ask價調整tick數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase._delaySeconds">
            <summary>
            延遲秒數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase._reverseSignal">
            <summary>
            是否要將訊號反向
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase._raisePriceAfterSeconds">
            <summary>
            0==>不使用xx秒後追價
            (若市價單，此功能無作用)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase._orderType">
            <summary>
            使用的委託價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase._raisePriceUseMarketOrder">
            <summary>
            使用市價單追價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase._currentPosition">
            <summary>
            目前倉位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase._status">
            <summary>
            目前狀態
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.PropertyChanged">
            <summary>
            事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.XMLTag_DelaySeconds">
            <summary>
            遞延秒數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.XMLTag_RaisePriceAfterXSeconds">
            <summary>
            經過xx秒後送追價單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.XMLTag_RaisePriceUseMarketOrder">
            <summary>
            使用市價單追價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.XMLTag_TickOffset">
            <summary>
            限價單tick調整
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.XMLTag_UseSignalPrice">
            <summary>
            使用訊號價格
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.XMLTag_ReverseSignal">
            <summary>
            訊號反向
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.Active">
            <summary>
            是否啟用下單機？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.UseSignalPrice">
            <summary>
            是否使用訊號價格
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.VolumeMultiplier">
            <summary>
            委託量的乘數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.PriceTicksOffset">
            <summary>
            限價單tick調整數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.DelaySeconds">
            <summary>
            下單延遲秒數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.RaisePriceAfterXSeconds">
            <summary>
            經過xx秒後追價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.RaisePriceUseMarketOrder">
            <summary>
            使用市價單追價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.CurrentPosition">
            <summary>
            目前部位
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.OrderParameters">
            <summary>
            委託指令的參數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.SendOrderType">
            <summary>
            送單類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.Status">
            <summary>
            目前委託狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.ReverseSignal">
            <summary>
            是否將訊號反向
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.OnOrderEntryChanged(CapitalPipe.LiteTrading.OrderMachines.OrderMachineOrderEntry,CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            當下單物件發生變化時，會call這個function
            </summary>
            <param name="oe"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.FirePropertyChangedEvent(System.String)">
            <summary>
            發送狀態改變事件
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.SaveCommonSettings(System.Xml.Linq.XElement)">
            <summary>
            儲存共同的設定
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.OrderMatchineStrategyBase.ParseCommonSettings(System.Xml.Linq.XElement)">
            <summary>
            拆解共同的設定
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.OrderMachines.SignalReaderBase">
            <summary>
            訊號讀取物件的基礎類別
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.OrderMachines.SignalReaderBase.OnStrategyStatusReceived">
            <summary>
            策略狀態改變事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.SignalReaderBase.HeaderRecordLength">
            <summary>
            檔頭的長度
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.SignalReaderBase.DataRecordLength">
            <summary>
            每筆資料長度
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.SignalReaderBase.FirePropertyChangedEvent(System.String)">
            <summary>
            發送屬性改變事件
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.SignalReaderBase.FireStrategyStatusEvent(System.String,System.Int32,System.Int32,System.DateTime,System.Decimal,System.Int32)">
            <summary>
            
            </summary>
            <param name="strStrategy"></param>
            <param name="iSeq"></param>
            <param name="barNo"></param>
            <param name="dataTime"></param>
            <param name="decPrice"></param>
            <param name="posQty"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.OrderMachines.SocketReaderConnectionEventArgs">
            <summary>
            Socket連線事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.SocketReaderConnectionEventArgs._reason">
            <summary>
            理由/原因
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.SocketReaderConnectionEventArgs.Reason">
            <summary>
            理由
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.SocketReaderConnectionEventArgs.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="reason"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader">
            <summary>
            使用Socket連線來讀取訊號
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.LinkStatus">
            <summary>
            連線狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.LinkStatus.Disconnect">
            <summary>
            連線中斷
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.LinkStatus.Connecting">
            <summary>
            連線中
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.LinkStatus.Ready">
            <summary>
            連線就續
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader._receiveCount">
            <summary>
            訊號接收數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader._serverIP">
            <summary>
            連線Server的ip
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader._servicePort">
            <summary>
            連線server的port
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader._autoReconnect">
            <summary>
            是否自動連線？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader._sck">
            <summary>
            連線的socket
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader._lastDataReceive">
            <summary>
            最後資料接收時點
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader._status">
            <summary>
            目前的連線狀態
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.LinkStatusChanged">
            <summary>
            連線狀態改變
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.ServerIP">
            <summary>
            server的ip位址
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.ServerPort">
            <summary>
            server的port
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.ReceiveCount">
            <summary>
            接收數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.LastDataReceived">
            <summary>
            最後資料時間點
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.EndPointDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.Status">
            <summary>
            最後連線狀態
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.#ctor(System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.Connect">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.Disconnect">
            <summary>
            中斷連線
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.DoConnection">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.RequestSignals">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.DoReceive">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.ParseBuffer(System.Int32,System.Byte[])">
            <summary>
            分析緩衝區的資料
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.SocketSignalReader.FireLinkStatusEvent(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.OrderMachines.StrategyStatusEventArgs">
            <summary>
            策略狀態改變事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.StrategyStatusEventArgs.Sequence">
            <summary>
            系統序號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.StrategyStatusEventArgs.Strategy">
            <summary>
            策略代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.StrategyStatusEventArgs.DataTime">
            <summary>
            資料時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.StrategyStatusEventArgs.BarNo">
            <summary>
            k棒編號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.StrategyStatusEventArgs.Price">
            <summary>
            現價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.StrategyStatusEventArgs.Quantity">
            <summary>
            部位數量
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.OrderMachines.StrategyStatusEventHandler">
            <summary>
            策略狀態改變事件
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader._lastTryFetch">
            <summary>
            上次嘗試讀檔時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader._buffer">
            <summary>
            資料的buffer
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader._lastReadPosition">
            <summary>
            最後讀檔的位置
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader._straegyStatusDataFile">
            <summary>
            要讀取的outdata檔案
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader._readDataThread">
            <summary>
            讀資料的thread
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader._readerStatus">
            <summary>
            讀檔狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader.LastTryFetch">
            <summary>
            前次讀檔時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader.CurrentPosition">
            <summary>
            最後讀檔位置(bytes)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader.CurrentPositionInKB">
            <summary>
            最後讀檔位置(kb)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader.Status">
            <summary>
            讀檔狀態
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader.SetStrategyStatusDataFile(System.String)">
            <summary>
            設定outdata檔案
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader.ParseBuffer">
            <summary>
            分析緩衝區的資料
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader.DoReadDataJob">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader.SetLastFetchTime(System.DateTime)">
            <summary>
            前次讀取時間
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderMachines.TextSignalReader.SetReaderStatus(System.String)">
            <summary>
            設定reader的狀態
            </summary>
            <param name="strstatus"></param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.BracketExitStrategyTempalte._defaultTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.BracketExitStrategyTempalte.StopLossOrderStopType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.BracketExitStrategyTempalte.StopLossOrderPriceBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.BracketExitStrategyTempalte.StopLossTicksAdjustment">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.BracketExitStrategyTempalte.ProfitTakeOrderPriceBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.BracketExitStrategyTempalte.ProfitTakeTicksAdjustment">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.BracketExitStrategyTempalte.DefaultTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.BracketExitStrategyTempalte.ToXMLConfigString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.BracketExitStrategyTempalte.ToXMLNode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.BracketExitStrategyTempalte.ParseFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.BracketExitStrategyTempalte.CloneTemplate">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.OrderTemplates.BreakevenExitStrategyTemplate">
            <summary>
            使用break-even價出場的出場策略Template
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.BreakevenExitStrategyTemplate._defaultTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.BreakevenExitStrategyTemplate.StopLossOrderStopType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.BreakevenExitStrategyTemplate.StopLossTicksAdjustment">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.BreakevenExitStrategyTemplate.ActivateThreshold">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.BreakevenExitStrategyTemplate.DefaultTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.BreakevenExitStrategyTemplate.ParseFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.BreakevenExitStrategyTemplate.CloneTemplate">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings._ticksAdjust">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings._exchange">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings._contract">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings._code">
            <summary>
            對特定商品控管
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings._commodityType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings._defaultSetting">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings._settingsByContract">
            <summary>
            依契約類型控管
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings._settingsByCode">
            <summary>
            依特定商品控管
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings.TicksAdjust">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings.DefaultSetting">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings.DefaultSettingFile">
            <summary>
            預設的設定檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings.LoadSettings">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings.LoadSettings(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings.ToXMLNode(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings.ParseFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings.SaveSettings">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.ChasePriceSettings.SaveSettings(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategyOrderPriceBase">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting">
            <summary>
            進場策略設定
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting._entryType">
            <summary>
            策略類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.EntryType">
            <summary>
            進場類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.Entry1OrderType">
            <summary>
            進場方式
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.Entry1BSType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.Entry1PriceBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.Entry1TicksAdjust">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.Entry2OrderType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.Entry2BSType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.Entry2PriceBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.Entry2TicksAdjust">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.DefaultSettingFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.EntryRangeBreak">
            <summary>
            區間突破策略
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.EntryRangeConsolidation">
            <summary>
            區間盤整策略
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.EntryRanageBuy">
            <summary>
            區間買進策略
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.EntryRangeSell">
            <summary>
            區間賣出策略
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.#ctor(System.String,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.OrderTemplates.EntryStrategyOrderPriceBase,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.BSType,CapitalPipe.LiteTrading.OrderTemplates.EntryStrategyOrderPriceBase,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="entryType"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.SaveSettings">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.EntryStrategySetting.LoadSettings">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.OrderTemplates.ExitStrategyOrderPriceBase">
            <summary>
            出場策略的委託價基準
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.ExitStrategyOrderPriceBase.Bid">
            <summary>
            以Bid第一檔為基準
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.ExitStrategyOrderPriceBase.Ask">
            <summary>
            以Ask第一檔為基準
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.ExitStrategyOrderPriceBase.Last">
            <summary>
            以最後成交價為基準
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.ExitStrategyOrderPriceBase.Cost">
            <summary>
            以成本價為基準
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.ExitStrategyOrderPriceBase.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.ExitStrategyTemplateBase.GetOrderPrice(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Quotes.Quote,System.Boolean,System.Decimal,CapitalPipe.LiteTrading.OrderTemplates.ExitStrategyOrderPriceBase,System.Int32)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
            <param name="quote"></param>
            <param name="priceBase"></param>
            <param name="ticksAdj"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.ExitStrategyTemplateBase.GetOrderPriceDescription(System.Boolean,CapitalPipe.LiteTrading.OrderTemplates.ExitStrategyOrderPriceBase,System.Int32)">
            <summary>
            
            </summary>
            <param name="bUpTick"></param>
            <param name="priceBase"></param>
            <param name="ticksAdj"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.ExitStrategyTemplateBase.GetOrderPriceDescription(CapitalPipe.LiteTrading.OrderTemplates.ExitStrategyOrderPriceBase,System.Int32)">
            <summary>
            
            </summary>
            <param name="priceBase"></param>
            <param name="ticksAdj"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.ExitStrategyTemplateBase.SaveToFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.ExitStrategyTemplateBase.LoadFromFile">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.OrderTemplates.OrderDefaultTemplate">
            <summary>
            送單時的預設參數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.ProfitTakeExitStratetgyTemplate._defaultTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.ProfitTakeExitStratetgyTemplate.ProfitTakeOrderPriceBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.ProfitTakeExitStratetgyTemplate.ProfitTakeTicksAdjustment">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.ProfitTakeExitStratetgyTemplate.DefaultTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.ProfitTakeExitStratetgyTemplate.CloneTemplate">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.OrderTemplates.StopLossExitStrategyTemplate">
            <summary>
            以停損價方式出場的出場策略Template
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.OrderTemplates.StopLossExitStrategyTemplate._defaultTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.StopLossExitStrategyTemplate.StopLossOrderStopType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.StopLossExitStrategyTemplate.StopLossOrderPriceBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.StopLossExitStrategyTemplate.StopLossTicksAdjustment">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.OrderTemplates.StopLossExitStrategyTemplate.DefaultTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.OrderTemplates.StopLossExitStrategyTemplate.CloneTemplate">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.DummyOrderModuleInfo">
            <summary>
            Dummy ==> 顧名思義是拿來當幌子用的
                      當某個委託模組無法正確產生時，用這個物件來代替
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.DummyOrderModuleInfo._moduleID">
            <summary>
            讓程式代換用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.DummyOrderModuleInfo.IsProxyModule">
            <summary>
            是否為Proxy模組？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.DummyOrderModuleInfo.ModuleID">
            <summary>
            模組ID
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.DummyOrderModuleInfo.#ctor(System.String,System.String,CapitalPipe.LiteTrading.Modules.ModuleStatus)">
            <summary>
            Constructor
            </summary>
            <param name="fileName">檔案名稱</param>
            <param name="codeBase">codebase</param>
            <param name="status">狀態</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.DummyOrderModuleInfo.SetModuleID(System.String)">
            <summary>
            設定模組ID
            </summary>
            <param name="mID">模組ID</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.DummyOrderModuleInfo.CreateOrderManager(System.String)">
            <summary>
            創建委託管理員 ==> 自然是無法創建
            </summary>
            <param name="key"></param>
            <returns>只能回傳null了~~~哭哭</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.DummyOrderModuleInfo.GetInstanceLimit">
            <summary>
            取得實例數量(-1)
            </summary>
            <returns>-1</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.DummyOrderModuleInfo.GetPhysicalOrderManagerName">
            <summary>
            傳回委託管理員名稱
            </summary>
            <returns>傳回NA(--)字串</returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.ICustomOrderPacketProvider">
            <summary>
            提供自定packet的介面(for簽驗章使用)
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomOrderPacketProvider.CreateNewOrderPacketData(System.String,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType,CapitalPipe.LiteTrading.Orders.BSType,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.Int32@,System.String@)">
            <summary>
            新增一般委單(Pure abstract，子類型要改寫)
            </summary>
            <param name="code"></param>
            <param name="price"></param>
            <param name="qty"></param>
            <param name="ordType"></param>
            <param name="bstype"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="preference"></param>
            <param name="source"></param>
            <param name="result"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomOrderPacketProvider.CreateNewStopOrderPacketData(System.String,System.Decimal,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.BSType,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.Int32@,System.String@)">
            <summary>
            新增實體Stop單(Pure abstract，子類型要改寫)
            </summary>
            <param name="code">商品代碼</param>
            <param name="price">委託價(停損觸發時的limit價)</param>
            <param name="stpPrice">停損價</param>
            <param name="qty">委託量</param>
            <param name="ordType">委託類型，只能是StopLimit或是StopLoss</param>
            <param name="bstype">買賣別</param>
            <param name="strategyType">策略別</param>
            <param name="strategyID">策略代碼</param>
            <param name="accInfo">帳號</param>
            <param name="preference">委託條件</param>
            <param name="source">委託來源</param>
            <param name="result"></param>
            <param name="retMessage">回覆訊息</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomOrderPacketProvider.CreateNewComboOrderPacketData(System.String,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType,CapitalPipe.LiteTrading.Orders.BSType,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.Int32@,System.String@)">
            <summary>
            新增複式委單(Pure abstract，子類型要改寫)
            </summary>
            <param name="code"></param>
            <param name="price"></param>
            <param name="qty"></param>
            <param name="ordType"></param>
            <param name="bstype"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="preference"></param>
            <param name="ordSource"></param>
            <param name="result"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomOrderPacketProvider.CreateNewQuoteOrderPacketData(System.String,System.Decimal,System.Decimal,System.Int32,System.Int32,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,System.Int32@,System.String@)">
            <summary>
            新增報價委託單(Pure abstract，子類型要改寫)
            </summary>
            <param name="code"></param>
            <param name="bidPri"></param>
            <param name="askPri"></param>
            <param name="bidQty"></param>
            <param name="askQty"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="preference"></param>
            <param name="ordSource"></param>
            <param name="result"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomOrderPacketProvider.CreateDeleteOrderPacketData(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,System.Int32@,System.String@)">
            <summary>
            刪單(Pure abstract，子類別要改寫)
            20130822加上強制刪單flag
            </summary>
            <param name="pOrd">委託單</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomOrderPacketProvider.CreateDecreaseQtyPacketData(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,System.Int32,System.Int32@,System.String@)">
            <summary>
            減量(Pure abstract，子類型要改寫)
            </summary>
            <param name="pOrd"></param>
            <param name="qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomOrderPacketProvider.CreateDecreaseBidQtyPacketData(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder,System.Int32,System.Int32@,System.String@)">
            <summary>
            減報價單買量(Pure abstract，子類型要改寫)
            </summary>
            <param name="pOrd"></param>
            <param name="Qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomOrderPacketProvider.CreateDecreaseAskQtyPacketData(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder,System.Int32,System.Int32@,System.String@)">
            <summary>
            減報價單賣量(Pure abstract，子類型要改寫)
            </summary>
            <param name="pOrd"></param>
            <param name="Qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomOrderPacketProvider.CreateReplacePricePacketData(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,System.Decimal,System.Int32@,System.String@)">
            <summary>
            改價(Pure abstract，子類型要改寫)
            </summary>
            <param name="pOrd"></param>
            <param name="newPrice"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomOrderPacketProvider.CreateChangeOrderTypePacketData(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderPreference,System.Int32@,System.String@)">
            <summary>
            改委託類型，ex:限價==>市價(Pure abstract，子類別要改寫)
            </summary>
            <param name="pOrd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomPacketOrderManager.DeleteOrder(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,System.Boolean,System.String)">
            <summary>
            刪單(Pure abstract，子類別要改寫)
            20130822加上強制刪單flag
            </summary>
            <param name="pOrd">委託單</param>
            <param name="forceDelete">true:強迫刪單；false:一般刪單</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomPacketOrderManager.DecreaseQty(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,System.Int32,System.String)">
            <summary>
            減量(Pure abstract，子類型要改寫)
            </summary>
            <param name="pOrd"></param>
            <param name="qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomPacketOrderManager.DecreaseBidQty(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder,System.Int32,System.String)">
            <summary>
            減報價單買量(Pure abstract，子類型要改寫)
            </summary>
            <param name="pOrd"></param>
            <param name="Qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomPacketOrderManager.DecreaseAskQty(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder,System.Int32,System.String)">
            <summary>
            減報價單賣量(Pure abstract，子類型要改寫)
            </summary>
            <param name="pOrd"></param>
            <param name="Qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomPacketOrderManager.ReplacePrice(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,System.Decimal,System.String)">
            <summary>
            改價(Pure abstract，子類型要改寫)
            </summary>
            <param name="pOrd"></param>
            <param name="newPrice"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomPacketOrderManager.ChangeOrderType(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String)">
            <summary>
            改委託類型，ex:限價==>市價(Pure abstract，子類別要改寫)
            </summary>
            <param name="pOrd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomPacketOrderManager.NewOrder(System.String,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType,CapitalPipe.LiteTrading.Orders.BSType,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,CapitalPipe.LiteTrading.Orders.Order,System.String@,System.String)">
            <summary>
            新增一般委單(Pure abstract，子類型要改寫)
            </summary>
            <param name="code"></param>
            <param name="price"></param>
            <param name="qty"></param>
            <param name="ordType"></param>
            <param name="bstype"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="preference"></param>
            <param name="source"></param>
            <param name="owner"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomPacketOrderManager.NewStopOrder(System.String,System.Decimal,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.BSType,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,CapitalPipe.LiteTrading.Orders.Order,System.String@,System.String)">
            <summary>
            新增實體Stop單(Pure abstract，子類型要改寫)
            </summary>
            <param name="code">商品代碼</param>
            <param name="price">委託價(停損觸發時的limit價)</param>
            <param name="stpPrice">停損價</param>
            <param name="qty">委託量</param>
            <param name="ordType">委託類型，只能是StopLimit或是StopLoss</param>
            <param name="bstype">買賣別</param>
            <param name="strategyType">策略別</param>
            <param name="strategyID">策略代碼</param>
            <param name="accInfo">帳號</param>
            <param name="preference">委託條件</param>
            <param name="source">委託來源</param>
            <param name="owner"></param>
            <param name="retMessage">回覆訊息</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomPacketOrderManager.NewComboOrder(System.String,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType,CapitalPipe.LiteTrading.Orders.BSType,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,CapitalPipe.LiteTrading.Orders.Order,System.String@,System.String)">
            <summary>
            新增複式委單(Pure abstract，子類型要改寫)
            </summary>
            <param name="code"></param>
            <param name="price"></param>
            <param name="qty"></param>
            <param name="ordType"></param>
            <param name="bstype"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="preference"></param>
            <param name="ordSource"></param>
            <param name="owner"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ICustomPacketOrderManager.NewQuoteOrder(System.String,System.Decimal,System.Decimal,System.Int32,System.Int32,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,CapitalPipe.LiteTrading.Orders.Order,System.String@,System.String)">
            <summary>
            新增報價委託單(Pure abstract，子類型要改寫)
            </summary>
            <param name="code"></param>
            <param name="bidPri"></param>
            <param name="askPri"></param>
            <param name="bidQty"></param>
            <param name="askQty"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="preference"></param>
            <param name="ordSource"></param>
            <param name="owner"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseConstants">
            <summary>
            常數定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseConstants.OpenFlag">
            <summary>
            開倉
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseConstants.CloseFlag">
            <summary>
            平倉
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseConstants.CloseTodayFlag">
            <summary>
            平今
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseConstants.Auto">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.LogMessageHandler">
            <summary>
            LogMessage的EventHandler
            </summary>
            <param name="sender"></param>
            <param name="logMessage"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase">
            <summary>
            開平倉控制器
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase._isControllerReady">
            <summary>
            controller狀況是否ready
            </summary>
            <remarks>
            Controller Ready的條件如下：
            <list type="bullet">
            <item>所有前日部位都已收到</item>
            <item>所有的委託單都已收到</item>
            <item>所有的成交都已收到</item>
            </list>
            若controller還沒有ready，這時所有的自動倉都會變成開倉回傳
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase._isUsingAutoOpenClose">
            <summary>
            是否啟用自動開平倉？
            否 ==> 會回傳開倉
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase._longPositions">
            <summary>
            做多的部位，Key=InstrumentID + Exchange
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase._shortPositions">
            <summary>
            做空的部位，Key=InstrumentID + Exchange
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase._orderVolumes">
            <summary>
            Key ==> OrderID
            報價單的處理 ==> 先用QuoteOrder的OrderID
            然後收到BidOrderRef/AskOrderRef後，新增到這個裡面
            如果純粹是收到RtnOrder發現是derived from quote，若在_orderVolumes裡面沒有，就先不處理....
            缺點：如果別的系統也在送報價單，會有很小的一段時間差可能產生開平倉碼錯誤
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase._thresholdVolume">
            <summary>
            啟用的門檻值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase._controllerLock">
            <summary>
            用來做collection lock的物件
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.OnLogMessage">
            <summary>
            Log事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.IsControllerReady">
            <summary>
            controller是否就緒
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.IsUsingAutoOpenClose">
            <summary>
            是否使用自動開平倉
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.ThresholdVolume">
            <summary>
            取得/設定 門檻數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.AllOpenOffPositions">
            <summary>
            所有的ctp開平倉資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.LongPositions">
            <summary>
            多頭部位
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.ShortPositions">
            <summary>
            空頭部位
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.#ctor">
            <summary>
            
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.SetControllerReadyState(System.Boolean)">
            <summary>
            
            </summary>
            <param name="isReady"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.ResetControllerYDPositionInfo">
            <summary>
            清空部位
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.ClearControllerYDPositionInfo">
            <summary>
            清空部位
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.UpdatePositionInfo(System.String,System.String,System.String,CapitalPipe.LiteTrading.Orders.BSType,System.Int32)">
            <summary>
            更新開平部位
            </summary>
            <param name="code"></param>
            <param name="posInfo"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.GetOpenOffPosition(System.String,System.String,System.String,CapitalPipe.LiteTrading.Orders.BSType)">
            <summary>
            取得持倉資訊
            </summary>
            <param name="exchange"></param>
            <param name="instrumentID"></param>
            <param name="account"></param>
            <returns></returns>
        </member>
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.GetPositionNeededToBeUpdateByOpenOffFlag(System.String,System.String,System.String,System.String,CapitalPipe.LiteTrading.Orders.BSType)" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.GetOrderVolume(System.String)">
            <summary>
            
            </summary>
            <param name="orderID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.BookOrderVolume(System.String,System.String,System.String,CapitalPipe.LiteTrading.Orders.BSType,System.String,System.Int32)">
            <summary>
            要求Book一筆委託數量
            報價委託要特別處理以報價委託的OrderID + "QB", "QA"做為OrderID
            </summary>
            <param name="exchangeID"></param>
            <param name="instrumentID"></param>
            <param name="account"></param>
            <param name="bs"></param>
            <param name="orderID"></param>
            <param name="volume"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.BookOrderVolume(System.String,System.String,System.String,System.String,CapitalPipe.LiteTrading.Orders.BSType,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="openOff"></param>
            <param name="exchangeID"></param>
            <param name="instrumentID"></param>
            <param name="account"></param>
            <param name="bs"></param>
            <param name="orderID"></param>
            <param name="volume"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenCloseControllerBase.FireLogMessage(System.String)">
            <summary>
            發送log訊息
            </summary>
            <param name="logMessage"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition">
            <summary>
            用來做開平倉控制的部位資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition._isActive">
            <summary>
            是否使用自動開平
            </summary>
            <remarks>
            預設是true表示使用自動開平倉控制，若為false表示不做自動開平倉處理。在false情況下，如果是要求自動開平倉時，一律會回傳開倉。
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition._openVolume">
            <summary>
            開倉數量
            </summary>
            <remarks>
            開倉後就可以平了，所以這個數量再扣掉目前的反向平倉委託單剩量後就是剩下的可以反向平倉的數量。
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition._lockedVolume">
            <summary>
            目前鎖定數量
            </summary>
            <remarks>
            如果有需扣除的數量，可以使用這個欄位
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition._ydPosition">
            <summary>
            昨天的部位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition._closeVolume">
            <summary>
            今日平倉的部位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition._closeTodayVolume">
            <summary>
            今日平今的部位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition._currentOpenOrder">
            <summary>
            目前開倉中的委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition._currentCloseOrder">
            <summary>
            目前平倉中的委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition._currentCloseTodayOrder">
            <summary>
            目前平今中的委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition._instrumentID">
            <summary>
            商品編碼
            </summary>
            <remarks>
            商品在交易所的編碼or商品在xxx系統的編碼
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition._exchange">
            <summary>
            交易所代碼
            </summary>
            <remarks>
            該部位是哪個交易所，例如：CFFEX,SHFE,...
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition._account">
            <summary>
            是哪一個帳號的部位？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition._bsType">
            <summary>
            買賣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.IsActive">
            <summary>
            是否使用自動開平倉
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.InstrumentID">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.Account">
            <summary>
            帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.Exchange">
            <summary>
            交易所
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.PosiDirection">
            <summary>
            持倉方向
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.DirectionString">
            <summary>
            方向
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.OpenVolume">
            <summary>
            今日開倉
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.LockedVolume">
            <summary>
            目前鎖定的數量(for組合保證金)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.YdPosition">
            <summary>
            昨日持倉
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.CloseVolume">
            <summary>
            平倉量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.CloseTodayVolume">
            <summary>
            平今量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.CurrentOpenOrder">
            <summary>
            開倉委託數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.CurrentCloseOrder">
            <summary>
            平倉委託數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.CurrentCloseTodayOrder">
            <summary>
            平今委託數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.CanCloseToday">
            <summary>
            可平今
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.CanClose">
            <summary>
            可平
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.#ctor(System.String,System.String,System.String,CapitalPipe.LiteTrading.Orders.BSType)">
            <summary>
            建構式
            </summary>
            <param name="exchange"></param>
            <param name="instrumentID"></param>
            <param name="bs"></param>
            <param name="account"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OpenClosePosition.Reset">
            <summary>
            重置部位
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OrderVolumeInfo">
            <summary>
            自動開平 - 委託數量資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OrderVolumeInfo.OpenOffFlag">
            <summary>
            開平倉碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OrderVolumeInfo.VolumeTotalOriginal">
            <summary>
            原始委託量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OrderVolumeInfo.VolumeTotal">
            <summary>
            剩餘量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.OpenClose.OrderVolumeInfo.VolumeTraded">
            <summary>
            成交量
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder">
            <summary>
            ComboOrder：複式單
            ToDo : 目前只能處理二隻腳，要改成能處理3、4、5…隻腳
                   ==> 商品資料要改成能支援多隻腳
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder._leg1Cmd">
            <summary>
            第一隻腳
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder._leg2Cmd">
            <summary>
            第二隻腳
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder._leg1Trans">
            <summary>
            第一隻腳商品的成交
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder._leg2Trans">
            <summary>
            第二隻腳商品的成交
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder._leg1Summary">
            <summary>
            第一隻腳的成交摘要
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder._leg2Summary">
            <summary>
            第二隻腳的成交摘要
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder.OrderTypeNameCombo">
            <summary>
            委託類型：複式(Combo)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder.CodeLeg1">
            <summary>CodeLeg1 property : Read Only</summary>
            <value>複式商品第一隻腳的代碼</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder.CodeLeg2">
            <summary>CodeLeg2 property : Read Only</summary>
            <value>複式商品第二隻腳的代碼</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder.Leg1Summary">
            <summary>Leg1Summary property : Read Only</summary>
            <value>複式商品的第一隻腳的成交摘要資訊</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder.Leg2Summary">
            <summary>Leg2Summary property : Read Only</summary>
            <value>複式商品的第二隻腳成交摘要資訊</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder.OrderTypeName">
            <summary>
            委託類型名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder.Leg1Transactions">
            <summary>
            第一隻腳的成交
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder.Leg2Transactions">
            <summary>
            第二隻腳的成交
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder.OrderDescription">
            <summary>
            委託說明
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Int32,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager,System.String,CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            Constructor
            </summary>
            <param name="cmdInfo">複式商品資料</param>
            <param name="leg1Cmd">第一隻腳</param>
            <param name="leg2Cmd">第二隻腳</param>
            <param name="ordType">委託類型(限價/市價…)</param>
            <param name="bs">買賣別</param>
            <param name="price">委託價</param>
            <param name="qty">委託數量</param>
            <param name="strategyType">策略類型</param>
            <param name="strategyID">策略代碼</param>
            <param name="accInfo">帳號</param>
            <param name="session">交易時段</param>
            <param name="mgr">委託管理員</param>
            <param name="ordSource">委託來源</param>
            <param name="owner">擁有此筆委託的虛擬委託單</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder.AddTransaction(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            將一筆新的成交加入委託中，並更新委託狀態。此時會送出POrderEvent</summary>
            <param name="trans">成交資訊物件</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalComboOrder.AddTransaction(System.Collections.Generic.List{CapitalPipe.LiteTrading.Orders.Transaction},CapitalPipe.LiteTrading.Orders.TransSummary,CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            Static function : 用幫助處理加入成交資訊</summary>
            <param name="transList">存入成交資訊的ArrayList</param>
            <param name="summary">處理該筆委託的TransSummary</param>
            <param name="trans">成交資訊</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder">
            <summary>
            所有委託的原型，實做的dll在繼承這個類別(1.才能使用internal的東西，2.可以塞與實做相關的資訊在其中)
            量的意義：RemainQty ==> 只要送出去之後，就有值(even還沒收到回報)。
            委託價：如果是那種
            委託量：
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder._price">
            <summary>
            委託價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder._prePrice">
            <summary>
            改價前的原始委託價，如果改價失敗，要將價格改回這個價格
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder._oriPrice">
            <summary>
            原始委託價，市價單 = decimal.MinValue;
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder._avgMatchPrice">
            <summary>
            平均成交價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder._qty">
            <summary>
            委託量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder._qtyRemain">
            <summary>
            剩量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder._qtyDeal">
            <summary>
            成交量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder._qtyCancel">
            <summary>
            取消量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder._preference">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.OrderTypeNameGeneric">
            <summary>
            委託類型 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.OriginalPrice">
            <summary>
            原始委託價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.PrePRice">
            <summary>
            前一委託價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.Price">
            <summary>Price property : Read Only</summary>
            <value>委託價</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.Qty">
            <summary>Qty property : Read Only</summary>
            <value>委託數量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.CancelQty">
            <summary>CancelQty property : Read Only</summary>
            <value>刪除數量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.DealQty">
            <summary>DealQty property : Read Only</summary>
            <value>成交數量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.RemainQty">
            <summary>RemainQty property : Read Only</summary>
            <value>剩餘數量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.OrderTypeName">
            <summary>
            OrderTypeName property : Read Only
            </summary>
            <value>委託種類的名稱</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.AverageMatchPrice">
            <summary>
            平均成交價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.OrderDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.Preference">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager,System.String,CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            Constructor，這個constructor是為了給子類別繼承使用，一般實做可以不用繼承自這個
            這個constructor應該可以取消，以避免混淆
            </summary>
            <param name="mgr"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Int32,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager,System.String,CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            一般來說，實做PhysicalGenericOrder是繼承這個constructor
            </summary>
            <param name="cmdInfo"></param>
            <param name="ordType"></param>
            <param name="bs"></param>
            <param name="price"></param>
            <param name="qty"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="session"></param>
            <param name="mgr"></param>
            <param name="ordSource"></param>
            <param name="owner"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.SetPreference(CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            設定委託條件
            </summary>
            <param name="pref"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.AddTransaction(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>加入成交資訊</summary>
            <param name="trans">成交物件</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.AddTransactionImp(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            20160914新增這個function，方便日後改寫AddTransaction
            </summary>
            <param name="trans"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.DecreaseOrder(System.Int32)">
            <summary>減量</summary>
            <param name="qty">要減少的數量</param>
            <returns>True if OrderManager accept this instruction</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.ReplacePrice(System.Decimal)">
            <summary>
            改價
            </summary>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.SetOrderQuantity(System.Int32,System.Int32,System.Int32)">
            <summary>
            設定委託數量(剩餘/取消/成交)
            </summary>
            <param name="remQty"></param>
            <param name="cancelQty"></param>
            <param name="dealQty"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.SetOrderPrice(System.Decimal)">
            <summary>
            for改價單
            </summary>
            <param name="pri"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.SetPreOrderPrice(System.Decimal)">
            <summary>
            for改價單
            </summary>
            <param name="pri"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.SetOrderCanceld">
            <summary>
            方便快速設定委託狀態為取消的方法
            這個方法會直接將取消量加上剩餘量，將剩量設成0，且委託狀態設成已取消
            ==> 比較適用於新單或是IOC/FOK這類型若交易所不傳回報表示刪單的委託
            ==> 不是很懂的話，不要使用這個方法
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.SetNewOrderFailed">
            <summary>
            方便快速將新單的委託狀態為失敗的方法
            這個方法是直接將剩餘量/取消量都設成0，且將委託狀態設成失敗
            ==> 只適用於新單(pending/not relpy狀態的委託)         
            ==> 不是很懂的話，不要使用這個方法
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericOrder.UpdateOrderState(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderAction)">
            <summary>
            更新委託狀態
            </summary>
            <param name="actType"></param>
            <param name="isSuccess"></param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericStopOrder.OrderTypeNameStop">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericStopOrder.StopPrice">
            <summary>
            停損價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericStopOrder.OrderTypeName">
            <summary>
            委託類型名稱
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalGenericStopOrder.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Decimal,System.Int32,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager,System.String,CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            Constructor
            </summary>
            <param name="cmdInfo"></param>
            <param name="ordType"></param>
            <param name="bs"></param>
            <param name="price"></param>
            <param name="stpPrice"></param>
            <param name="qty"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="session"></param>
            <param name="ordCenter"></param>
            <param name="ordSource"></param>
            <param name="owner"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder">
            <summary>
            實體委託
            負責儲存交易所/券商主機/下單API使用的委託資訊
            必須與ConcreteOrderManager搭配使用
            此類別為抽象類別，委託量價並沒有在這個類別中定義，而是視需求在子類別中定義
            目前實體委託物件的Hierarchy如下：
            
                         PhysicalOrder
                              |
                              |          
                    +---------+----------+
                    |                     |
             PhysicalGenericOrder     PhysicalQuoteOrder                  
                    |
                    |
             PhysicalComboOrder
            
             所有的委託通常都有兩個基本的欄位：
             (1) Client Order ID / Order ID
                 這個欄位的用途是用來辦識收到的回報與送出的委託請求
                 大部份的委託主機連線系統的設計是採非同步方式處理，亦即送出下單電文後，
                 實際的回報是在另一條連線中傳回來。這會引發一個問題，若我們連續送出多
                 筆委託，那我們怎麼知道收到的回報跟我們送出去的委託的對照關係？
                 我們沒辦法假設回報會依我們送單的順序來回報，因為大部份的委託系統是採用
                 thread pool的model，通常交易主機與交易所的連線有許多條，交易主機會找尋
                 可用(閒置)的線路來送出委託，這會讓回報的順序不見得會依照我們送單的順序
                 回來。
                 為了解決這個問題，大部份的交易主機系統會設計一個Order ID的欄位，這個欄
                 位的運作方式通常可以分成兩類：
                 (a)使用者自行編碼：在送出委託指令(新單/刪單/改單)時，由使用者自行填入一
                    個編碼，交易主機在傳送回報會將這個資料帶回來
                 (b)由交易主機編碼：在送出委託指令(新單/刪單/改單)後，交易主機立刻傳回一
                    個編碼，之後的回報會帶出這個編碼  
             (2) Order Number
                 委託書號，這個欄位是交易指令成功送達交易主機後，由後檯主機給予的委託編號
                 要執行刪單/改單都必須在取得委託書號後才可以執行
             
             (實體)委託依照委託能否被操作或是委託狀態能否再發生變化，可以分成兩類型
             (1)Working Order:委託仍屬有效，可以針對此筆委託進行刪改或是此筆委託仍可能會產生
                成交
             (2)Finalized Order:委託已達最終狀態，生命週期已結束。通常是：刪單、完全成交或是
                委託錯誤、委託失敗
            
             實體委託實做注意事項：
             (1) IsFinalized屬性：委託是否處於最終狀態(已無法對此委託進行任何修改操作)
                 這個屬性的值務必要保持正確
             (2) 委託數量的填法：
                 一開始的時侯，Remain Quantity = Order Quantity，在收到任何回報前，不可將Remain Quantity填成0
             (3) Remain Quantity不含成交
                 但是要注意串接的對象在AfQty欄位是否有包括成交部份
            ---------------------------------------------------------------------------------
            20150602新增OrderChangedHandler事件，for by-pass gateway使用
            20150611新增Modifier欄位，for gateway使用(記錄送單者的ip)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._internalLock">
            <summary>
            For內部lock使用，避免出現lock(this)的寫法
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._lastModifiedClient">
            <summary>
            Client來源的owner
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._actResult">
            <summary>
            前次動作結果
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._cmdInfo">
            <summary>
            商品資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._orderNo">
            <summary>
            委託書號，每筆委託的Key = 書號+盤別+交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._orderID">
            <summary>
            委託ID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._session">
            <summary>
            盤別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._tradeTag">
            <summary>
            交易類別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._accInfo">
            <summary>
            帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._ordTime">
            <summary>
            委託時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._exOrdTime">
            <summary>
            交易所委託時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._chgTime">
            <summary>
            回報時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._snOrdTime">
            <summary>
            下指令給Portal/GW的時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._previousState">
            <summary>
            先前的委託狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._ordState">
             <summary>
            目前的委託狀態
             </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._bs">
            <summary>
            買賣別：報價單Q
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._orderType">
            <summary>
            委託類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._msg">
            <summary>
            委託訊息 ==> 後檯系統回傳的訊息會被填在這個欄位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._saleNo">
            <summary>
            營業員
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._strategyType">
            <summary>
            策略類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._strategyID">
            <summary>
            策略代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._serverOrderID">
            <summary>
            後檯系統對這筆單的編碼，注意：這個值不可靠，而且可能不會是Unique!!
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._isJammeds">
            <summary>
            是否卡單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._trans">
            <summary>
            成交資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._ordMgr">
            <summary>
            來源的委託管理員
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._orderSource">
            <summary>
            委託來源註記
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._owner">
            <summary>
            aggregate此筆委託的智慧委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder._orderHandler">
            <summary>
            要處理委託事件的物件，理論上應該都是Owner
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.OnPhysicalOrderChanged">
            <summary>
            實體委託狀態改變
            ==> 這個event僅供gateway/by-pass gateway使用，其他情形下不應該使用這個事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.OrderNo">
            <summary>
            (Read)：委託書號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.OrderID">
            <summary>
            OrderID property : Read Only
            </summary>
            <value>委託代碼 ==> 與Portal/GW溝通用</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.ServerOrderID">
            <summary>
            後檯系統對這筆單的編碼，注意：這個值不可靠，而且可能不會是Unique!!
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.Account">
            <summary>Account property : Read Only</summary>
            <value>帳號</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SubAccount">
            <summary>
            子帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.Session">
            <summary>
            Session property : Read Only
            </summary>
            <value>盤別</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.Exchange">
            <summary>Exchange property : Read Only</summary>
            <value>交易所代碼</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.Code">
            <summary>Code property : Read Only</summary>
            <value>商品代碼</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.ExchangeCode">
            <summary>
            交易所代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SaleNo">
            <summary>SaleNo property : Read Only</summary>
            <value>業業員代碼</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.ExternalAccount">
            <summary>ExternalAccount property : Read Only</summary>
            <value>外帳</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.StrategyType">
            <summary>
            策略類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.StrategyID">
            <summary>
            策略代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.State">
            <summary>
            委託狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.PreviousState">
            <summary>
            本次更新先前的委託狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.ActionResult">
            <summary>
            指令執行結果
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.Message">
            <summary>Message property : Read Only</summary>
            <value>委託訊息 ==>由Portal/GW帶回來的訊息</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.Type">
            <summary>
            委託類型
            OrderType property : Read Only
            0 : Market
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.OrderTime">
            <summary>
            委託時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.ChangeTime">
            <summary>
            委託異動時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SendOrderTime">
            <summary>
            送單時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.ExchangeReplyTime">
            <summary>
            交易所回覆時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.BS">
            <summary>
            買賣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.TransactionCount">
            <summary>
            成交的筆數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.OrderTypeName">
            <summary>
            委託種類的名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.PersonalID">
            <summary>
            身份證字號/統編
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.BranchID">
            <summary>
            分公司
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.Alias">
            <summary>
            帳號別名
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.AccountInfo">
            <summary>
            此筆單的相關帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.CommodityInfo">
            <summary>
            商品資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.Transactions">
            <summary>
            成交資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.OrderSource">
            <summary>
            委託來源
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.Owner">
            <summary>
            對應到的智慧委託
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.OrderChangeHandler">
            <summary>
            要處理這筆委託相關事件的handler
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.IsFinalized">
            <summary>
            是否為最終狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.OrderManagerID">
            <summary>
            2015-03-11新增
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.LastModifiedClient">
            <summary>
            最後修改這筆委託的來源
            ==> 配合台灣法規稽核增加的欄位
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.OrderDescription">
            <summary>
            委託的說明，for gateway使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.OpenClose">
            <summary>
            開平倉
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.TradeTag">
            <summary>
            交易類別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.Self">
            <summary>
            給Binding時用的!!
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.OrderManager">
            <summary>
            這筆單的實體委託管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager,System.String,CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            Constructor
            </summary>
            <param name="cmdInfo">商品摘要資訊</param>
            <param name="strategyType">策略類型</param>
            <param name="strategyID">策略代碼</param>
            <param name="accInfo">帳號資訊</param>
            <param name="ordCenter">委託中心</param>
            <param name="ordSource">委託來源</param>
            <param name="owner">此筆委委託所屬的智慧委託</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.BSType,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,System.String,CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager,System.String,CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            Constructor
            </summary>
            <param name="cmdInfo">商品摘要資訊</param>
            <param name="ordType">委託類型</param>
            <param name="bs">買賣別</param>
            <param name="strategyType">策略類型</param>
            <param name="strategyID">策略代碼</param>
            <param name="accInfo">帳號資訊</param>
            <param name="session">交易盤別</param>
            <param name="mgr">委託管理員</param>
            <param name="ordSource">委託來源</param>
            <param name="owner">此筆委委託所屬的智慧委託</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.GetTransaction(System.Int32)">
            <summary>取得描述成交資料的物件</summary>
            <param name="idx">第idx筆成交，下標從0開始</param>
            <returns>成交物件，若idx不是正確的索引，則回傳null</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.DeleteOrder(System.Boolean)">
            <summary>
            刪單
            20130822加上forceDelete flag
            </summary>
            <param name="forceDelete">true:強制刪單；false:一般刪單</param>
            <returns>True if OrderManager accept this instruction</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.AddTransaction(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            加入成交資料
            會根據委託類型來實做不同的加入成交邏輯
            一般委託/複式單/報價單 各類型的委託使用邏輯不盡相同
            </summary>
            <param name="tr">成交資料</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SetOrderState(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState)">
            <summary>
            設定委託狀態，之前的狀態會被保存到PreviousState中
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SetOrderCanceld">
            <summary>
            方便快速設定委託狀態為取消的方法
            這個方法會直接將取消量加上剩餘量，將剩量設成0，且委託狀態設成已取消
            ==> 比較適用於IOC/FOK這類型若交易所不傳回報表示刪單的委託
            ==> 不是很懂的話，不要使用這個方法
            ==> 這個方法在PhysicalOrder/PhysicalComboOrder/PhysicalQuoteOrder都有實做
                但是這個方法不會通知ConcreteOrderCenter來處理委託狀態改變
                必須自已手動呼叫InformHandleOrderChanged(null, false);
                原因：在neworder過程中的fail==>無法call InformHandleOrderChanged(null, false);
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SetNewOrderFailed">
            <summary>
            方便快速將新單的委託狀態為失敗的方法
            這個方法是直接將剩餘量/取消量都設成0，且將委託狀態設成失敗
            ==> 只適用於新單(pending/not relpy狀態的委託)         
            ==> 不是很懂的話，不要使用這個方法
            ==> 這個方法在PhysicalOrder/PhysicalComboOrder/PhysicalQuoteOrder都有實做
                但是這個方法不會通知ConcreteOrderCenter來處理委託狀態改變
                必須自已手動呼叫InformHandleOrderChanged(null, false);
                原因：在neworder過程中的fail==>無法call InformHandleOrderChanged(null, false);
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SetActionResult(CapitalPipe.LiteTrading.Orders.ActionResult)">
            <summary>
            設定指令執行結果
            </summary>
            <param name="res"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SetOrderID(System.String)">
            <summary>
            設定委託ID
            </summary>
            <param name="oid"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SetOrderNo(System.String)">
            <summary>
            設定委託書號
            </summary>
            <param name="ordNo"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SetSession(System.String)">
            <summary>
            設定session值
            </summary>
            <param name="strSession"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SetMessage(System.String)">
            <summary>
            設定委託訊息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SetOrderTime(System.DateTime)">
            <summary>
            原始委託時間
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SetExchangeReplyTime(System.DateTime)">
            <summary>
            交易所回覆時間
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SetChangeTime(System.DateTime)">
            <summary>
            異動時間
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SetSendOrdtime(System.DateTime)">
            <summary>
            下指令給Portal/GW的時間
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SetOrderSource(System.String)">
            <summary>
            設定委託來源
            </summary>
            <param name="ordSrc"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.InformHandleOrderChanged(CapitalPipe.LiteTrading.Orders.Transaction,System.Boolean)">
            <summary>
            通知Order處理委託或是請ConcreateOrderManager檢查是不是要產生委託
            2015-06-02加入傳導
            </summary>
            <param name="tr">成交資料</param>
            <param name="isMatch">是否有成交</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.PostUpdateOrderCommand">
            <summary>
            通知在concreteordercenter之後要更新，用來避免若刪單過程中直接打事件會造成連環效應的問題
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SetOwner(CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            設定此筆委託的Owner
            </summary>
            <param name="owner">此筆委託所屬的智慧委託</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.SetLastModifiedClient(System.String)">
            <summary>
            
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.OrderStateToDescription(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState)">
            <summary>
            委託狀態==>描述委託狀態的簡短文字資訊
            </summary>
            <param name="state">委託狀態</param>
            <returns>說明字串</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.IsFinalState(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState)">
            <summary>
            是否為結束狀態
            ==>若委託狀態為Canceled、Failure、Error、Filled，表示此筆委託
               無法再做任何修改
            </summary>
            <returns>true:結束狀態；false:可修改狀態</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.IsAmendingState(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState)">
            <summary>
            是否為改單中的狀態？
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder.IsNotRepliedState(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState)">
            <summary>
            
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderAction.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderAction.NewOrder">
            <summary>
            新單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderAction.Decrease">
            <summary>
            減量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderAction.ReplaceQuantity">
            <summary>
            改量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderAction.Cancel">
            <summary>
            取消
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderAction.ReplacePrice">
            <summary>
            改價
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager">
            <summary>
            實體委託管理中心，屬abstract
            注意：
                  ※  除了執行order routing的gateway(ConcreteOrderManager)程式之外任何client端程式都不應該使用到這個類別
                      相關功能應該由OrderManager執行代理
                  ※  掛載在gateway運作的PhysicalOrderManager應實做自log檔復原的能力
            To Do:
                OrderID的編碼，要再思考如何降低碰撞可能
                
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.ConnectionStatus">
            <summary>
            委託管理員狀態
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.OnAddOrderCallback">
            <summary>
            給OrderGateway用的Callback
            </summary>
            <param name="pord">實體委託單</param>
            <param name="ord">虛擬委託單</param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager._queuedCancelingOrds">
            <summary>
            暫存要被刪除的單子(刪單時若該筆委託還沒收到回報，即不知道委託書號，就會先被放進來，等收到回報書號再刪)
            處理方式：若DeleterOrder被呼叫時，委託單處於還沒收到回報無法刪單的狀態，可以call AddQueuedCanceling
                     將該筆委託加到這個hashset裡面
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager._allOrdersByID">
            <summary>
            使用委託ID的map
            第一層key ==> 交易所
            第二層key ==> 委託ID，注意：這裡的委託ID是PhysicalOrderManager自編的，與Order的OrderID沒有關係
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager._allOrdersByNo">
            <summary>
            使用委託書號的map
            第一層key ==> 交易所
            第二層key ==> 委託書號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager._noOrderTrans">
            <summary>
            成交比委託回報先回來的成交資料
            當在處理成交資料時，發現找不到對應的委託時，要將該筆成交放到這個list裡面
            發生時機：成交回報比委託回報早回來
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager._workingOrders">
            <summary>
            剩量不為零的委託快取，每個subclass在處理回報時，要注意去維護這個資料
            20161226改用Hashset加快速度
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager._orderManagerID">
            <summary>
            委託管理員的代碼，在同一個process裡面不得重複
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager._cidHeader">
            <summary>
            用來產生Client Order ID的變數，要注意不同機器上面Client Order ID可能會有碰撞問題
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager._ordSeq">
            <summary>
            委託序號，預設從1開始編號
            預設的orderid = header + _ordseq
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager._errOrdSeq">
            <summary>
            錯誤委託序號 ==> 用來填錯誤委託的委託書號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager._status">
            <summary>
            委託管理員的連線狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager._addOrderByNoCallback">
            <summary>
            新增委託書號時的callback
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager._addOrderByIDCallback">
            <summary>
            新增委託ID時的callback
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager._logData">
            <summary>
            Log資料，注意：這個資料目的僅是為了提供簡單的障礙排除資訊。如果有detail紀錄需求，應自行實做log機制。
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager._maxLogLength">
            <summary>
            Log資料長度上限
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.OnLogMessage">
            <summary>
            Log事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.NULL_EXCHANGE">
            <summary>
            Constants
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.ErrorMessage_ExchangeCodeError">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.OrderManagerID">
            <summary>
            委託中心代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.Status">
            <summary>
            委託中心的連線狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.SettingConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.WorkingOrders">
            <summary>
            所有的Working Orders
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.AllWorkingOrders">
            <summary>
            所有的Woring Orders ==> 所有的OrderManager
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.AllOrders">
            <summary>
            所有的實體委託 ==> 這個功能應該是for debug使用或是在gateway上使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.OrderCenterIDs">
            <summary>
            所有的OrderCenter代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.Logs">
            <summary>
            Log資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.DefaultOrderSeqHeaderFile">
            <summary>
            預設的OrderID Header設定檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.#ctor(System.String)">
            <summary>
            Constructor:改成Protected，所以PhysicalOrderManager不能被new出來，一定要呼叫getInstance()
            PhysicalOrderCenter具備自我註冊機制，當這個Constructor被呼叫時，_orderCenters物件會加入這筆資料
            </summary>
            <param name="key">委託管理員的key值(OrderManagerID)</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.InitOldOrderHeader">
            <summary>
            使用舊的方產生_cidHeader
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.CheckWorkingOrders(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            檢查該筆委託是否為working order
            若為working order，則加入_workingOrders
            </summary>
            <param name="ord">要被檢查的實體委託資料</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.AddPhysicalOrderByID(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            加某筆委託到PhysicalOrderManager的Dictionary(byID)中，僅給子類別使用
            若該筆委託未填寫OrderID，則不會做任何處理
            ==> 實做的子類別必須注意：要避免這個情形發生，以免在ID Map裡面有找不到的委託
            </summary>
            <param name="pOrd">要加入的委託</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.AddPhysicalOrderByIDForSpecialReason(System.String,System.String,CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            For特殊用途使用
            </summary>
            <param name="exchange"></param>
            <param name="orderID"></param>
            <param name="pOrd"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.RemovePhysicalOrderByID(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            
            </summary>
            <param name="pOrd"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.AddPhysicalOrderByNo(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            加某筆委託到PhysicalOrderManager的ArrayList(byID)中，僅給子類別使用
            這個function會call PopQueuedCanceling，進行刪單。實做的OrderManager要注意call這function時，委託單是否已經可以刪單？
            </summary>
            <param name="pOrd">
            要加入的委託，交易所欄位不得為空白
            </param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.AddPhysicalOrderByNoForSpecialReason(System.String,System.String,System.String,CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            
            </summary>
            <param name="pOrd"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.RemovePhysicalOrderByNo(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            
            </summary>
            <param name="pOrd"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetOrderByID(System.String,System.String)">
            <summary>
            利用Order ID來找到委託並回傳
            20170725加入wildcard的exchange
            </summary>
            <param name="exchange">交易所別</param>
            <param name="orderid">委託ID</param>
            <returns>
            委託資料：若有找到對應的委託資料
            null：若找不到資料時
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetOrderByNo(System.String,System.String,System.String)">
            <summary>
            利用Order No找到委託並回傳
            </summary>
            <param name="exchange">交易所別</param>
            <param name="session">盤別</param>
            <param name="orderNo">委託書號</param>
            <returns>
            委託資料：有找到資料時
            null：若找不到資料
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetAllOrdersByCode(System.String)">
            <summary>
            找到並回傳某個商品的所有委託</summary>
            <param name="code">商品代碼(嘉實代碼)</param>
            <returns>一個包含所有PhysicalOrder(含Combo及Quote)的Array</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetOrdersByCode(System.String)">
            <summary>
            找到並回傳某個商品的一般委託</summary>
            <param name="code">商品代碼</param>
            <returns>一個包含PhysicalOrder的Array</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetComdoOrdersByCode(System.String)">
            <summary>
            找到並回傳某個商品的複式委託</summary>
            <param name="code">商品代碼(複式商品碼)</param>
            <returns>一個包含PhysicalComboOrder的Array</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetQuoteOrdersByCode(System.String)">
            <summary>
            找到並回傳某個商品的報價委託</summary>
            <param name="code">商品代碼</param>
            <returns>一個包含PhysicalQuoteOrder的Array</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetAllOrdersByExchange(System.String)">
            <summary>
            取得某個交易所的所有委託</summary>
            <param name="exchange"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetOrdersByExchange(System.String)">
            <summary>
            取得某個交易所的所有一般委託</summary>
            <param name="exchange"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetComboOrdersByExchange(System.String)">
            <summary>
            取得某個交易所的所有複式委託</summary>
            <param name="exchange">交易所代碼</param>
            <returns>複式委託集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetQuoteOrdersByExchange(System.String)">
            <summary>
            取得某個交易所的所有報價委託</summary>
            <param name="exchange">交易所代碼</param>
            <returns>報價委託集合</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetAllOrders">
            <summary>
            取得所有委託</summary>
            <returns>一個包含目前所有的Array</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetOrders">
            <summary>
            取得所有一般委託</summary>
            <returns>一個包含目前所有一般委託的Array</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetComboOrders">
            <summary>
            取得所有複式委託</summary>
            <returns>一個包含目前所有複式委託的Array</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetQuoteOrders">
            <summary>
            取得所有報價委託</summary>
            <returns>一個包含目前所有報價委託的Array</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.AddQueuedCanceling(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            將該筆委託加入待取消的佇列
            (發生於發動刪單時，還未取得委託書號，無法刪單)
            </summary>
            <param name="ord"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.PopQueuedCanceling(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            自刪單佇列中取出一筆委託
            (同時自刪單佇列中清除該筆委託)
            </summary>
            <param name="ord"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.DeleteOrder(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,System.Boolean)">
            <summary>
            刪單(Pure abstract，子類別要改寫)
            20130822加上強制刪單flag
            </summary>
            <param name="pOrd">委託單</param>
            <param name="forceDelete">true:強迫刪單；false:一般刪單</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.DecreaseQty(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,System.Int32)">
            <summary>
            減量(Pure abstract，子類型要改寫)
            </summary>
            <param name="pOrd"></param>
            <param name="qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.DecreaseBidQty(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder,System.Int32)">
            <summary>
            減報價單買量(Pure abstract，子類型要改寫)
            </summary>
            <param name="pOrd"></param>
            <param name="Qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.DecreaseAskQty(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder,System.Int32)">
            <summary>
            減報價單賣量(Pure abstract，子類型要改寫)
            </summary>
            <param name="pOrd"></param>
            <param name="Qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.ReplacePrice(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,System.Decimal)">
            <summary>
            改價(Pure abstract，子類型要改寫)
            </summary>
            <param name="pOrd"></param>
            <param name="newPrice"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.ChangeOrderType(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            改委託類型，ex:限價==>市價(Pure abstract，子類別要改寫)
            </summary>
            <param name="pOrd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.NewOrder(System.String,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType,CapitalPipe.LiteTrading.Orders.BSType,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,CapitalPipe.LiteTrading.Orders.Order,System.String@)">
            <summary>
            新增一般委單(Pure abstract，子類型要改寫)
            </summary>
            <param name="code"></param>
            <param name="price"></param>
            <param name="qty"></param>
            <param name="ordType"></param>
            <param name="bstype"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="preference"></param>
            <param name="source"></param>
            <param name="owner"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.NewStopOrder(System.String,System.Decimal,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.BSType,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,CapitalPipe.LiteTrading.Orders.Order,System.String@)">
            <summary>
            新增實體Stop單(Pure abstract，子類型要改寫)
            </summary>
            <param name="code">商品代碼</param>
            <param name="price">委託價(停損觸發時的limit價)</param>
            <param name="stpPrice">停損價</param>
            <param name="qty">委託量</param>
            <param name="ordType">委託類型，只能是StopLimit或是StopLoss</param>
            <param name="bstype">買賣別</param>
            <param name="strategyType">策略別</param>
            <param name="strategyID">策略代碼</param>
            <param name="accInfo">帳號</param>
            <param name="preference">委託條件</param>
            <param name="source">委託來源</param>
            <param name="owner"></param>
            <param name="retMessage">回覆訊息</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.NewComboOrder(System.String,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType,CapitalPipe.LiteTrading.Orders.BSType,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,CapitalPipe.LiteTrading.Orders.Order,System.String@)">
            <summary>
            新增複式委單(Pure abstract，子類型要改寫)
            </summary>
            <param name="code"></param>
            <param name="price"></param>
            <param name="qty"></param>
            <param name="ordType"></param>
            <param name="bstype"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="preference"></param>
            <param name="ordSource"></param>
            <param name="owner"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.NewQuoteOrder(System.String,System.Decimal,System.Decimal,System.Int32,System.Int32,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,CapitalPipe.LiteTrading.Orders.Order,System.String@)">
            <summary>
            新增報價委託單(Pure abstract，子類型要改寫)
            </summary>
            <param name="code"></param>
            <param name="bidPri"></param>
            <param name="askPri"></param>
            <param name="bidQty"></param>
            <param name="askQty"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="preference"></param>
            <param name="ordSource"></param>
            <param name="owner"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.HandleOrderData(CapitalPipe.LiteTrading.Orders.QueuedOrderData)">
            <summary>
            處理回報(Pure abstract，子類型要改寫)
            改寫必須注意的事項：一定要call OrderManager的CheckPhysicalOrder
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.Initialize">
            <summary>
            初始化(optional)，在程式初始化時執行，執行時間在contruct之後，在connet之前
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.Connect">
            <summary>
            主機連線(optional)
            Base的實做是個trivial(do nothing)，繼承的類別應視需要實做這個函數
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.Disconnect">
            <summary>
            自主機登出(optional)
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.LoadOrdersFromFile(System.String)">
            <summary>
            自cache檔案載入委託資料
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.LoadTransactionsFromFile(System.String)">
            <summary>
            自cache檔案載入成交資料
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetFreeCustomerID">
            <summary>
            取得可用的Order ID
            這個函數每次被呼叫都會增加_ordSeq
            </summary>
            <returns>
            一組尚未被使用的OrderID
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.GetFreeErrorOrderNo">
            <summary>
            對錯誤的委託(無書號)進行編號
            </summary>
            <returns
            ></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.MatchNoOrderTransactions(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            將比委託回報早回來的成交資料加給後來才收到回報的委託
            </summary>
            <param name="ord">委託</param>
            <returns>true有更新，flase沒有更新</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsPhysicalOrderManagerExist(System.String)">
            <summary>
            委託中心是否存在？
            </summary>
            <param name="key">委託中心的代碼</param>
            <returns>
            true:
            false:
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.RemovePhysicalOrderManager(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.AddNoOrerTransaction(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            
            </summary>
            <param name="tr"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.AddLogMessage(System.String)">
            <summary>
            加入log訊息
            程式會自動補上時間，故訊息不用加上時間註記
            </summary>
            <param name="msg">log的訊息</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportDecreaseQuantity(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            是否支援減量(子類別一定要改寫)，2016/12/32會取消，改用有AccountInfo參數的版本
            </summary>
            <param name="cmd">要查詢是否支援的商品項目</param>
            <returns>true:支援；false:不支援</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportDecreaseQuantity(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            是否支援減量(子類別一定要改寫)
            </summary>
            <param name="cmd">要查詢是否支援的商品項目</param>
            <returns>true:支援；false:不支援</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportReplacePrice(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            是否支援改價(子類別一定要改寫)
            </summary>
            <param name="cmd">要查詢是否支援的商品項目</param>
            <returns>true:支援；false:不支援</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportReplacePrice(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            是否支援改價(子類別一定要改寫)
            </summary>
            <param name="cmd">要查詢是否支援的商品項目</param>
            <returns>true:支援；false:不支援</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportChangeLimitToMarket(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            是否支援改變委託類型(由limit ==> market)
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportChangeLimitToMarket(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            是否支援改變委託類型(由limit ==> market)
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportStopOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.StopOrderType)">
            <summary>
            是否支援觸價單(子類別一定要改寫)
            </summary>
            <param name="cmd">要查詢是否支援的商品項目</param>
            <returns>true:支援；false:不支援</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportStopOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.StopOrderType,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            是否支援觸價單(子類別一定要改寫)
            </summary>
            <param name="cmd">要查詢是否支援的商品項目</param>
            <returns>true:支援；false:不支援</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportOCOOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            是否支援OCO委託(子類別一定要改寫)
            </summary>
            <param name="cmd">要查詢是否支援的商品項目</param>
            <returns>true:支援；false:不支援</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportOCOOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            是否支援OCO委託(子類別一定要改寫)
            </summary>
            <param name="cmd">要查詢是否支援的商品項目</param>
            <returns>true:支援；false:不支援</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportOSOOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            是否支援OSO委託(子類別一定要改寫)
            </summary>
            <param name="cmd">要查詢是否支援的商品項目</param>
            <returns>true:支援；false:不支援</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportOSOOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            是否支援OSO委託(子類別一定要改寫)
            </summary>
            <param name="cmd">要查詢是否支援的商品項目</param>
            <returns>true:支援；false:不支援</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportRangeMarketOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            是否支援一定範圍市價？
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportRangeMarketOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            是否支援一定範圍市價？
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportMarketOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            是否支援市價單？
            若不支援 ==> GenericOrder可以做合成市價
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.IsSupportMarketOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            是否支援市價單？
            若不支援 ==> GenericOrder可以做合成市價
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.ApplyOrderManagerSetting(System.String)">
            <summary>
            套用設定(子類別一定要改寫)
            (儲存設定由各個OrderManager負責)
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.InitializeAllPhysicalOrderManagers">
            <summary>
            呼叫所有的PhysicalOrderCenter進行初始化
            在程式啟動時呼叫，只執行一次
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.ConnectAllPhysicalOrderManagers">
            <summary>
            連線所有的委託中心
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.DisconnectAllPhysicalOrderCenters">
            <summary>
            中止所有委託中心的連線
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.SetAddByOrderIDCallback(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.OnAddOrderCallback)">
            <summary>
            設定“新增委託(by委託ID)”的callback
            主要是提供ordergateway在收到委託ID後可以建立order mapping的callback
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.SetAddByOrderNoCallback(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.OnAddOrderCallback)">
            <summary>
            設定“新增委託(by書號)”的callback
            主要是提供ordergateway在收到委託書號後可以建立order mapping的callback
            </summary>
            <param name="callback"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting">
            <summary>
            委託中心的設定檔
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.Key">
            <summary>
            委託模組Key值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.Source">
            <summary>
            模組來源 
                一般模組 ==> N
                若不是一般模組，則不做載入/儲存
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.ModuleID">
            <summary>
            委託模組
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.InstanceStatus">
            <summary>
            實例狀態說明字串
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.ModuleName">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.ModuleFileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.ModuleInfo">
            <summary>
            實體委託模組資訊物件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.OrderManager">
            <summary>
            委託中心
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.Instances">
            <summary>
            所有的委託中心設定物件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.DefaultSettingFile">
            <summary>
             預設的設定檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.#ctor(System.String,System.String,CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo,CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="key">委託中心Key值</param>
            <param name="moduleID">委託模組ID</param>
            <param name="moduleInfo">委託模組資訊物件</param>
            <param name="orderManager">委託中心</param>
            <param name="instanceStatus">委託中心狀態</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.ParseOrderMgrsSettingFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            自XML節點Parse資料
            </summary>
            <param name="node">XML節點資料</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.LoadFromFile">
            <summary>
            自檔案載入
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.SaveToFile">
            <summary>
            存檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.AddInstance(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting)">
            <summary>
            新增委託中心設定物件
            </summary>
            <param name="instance">委託中心設定物件</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.RemoveInstance(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting)">
            <summary>
            移除委託中心設定物件
            </summary>
            <param name="instance">委託中心設定物件</param>
            <returns>true</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.ClearAllInstances">
            <summary>
            清空所有實例
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.HasKey(System.String)">
            <summary>
            是否已經有這個Key值的委託中心設定？
            </summary>
            <param name="key">key值，亦即委託中心的代碼</param>
            <returns>
            true:該key值已存在
            false:該key值不存在
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.GetInstanceModuleInfo(System.String)">
            <summary>
            取得某個委託中心設定檔的委託模組資訊物件
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManagerSetting.GetInstanceCountOfModule(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo)">
            <summary>
            取得某個實體委託模組的委託中心設定數量(=委託中心數量)
            </summary>
            <param name="mInfo"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo">
            <summary>
            實體委託模組的設定資訊
            (實際上是扮演factory的角色)
            每個實體委託的模組都含有一個PhysicalOrderModuleInfo的子類別，在動
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo._modulesByFile">
            <summary>
            Key值：檔案名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo._modules">
            <summary>
            Key值：模組ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.IsProxyModule">
            <summary>
            是否為proxy模組
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.ModuleName">
            <summary>
            模組名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.Modules">
            <summary>
            所有的實體委託模組資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.DefaultSettingFile">
            <summary>
            預設的設定檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.GetPhysicalOrderManagerName">
            <summary>
            模組名稱
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.GetInstanceLimit">
            <summary>
            取得委託中心實例的數量上限
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.CreateOrderManager(System.String)">
            <summary>
            factory方法，用來產生PhysicalOrderManager
            </summary>
            <param name="key">委託中心代碼</param>
            <returns>
            成功：委託中心物件
            失敗：null
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.TestModule(System.String)">
            <summary>
            測試該模組檔案(assembly)是否為委託模組
            ==> 若為委託模組，則應該會有一個PhysicalOrderModuleInfo的子類別
            </summary>
            <param name="fn">指定的assembly檔案</param>
            <returns>
            ModuleStatus.Ready : 有含PhysicalOrderModuleInfo的子類別(是委託模組)
            ModuleStatus.FileNotExist : 指定檔案不存在
            ModuleStatus.NotValidModule : 找不到PhysicalOrderModule的子類別(非委託模組)
            ModuleStatus.UnknownError : 未知錯誤
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.CreatePhysicalOrderModuleInfoFromFile(System.String)">
            <summary>
            由檔案產生委託模組資訊物件
            </summary>
            <param name="fn">assembly檔案</param>
            <returns>
            若能成功建立委託模組資訊物件，會回傳該物件
            若無法建立，則會回傳DummyOrderModuleInfo，錯誤內容請參見Status欄位
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.CreatePhysicalOrderModuleInfoFromCodeBase(System.String,System.String)">
            <summary>
            由CodeBase產生委託模組資訊物件(目前這個功能不正常，請勿使用)
            </summary>
            <param name="codeBase"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.AddPhysicalOrderModuleInfo(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo)">
            <summary>
            加入委託模組資訊
            </summary>
            <param name="module">委託模組資訊</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.RemovePhysicalOderModuleInfo(System.String)">
            <summary>
            移除委託模組資訊
            </summary>
            <param name="moduleID">委託模組資訊</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.GetPhysicalOrderModuleInfo(System.String)">
            <summary>
            由模組ID取得委託模組資訊物件
            </summary>
            <param name="moduleID">模組ID</param>
            <returns>
            該模組ID存在：對應到該ID的委託模組資訊
            該模組ID不存在：null
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.LoadModules">
            <summary>
            載入預設的設定檔內的所有委託模組資訊
            這個方法僅會將產生各委託中心所需要用到的實體委託模組載入
            實際產生委託中心是在PhysicalOrderCenterSetting中處理
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.LoadModules(System.String)">
            <summary>
            載入指定的設定檔內的所有委託模組資訊
            這個方法僅會將產生各委託中心所需要用到的實體委託模組載入
            實際產生委託中心是在PhysicalOrderCenterSetting中處理
            </summary>
            <param name="fn">指定的設定檔</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.SaveModules">
            <summary>
            儲存委託資訊狀態進入預設的設定檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.SaveModules(System.String)">
            <summary>
             儲存委託資訊狀態進入指定的設定檔
            </summary>
            <param name="fn">指定的設定檔</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderModuleInfo.CelarAllModules">
            <summary>
            清空所有模組
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState">
            <summary>
            委託狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.Undefined">
            <summary>
            未知狀態 不應該有任何委託的狀態是這個值
            Sentinel變數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.Pending">
            <summary>
            委託管理員尚未送出委託，這個狀態應該只能存續在很短的時間(要小於0.0001s)
            實做背景送單時會使用到
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.NotReply">
            <summary>
            尚未回應 委託已送出，尚待回報
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.Ready">
            <summary>
            委託成功 委託ok
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.Filled">
            <summary>
            完全成交 (剩量==0，且取消量==0)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.PartialFilled">
            <summary>
            部份成交且委託已取消 (取消量=0，且尚未完全成交)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.Canceled">
            <summary>
            委託取消 (剩量==0，且取消量!=0)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.Canceling">
            <summary>
            刪單中
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.ReplacingQuantity">
            <summary>
            改量中
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.ReplacingPrice">
            <summary>
            改價中
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.Failure">
            <summary>
            委託失敗 (被後檯或交易所踢回來的委託)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.Error">
            <summary>
            委託錯誤 (還沒送單過程就發生錯誤的委託)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.QuedCanceling">
            <summary>
            刪單佇列中
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.NewOrderAcked">
            <summary>
            委託Gateway確認收到新單請求
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.ReplacingAcked">
            <summary>
            委託Gateway確認收到改單請求
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderState.CancelAcked">
            <summary>
            委託Gateway確認收到刪單請求
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderWrapper">
            <summary>
            處理實體委託事件的wrapper，通常是一個order(智慧委託)
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderWrapper.HandlePhysicalOrderChanged(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,CapitalPipe.LiteTrading.Orders.Transaction,System.Boolean)">
            <summary>
            處理實體委託改變事件
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderWrapper.RecoverPhysicalOrder(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder)">
            <summary>
            處理實體委託recover(for recover使用)
            </summary>
            <param name="ord"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderChangeHandler">
            <summary>
            2015-06-02新增
            定義一個PhysicalOrderChange的event handler，以便實做by pass的gateway
            </summary>
            <param name="order">發生改變的order</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder">
            <summary>
            雙邊報價單
            與一般單不同，買賣雙邊都必須掛單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder._bidAvgPrice">
            <summary>
            買進成交Summary
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder._askAvgPrice">
            <summary>
            賣出成交Summary
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.OrderTypeNameQuote">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.BidPrice">
            <summary>BidPrice property : Read Only</summary>
            <value>買進委託價</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.AskPrice">
            <summary>AskPrice property : Read Only</summary>
            <value>賣出委託價</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.BidQty">
            <summary>BidQty property : Read Only</summary>
            <value>買進數量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.AskQty">
            <summary>AskQty property : Read Only</summary>
            <value>賣出數量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.RemainBidQty">
            <summary>RemainBidQty property : Read Only</summary>
            <value>剩餘買量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.RemainAskQty">
            <summary>RemainAskQty property : Read Only</summary>
            <value>剩餘賣量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.CancelBidQty">
            <summary>CancelBidQty property : Read Only</summary>
            <value>買進取消量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.CancelAskQty">
            <summary>CancelAskQty property : Read Only</summary>
            <value>賣出取消量</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.DealBidQty">
            <summary>
            買進成交
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.DealAskQty">
             <summary>
            賣出成交
             </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.OrderTypeName">
            <summary>
            委託類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.OrderDescription">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Decimal,System.Decimal,System.Int32,System.Int32,System.String,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager,System.String,CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            Constructor
            </summary>
            <param name="mgr"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.SetBidQuantityInfo(System.Int32,System.Int32,System.Int32)">
            <summary>
            設定報價單買進量資訊
            </summary>
            <param name="bidRemain">買進剩餘</param>
            <param name="bidMatch">買進成交</param>
            <param name="bidCancel">買進取消</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.SetAskQuantityInfo(System.Int32,System.Int32,System.Int32)">
            <summary>
            設定報價單賣出量資訊
            </summary>
            <param name="askRemain">賣出剩餘</param>
            <param name="askMatch">賣出成交</param>
            <param name="askCancel">賣出取消</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.AddTransaction(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>將成交資訊加入報價單中</summary>
            <param name="trans">成交資訊</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.AddQuoteOrderTransactionImp(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            20160914新增這個function，方便日後改寫AddTransaction
            </summary>
            <param name="trans"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.DecreaseBidQty(System.Int32)">
            <summary>減少買進數量</summary>
            <param name="qty">減少數量</param>
            <returns>True if OrderManager accept this instruction</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.DecreaseAskQty(System.Int32)">
            <summary>減少賣出數量</summary>
            <param name="qty">減少數量</param>
            <returns>True if OrderManager accept this instruction</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.SetOrderCanceld">
            <summary>
            方便快速設定委託狀態的函數
            這個函數會直接將取消量加上剩餘量，將剩量設成0，且委託狀態設成已取消
            ==> 比較適用於新單或是IOC/FOK這類型若交易所不傳回報表示刪單的委託
            ==> 不是很懂的話，不要使用這個函數        
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.SetNewOrderFailed">
            <summary>
            方便快速將新單的委託狀態為失敗的方法
            這個方法是直接將剩餘量/取消量都設成0，且將委託狀態設成失敗
            ==> 只適用於新單(pending/not relpy狀態的委託)         
            ==> 不是很懂的話，不要使用這個方法
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.UpdateOrderState(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderAction)">
            <summary>
            更新委託狀態
            </summary>
            <param name="actType"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager">
            <summary>
            方便實做Proxy委託管理員的委託管理員prototype
            主要是有override一些proxy委託管理員不用實做的method
            ----------------------------------------------------------------
            若繼承ProxyOrderManager，則僅需實做以下介面：
            1. ApplyOrderManagerSetting
            2. CreateOrderPreference
            3. 
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.DecreaseAskQty(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder,System.Int32)">
            <summary>
            
            </summary>
            <param name="pOrd"></param>
            <param name="Qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.DecreaseBidQty(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalQuoteOrder,System.Int32)">
            <summary>
            
            </summary>
            <param name="pOrd"></param>
            <param name="Qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.DecreaseQty(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,System.Int32)">
            <summary>
            
            </summary>
            <param name="pOrd"></param>
            <param name="qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.DeleteOrder(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,System.Boolean)">
            <summary>
            
            </summary>
            <param name="pOrd"></param>
            <param name="forceDelete"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.HandleOrderData(CapitalPipe.LiteTrading.Orders.QueuedOrderData)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.NewComboOrder(System.String,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType,CapitalPipe.LiteTrading.Orders.BSType,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,CapitalPipe.LiteTrading.Orders.Order,System.String@)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="price"></param>
            <param name="qty"></param>
            <param name="ordType"></param>
            <param name="bstype"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="preference"></param>
            <param name="ordSource"></param>
            <param name="owner"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.NewOrder(System.String,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType,CapitalPipe.LiteTrading.Orders.BSType,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,CapitalPipe.LiteTrading.Orders.Order,System.String@)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="price"></param>
            <param name="qty"></param>
            <param name="ordType"></param>
            <param name="bstype"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="preference"></param>
            <param name="source"></param>
            <param name="owner"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.NewQuoteOrder(System.String,System.Decimal,System.Decimal,System.Int32,System.Int32,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,CapitalPipe.LiteTrading.Orders.Order,System.String@)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="bidPri"></param>
            <param name="askPri"></param>
            <param name="bidQty"></param>
            <param name="askQty"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="preference"></param>
            <param name="ordSource"></param>
            <param name="owner"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.NewStopOrder(System.String,System.Decimal,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.BSType,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.OrderPreference,System.String,CapitalPipe.LiteTrading.Orders.Order,System.String@)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="price"></param>
            <param name="stpPrice"></param>
            <param name="qty"></param>
            <param name="ordType"></param>
            <param name="bstype"></param>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
            <param name="accInfo"></param>
            <param name="preference"></param>
            <param name="source"></param>
            <param name="owner"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.ReplacePrice(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,System.Decimal)">
            <summary>
            
            </summary>
            <param name="pOrd"></param>
            <param name="newPrice"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.ChangeOrderType(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrder,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderPreference)">
            <summary>
            
            </summary>
            <param name="pOrd"></param>
            <param name="newType"></param>
            <param name="newPrefence"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.IsSupportDecreaseQuantity(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.IsSupportOCOOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.IsSupportOSOOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.IsSupportReplacePrice(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.IsSupportStopOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.StopOrderType)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <param name="stpType"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.IsSupportChangeLimitToMarket(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.IsSupportMarketOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.IsSupportRangeMarketOrder(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PhysicalOrders.ProxyOrderManager.SetOrderManagerStatus(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.ConnectionStatus)">
            <summary>
            
            </summary>
            <param name="ss"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.PropertyChangedObjectBase">
            <summary>
            有實做PropertyChanged的一個基礎類別
            </summary>
            <remarks>
            為了少打一些字而建立的基礎類別，如果有需要發送PropetyChanged事件的物件，想少打點字可以直接繼承這個類別。
            </remarks>
        </member>
        <member name="E:CapitalPipe.LiteTrading.PropertyChangedObjectBase.PropertyChanged">
            <summary>
            屬性值改變事件
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PropertyChangedObjectBase.FirePropertyChangedEvent(System.Object,System.String)">
            <summary>
            發送PropertyChanged事件
            </summary>
            <param name="sender">產生事件的物件</param>
            <param name="field">產生事件的屬性名稱</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.PropertyChangedObjectBase.FirePropertyChangedEvent(System.String)">
            <summary>
            發送PropertyChanged事件
            </summary>
            <param name="field">產生事件的屬性名稱</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.DummyQuoteModuleInfo">
            <summary>
            只是當QuoteModule無法載入時，用來存放錯誤資訊用的moduleInfo
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.DummyQuoteModuleInfo.ModuleID">
            <summary>
            模組ID
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.DummyQuoteModuleInfo.#ctor(System.String,System.String,CapitalPipe.LiteTrading.Modules.ModuleStatus)">
            <summary>
            Constructor
            </summary>
            <param name="fileName"></param>
            <param name="codeBase"></param>
            <param name="status"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.DummyQuoteModuleInfo.SetModuleID(System.String)">
            <summary>
            
            </summary>
            <param name="moduleID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.DummyQuoteModuleInfo.CreateQuoteAdaptor(System.String)">
            <summary>
            
            </summary>
            <param name="strID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.DummyQuoteModuleInfo.GetInstanceLimit">
            <summary>
            Instance的上限
            </summary>
            <returns>-1(無上限)</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.DummyQuoteModuleInfo.GetQuoteModuleName">
            <summary>
            模組名稱
            </summary>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.InquiryEntry">
            <summary>
            詢價紀錄
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.InquiryEntry._sysID">
            <summary>
            系統碼，for大陸的詢價新增
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.InquiryEntry._code">
            <summary>
            詢價商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.InquiryEntry._dtOccur">
            <summary>
            詢價時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.InquiryEntry._duration">
            <summary>
            詢價有效期間(秒數)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.InquiryEntry.RequestSysID">
            <summary>
            詢價ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.InquiryEntry.TimeOfInquiry">
            <summary>
            詢價發生時間點
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.InquiryEntry.Duration">
            <summary>
            詢價有效期間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.InquiryEntry.Code">
            <summary>
            詢價商品
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.InquiryEntry.#ctor(System.String,System.String,System.DateTime,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="sysID">詢價的系統編號</param>
            <param name="code">詢價商品的Code</param>
            <param name="dtOccur">詢價產生時點</param>
            <param name="duration">詢價持續時間</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.InquiryEventArgs">
            <summary>
            詢價事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.InquiryEventArgs.InquiryData">
            <summary>
            詢價資料
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.InquiryEventArgs.#ctor(CapitalPipe.LiteTrading.Quotes.InquiryEntry)">
            <summary>
            Constructor
            </summary>
            <param name="qData"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.InquiryEventHandler">
            <summary>
            處理詢價事件的Handler
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.KBar">
            <summary>
            K棒資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.KBar.IntTime">
            <summary>
            取得整數表示的時間，比TS的Time多2位數
            TS的0945會變成094500
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.KBar.IntTimeTSFormat">
            <summary>
            取得整數表示的時間，比照TS的格式
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.KBar.IntDateTSFormat">
            <summary>
            取得整數表示的日期，比照TS的格式
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.KBar.BarNo">
            <summary>
            取得/設定 Bar編號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.KBar.DataTime">
            <summary>
            取得/設定 資料時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.KBar.OpenPrice">
            <summary>
            取得/設定 開盤價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.KBar.HighPrice">
            <summary>
            取得/設定 最高價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.KBar.LowPrice">
            <summary>
            取得/設定 最低價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.KBar.ClosePrice">
            <summary>
            取得/設定 收盤價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.KBar.Volume">
            <summary>
            取得/設定 成交量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.KBar.Amount">
            <summary>
            取得/設定 成交值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.KBar.HasData">
            <summary>
            是否有資料
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.KBar.ToString">
            <summary>
            ToString顯示K線資料
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.KBar.InitData">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.KBar.#ctor(System.Int32,System.DateTime,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int64,System.Decimal)">
            <summary>
            Constructor
            </summary>
            <param name="barNo">Bar編號</param>
            <param name="dt">時間</param>
            <param name="op">開盤價</param>
            <param name="hp">最高價</param>
            <param name="lp">最低價</param>
            <param name="cp">收盤價</param>
            <param name="vol">成交量</param>
            <param name="amt">成交值</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.KBar.Clone">
            <summary>
            複制k棒
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.KBar.GetDataString">
            <summary>
            取得資料內容
            </summary>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.MarketDataStatus">
            <summary>
            市場狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.MarketDataStatus.Normal">
            <summary>
            正常可交易
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.MarketDataStatus.PreOpen">
            <summary>
            盤前試撮
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.MarketDataStatus.PreClose">
            <summary>
            收盤集合競價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.MarketDataStatus.BeforeMarketOpen">
            <summary>
            開盤前(尚未開市)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.MarketDataStatus.Closed">
            <summary>
            已收盤
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.MarketDataStatus.AfterHour">
            <summary>
            盤後交易
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.MarketDataStatus.Suspend">
            <summary>
            暫停交易
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.MarketDataStatus.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.QueuedQuotedData">
            <summary>
            for行情thread使用
            收到行情資料時，先轉成QueuedQuoteData，然後在行情的Thread裡面更新報價資料
            使用QuoteManager.DefaultManager.AddQueuedQuoteData()方法
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QueuedQuotedData.DataType">
            <summary>
            系統預先定義的事件類型請參考QuoteManager的常數定義部份
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.Quote">
            <summary>
            Quote介面：用來取得行情資訊所用介面
            重要：若資料為decimal形式，值為decimal.MinValue表示無資料
            取得Quote：
                string code = "2330.TWSE";
                Quote q = QuoteManager.DefaultManager.GetQuote(code);
            取得價格資訊：
            decimal openPrice = q.Open; //開盤價
            decimal highPrice = q.High; //最高價
            decimal bidP2 = q.BidPrice(1); //bid價第二檔
            decimal askQ4 = q.AskQty(3); //ask數量第三檔
            監控報價事件：
            q.OnQuoteEvent += myHandler;
            報價事件內容會透過QuoteEventArgs傳遞
            可以透過QuoteEventArgs的Quote屬性得知是哪一個報價物件產生的事件，並由EventType屬性得知事件類型
            ---------------------------------
            2015-02-26
            新增CommodityInfo欄位以便IValueConverter使用
            ------------------------------------------------
            2016-07-15
            新增UserText欄位
            ------------------------------------------------
            2016-12-22
            ※ 新增OpenInterests欄位
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Quotes.Quote.OnQuoteEvent">
            <summary>
            行情更新事件
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Quotes.Quote.OnInquiryEvent">
            <summary>
            詢價事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.CommodityInfo">
            <summary>
            商品資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.Flag">
            <summary>
            自訂旗標
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.Initialized">
            <summary>
            是否已初始化？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.Code">
            <summary>
            商品代碼(系統碼)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.IsFraction">
            <summary>
            是否為分數報價？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.Divisor">
            <summary>
            除數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.High">
            <summary>
            最高價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.Low">
            <summary>
            最低價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.Open">
            <summary>
            開盤價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.Last">
            <summary>
            最後成交價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.RefPrice">
            <summary>
            參考價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.NominalPrice">
            <summary>
            名目價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.SettlePrice">
            <summary>
            結算價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.PreClosePrice">
            <summary>
            前日收盤價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.PreSettlePrice">
            <summary>
            前日結算價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.UpLimit">
            <summary>
            漲停價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.DnLimit">
            <summary>
            跌停價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.MatchTime">
            <summary>
            成交時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.UpdateTime">
            <summary>
            資料更新時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.MatchQty">
            <summary>
            成交數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.TotalQty">
            <summary>
            成交總量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.OpenInterests">
            <summary>
            未平倉量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.TotalAmount">
            <summary>
            成交總值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.TotalBuyCount">
            <summary>
            總委買筆數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.TotalBuyQty">
            <summary>
            總委買張數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.TotalSellCount">
            <summary>
            總委賣筆數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.TotalSellQty">
            <summary>
            總委賣張數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.InferBuyPrice">
            <summary>
            衍生買價==>由價差單推導出的隱含買價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.InferBuyQty">
            <summary>
            衍生買量==>由價差單推導出的隱含買量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.InferSellPrice">
            <summary>
            衍生賣價==>由價差單推導出的隱含賣價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.InferSellQty">
            <summary>
            衍生賣量==>由價差單推導出的隱含賣量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.OrderBookSize">
            <summary>TickSize property : Read Only</summary>
            <value>上下?檔</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.CalPrice">
            <summary>
            計算使用的價格 : Read Only
            若有成交價，回傳成交價。無成交價，回傳參考價。
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.ChangePoints">
            <summary>
            漲跌點數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.ChangeRate">
            <summary>
            漲跌幅：Read Only
            以CalPrice與RefPrice計算，無成交時會是0.0m
            當無法計算漲跌幅時(CalPrice有誤)，會回傳decimal.MinValue
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.LastBidPrice">
            <summary>
            前次買進價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.LastAskPrice">
            <summary>
            前次賣出價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.LatestTicks">
            <summary>
            最近xx筆Tick資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.LastInquiry">
            <summary>
            最後詢價時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.Tag">
            <summary>
            夾帶參數，給有需要的user使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.MaxDigit">
            <summary>
            最多的小數位數
            ==>For報價server使用，0表示1，1表示10，2表示100…依此類推
               如果是-1，報價server必須自行計算multiplier
               如果報價單位是以幾十億計算，int會不夠用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.UserText">
            <summary>
            使用者自定義字串
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.ExchangeStatus">
            <summary>
            交易所狀態 盤前  盤中 暫停...
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.Self">
            <summary>
            For Binding~~
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.Quote.BidPrice(System.Int32)">
            <summary>
            委託買進價格
            </summary>
            <param name="idx">Bid第idx檔的價，起始下標為0。注意：當idx>=OrderBookCount時會throw Exception</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.Quote.BidQty(System.Int32)">
            <summary>
            委託買進數量
            </summary>
            <param name="idx">Bid第idx檔的量，起始下標為0。注意：當idx>=OrderBookCount時會throw Exception</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.Quote.AskPrice(System.Int32)">
            <summary>
            委託賣出價格
            </summary>
            <param name="idx">Ask ?? 檔的價，起始下標為0。注意：當idx>=OrderBookCount時會throw Exception</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.Quote.AskQty(System.Int32)">
            <summary>
            委託賣出數量
            </summary>
            <param name="idx">Ask ?? 檔的量，起始下標為0。注意：當idx>=OrderBookCount時會throw Exception</param>
            <returns></returns>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.BATick">
            <summary>
            本次價格成交在Bid/Ask哪邊？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.Quote.UPDTick">
            <summary>
            本次價格Tick跳動方向
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.Quote.BidPriceAdjusted(System.Int32)">
            <summary>
            調整後買進價格
            邏輯：
            (1)若有原始資料==>使用原始資料
            (2)若無原始資料==>使用比idx小的最高檔位資料
               ex:idx=3(第四檔),無資料，則使用第三檔資料
                  若第三檔亦無資料，往前推使用第二檔，直到第一檔為止
            (3)若第一檔也無資料
               (a)賣出第一檔也無資料，使用最後成交價或是參考價
               (b)賣出第一檔 == 跌停價，使用跌停價
               (c)使用參考價
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.Quote.AskPriceAdjusted(System.Int32)">
            <summary>
            調整後賣出價格
            邏輯：
            (1)若有原始資料==>使用原始資料
            (2)若無原始資料==>使用比idx小的最高檔位資料
               ex:idx=3(第四檔),無資料，則使用第三檔資料
                  若第三檔亦無資料，往前推使用第二檔，直到第一檔為止
            (3)若第一檔也無資料
               (a)買進第一檔也無資料，使用最後成交價或是參考價
               (b)買進第一檔 == 漲停價，使用漲停價
               (c)使用參考價
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.Quote.BidQtyAdjusted(System.Int32)">
            <summary>
            調整後買進數量
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.Quote.AskQtyAdjusted(System.Int32)">
            <summary>
            調整後賣出數量
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.Quote.FireQuoteEvent(CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            發送行情事件
            (在implement此一method時，accessor應為internal、private或是protected)
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.Quote.FireInquiryEvent(CapitalPipe.LiteTrading.Quotes.InquiryEventArgs)">
            <summary>
            發送詢價事件
            (在implement此一method時，accessor應為internal、private或是protected)
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor">
            <summary>
            行情介接器
            所有行情的串接，皆是從繼承這個類別開始。
            這個類別定義了串接行情的必要介面
            
            2016-05-21
            ※ 新增ExecuteCommand及GetQuoteAdaptorDetailStatus兩個方法
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.ConnectionStatus">
            <summary>
            連線狀態常數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.ConnectionStatus.ConnectionFail">
            <summary>
            連線失敗
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.ConnectionStatus.Disconnect">
            <summary>
            連線中斷
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.ConnectionStatus.Connected">
            <summary>
            已連線
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.ConnectionStatus.Connecting">
            <summary>
            連線中
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.ConnectionStatus.Problems">
            <summary>
            異常問題 ==> 通常為連線狀態不確定時(例如：很久沒收到資料)
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.DoEditQuoteAdaptorDelegate">
            <summary>
            修改行情模組設定的Delegate
            </summary>
            <param name="adaptor">行情介接器</param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor._instanceID">
            <summary>
            報價模組的instance代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor._quotes">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor._snpaShotStorage">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor._logData">
            <summary>
            Log資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor._maxLogLength">
            <summary>
            
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.OnLogMessage">
            <summary>
            Log事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.QuoteAdaptorName">
            <summary>
            介接器名稱(abstract，必須在子類別中實做)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.InstanceID">
            <summary>
            實例代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.Status">
            <summary>
            連線狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.Storage">
            <summary>
            報價資訊快取的storage
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.Logs">
            <summary>
            log資料
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.GetQuote(System.String)">
            <summary>
            取得Quote
            </summary>
            <param name="code">系統代碼</param>
            <returns>
            找得到資料，回傳Quote物件
            找不到資料，嘗試create一個quote物件。無法create，則回傳null
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.AddLogMessage(System.String)">
            <summary>
            加入log訊息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.Connect">
            <summary>
            請求連線(abstract，必須在子類別中實做)
            </summary>
            <returns>true:成功；false:失敗</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.Disconnect">
            <summary>
            中止連線(virtual,如無需特別處理，不需改寫)
            </summary>
            <returns>true:成功；false:失敗</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.Initialize">
            <summary>
            程式初始化，在載入報價模組後會call這個function一次(virtual,如無需特別處理，不需改寫)
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.Terminate">
            <summary>
            結束模組，在程式結束後後會call這個function一次(virtual,如無需特別處理，不需改寫)
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.CreateQuote(System.String)">
            <summary>
            建立Quote物件(abstract，必須在子類別中實做)
            </summary>
            <param name="code">系統代碼</param>
            <returns>若無法建立報價物件，則回傳null</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.CanSubscribeQuote(System.String)">
            <summary>
            是否能訂閱這個商品？(abstract，必須在子類別中實做)
            </summary>
            <param name="code">系統代碼</param>
            <returns>true:可以訂閱這個商品；false:不能訂閱這個商品</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.HandleQuoteData(CapitalPipe.LiteTrading.Quotes.QueuedQuotedData)">
            <summary>
            處理報價資料(abstract，必須在子類別中實做)
            </summary>
            <param name="data">在佇列中的報價資料</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.ApplyQuoteAdaptorSetting(System.String)">
            <summary>
            套用設定值(abstract，必須在子類別中實做)
            </summary>
            <param name="config">設定值</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.GetDiagnosticInfo">
            <summary>
            取得系統output訊息(virtual,如無需特別處理，不需改寫)
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.ExecuteCommand(System.String,System.String)">
            <summary>
            執行各項管理指令(For遠端管理使用)
            </summary>
            <param name="commandID"></param>
            <param name="paramenter"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.GetQuoteAdaptorDetailStatus">
            <summary>
            取得委託管理員的狀態(For遠端管理使用)
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.GetQuoteAdaptorEditor(System.String)">
            <summary>
            編輯報價模組
            </summary>
            <param name="moduleID">模組ID</param>
            <returns>報價模組編輯器</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.AddQuoteAdaptorEditor(System.String,CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.DoEditQuoteAdaptorDelegate)">
            <summary>
            新增報價模組編輯器
            </summary>
            <param name="moduleID">模組ID</param>
            <param name="editor">報價模組設定編輯器</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.RemoveQuoteAdaptorEditor(System.String)">
            <summary>
            移除報價模組編輯器
            </summary>
            <param name="moduleID">模組ID</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting">
            <summary>
            行情介接器設定資料
            一個行情介接器設定資料表彰系統建立的一個行情介接器
            行情介接器的建立由行情模組資訊物件負責，每個行情模組資訊物件可以建立一個或是多個
            行情介接器物件。例如：艾揚的行情可以提供外期及國內證期權的資料，我們可以使用一個
            行情介接器接收外期資料，而使用另一個行情介接器接收國內證期權資料，兩個模組同樣是
            來自於艾揚的行情模組(使用艾揚的行情模組資訊物件建立)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.Key">
            <summary>
            委託模組Key值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.Source">
            <summary>
            模組來源 
                一般模組 ==> N
                若不是一般模組，則不做載入/儲存
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.ModuleID">
            <summary>
            委託模組檔案
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.ModuleInfo">
            <summary>
            行情模組資訊物件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.QuoteAdaptorInstance">
            <summary>
            行情模組實例
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.InstanceStatus">
            <summary>
            實例狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.Instances">
            <summary>
            所有的實行模組實例
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.DefaultSettingFile">
            <summary>
             預設的設定檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.#ctor(System.String,System.String,CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo,CapitalPipe.LiteTrading.Quotes.QuoteAdaptor,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="key">報價模組Key值</param>
            <param name="moduleID">報價模組ID</param>
            <param name="moduleInfo">報價模組資訊物件</param>
            <param name="module">報價模組</param>
            <param name="source">來源別</param>
            <param name="instanceStatus"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.ParseOrderMgrsSettingFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            自XML節點Parse資料
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.LoadFromFile">
            <summary>
            自檔案載入
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.SaveToFile">
            <summary>
            存檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.AddInstance(CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting)">
            <summary>
            加入行情模組設定物件
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.RemoveInstance(CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting)">
            <summary>
            移除行情介接器實例
            </summary>
            <param name="instance">行情介接器實例</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.ClearAllInstances">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.HasKey(System.String)">
            <summary>
            是否有某個key值的設定檔資料？
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting.GetInstanceCountOfModule(CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo)">
            <summary>
            取得某個QuoteModuleInfo的數量
            </summary>
            <param name="mInfo">模組資訊物件</param>
            <returns>數量</returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.QuoteEventArgs">
            <summary>
            行情事件發送時的參數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteEventArgs.Quote">
            <summary>
            產生此事件的Quote物件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteEventArgs.EventType">
            <summary>
            事件類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteEventArgs.TickData">
            <summary>
            True:此筆有成交；False:此筆沒有成交
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteEventArgs.ReferencInfoUpdateFlag">
            <summary>
            參考價資訊是否有更新的Flag
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteEventArgs.OrderBookUpdateFlag">
            <summary>
            委託簿是否更新的Flag
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteEventArgs.OHLCUpdateFlag">
            <summary>
            開高低收是否更新的flag
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteEventArgs.MatchFlag">
            <summary>
            成交Flag
            true:該筆行情為新成交
            false:該筆行情為更新報價
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteEventArgs.#ctor(CapitalPipe.LiteTrading.Quotes.Quote,CapitalPipe.LiteTrading.Quotes.QuoteEventType,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Constructor</summary>
            <param name="sender">產生事件的報價物件</param>
            <param name="evType">事件類型</param>
            <param name="matchEvent">true:有成交；false:報價更新</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteEventArgs.#ctor(CapitalPipe.LiteTrading.Quotes.Quote,CapitalPipe.LiteTrading.Quotes.QuoteEventType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="evType"></param>
            <param name="ohlcUpdateFlag"></param>
            <param name="orderBookUpdateFlag"></param>
            <param name="refUpdateFlag"></param>
            <param name="matchEvent"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.QuoteEventHandler">
            <summary>處理行情的Delegate</summary>
            <param name="sender">發送事件的來源</param>
            <param name="e">事件參數</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.QuoteEventType">
            <summary>
            Enumeration : 行情事件的類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteEventType.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteEventType.Recover">
            <summary>
            回補
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteEventType.Update">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteEventType.Inquiry">
            <summary>
            詢價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteEventType.RecoverTicks">
            <summary>
            回補Tick資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteEventType.GreeksUpdate">
            <summary>
            更新Greeks
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteEventType.Debug">
            <summary>
            Debug事件
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.QuoteImp">
            <summary>
            Quote介面的基礎實做
            ==> 如果沒有要做很複雜的東西，可以直接使用這個物件來儲存行情資料，省去開發成本
            ---------------------------------------------------------------------------
            20151111
            ※ 新增NominalPrice, SettlePrice, PreSettle, PreClose等欄位
            --------------------------------------------------------------------------
            20161222
            ※ 新增OpenInterests欄位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._isReplay">
            <summary>
            是否為重播的行情？
            ==> for quoteserver
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._bInitialized">
            <summary>
            是否已完成初始化？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._maxDigit">
            <summary>
            最大小數位數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._cmdInfo">
            <summary>
            商品摘要資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._flag">
            <summary>
            自訂旗標
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._isFraction">
            <summary>
            是否為分數報價？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._divisor">
            <summary>
            除數(分數報價時使用)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._dnLimit">
            <summary>
            跌停價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._high">
            <summary>
            最高價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._last">
            <summary>
            最後成交價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._low">
            <summary>
            最低價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._matTime">
            <summary>
            最後成交時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._open">
            <summary>
            開盤價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._refPri">
            <summary>
            開盤參考價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._upLimit">
            <summary>
            漲停價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._nominalPrice">
            <summary>
            名目價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._settlePrice">
            <summary>
            當日結算價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._preClosePrice">
            <summary>
            前日收盤價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._preSettlePrice">
            <summary>
            前日結算價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._bookEntryCount">
            <summary>
            Order Book單邊的檔數(ex:台灣五檔，新加坡十檔)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._matchQty">
            <summary>
            成交單量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._totalQty">
            <summary>
            成交總量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._bidPrices">
            <summary>
            買進價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._askPrices">
            <summary>
            賣出價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._bidQtys">
            <summary>
            買進量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._askQtys">
            <summary>
            賣出量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._lastBid">
            <summary>
            前次報價的買進價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._lastAsk">
            <summary>
            前次報價的賣出價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._baTick">
            <summary>
            成交在Bid/Ask的哪邊？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._updTick">
            <summary>
            往上成交、往下成交or平盤？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._totalAmount">
            <summary>
            成交總值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._totalBuyCount">
            <summary>
            總買進筆數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._totalBuyQty">
            <summary>
            總買進量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._totalSellCount">
            <summary>
            總賣出筆數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._totalSellQty">
            <summary>
            總賣出量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._inferBuyPrice">
            <summary>
            衍生買價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._inferSellPrice">
            <summary>
            衍生賣價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._inferSellQty">
            <summary>
            衍生賣量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._inferBuyQty">
            <summary>
            衍生買量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._openInterests">
            <summary>
            未平倉量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._lastInquiry">
            <summary>
            最後詢價時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._adapterID">
            <summary>
            Adapter的ID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._exchangeStatus">
            <summary>
            資料狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._userText">
            <summary>
            使用者自定義字串
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._ticksLimit">
            <summary>
            cache最近500筆tick資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._updateTime">
            <summary>
            更新時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteImp._latestTicks">
            <summary>
            最近的Tick成交資料
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Quotes.QuoteImp.OnQuoteEvent">
            <summary>
            行情更新事件
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Quotes.QuoteImp.OnInquiryEvent">
            <summary>
            詢價事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.IsReplay">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.Initialized">
            <summary>
             是否已完成初始化？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.AdapterInstanceID">
            <summary>
            20160225新增
            創建這個Quote的InstanceID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.Flag">
            <summary>
            自訂旗標
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.CommodityInfo">
            <summary>
            商品摘要資訊
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.Code">
            <summary>Code property : Read Only</summary>
            <value>商品代碼</value>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.IsFraction">
            <summary>
            是否分數報價？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.Divisor">
            <summary>
            除數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.RefPrice">
            <summary>
            參考價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.UpLimit">
            <summary>
            漲停價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.DnLimit">
            <summary>
            跌停
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.Open">
            <summary>
            開盤價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.High">
            <summary>
            最高
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.Last">
            <summary>
            最後成交價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.Low">
            <summary>
            最低價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.UpdateTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.Tag">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.CalPrice">
            <summary>
            計算價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.ChangePoints">
            <summary>
            漲跌
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.ChangeRate">
            <summary>
            漲跌幅
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.MatchTime">
            <summary>
            成交時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.OrderBookSize">
            <summary>
            檔數( 5 ==> 5檔， 10 ==> 10檔
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.MatchQty">
            <summary>
            成交量(單量)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.TotalQty">
            <summary>
            成交量(總量)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.OpenInterests">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.InferBuyPrice">
            <summary>
            衍生買價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.InferBuyQty">
            <summary>
            衍生買量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.InferSellPrice">
            <summary>
            衍生賣價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.InferSellQty">
            <summary>
            衍生賣量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.TotalAmount">
            <summary>
            成交總值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.TotalBuyCount">
            <summary>
            總委買筆數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.TotalBuyQty">
            <summary>
            總委買張數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.TotalSellCount">
            <summary>
            總委賣筆數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.TotalSellQty">
            <summary>
            總委賣張數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.BATick">
            <summary>
            成交在買價還是賣價？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.UPDTick">
            <summary>
            Tick變動方向
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.LastBidPrice">
            <summary>
            前次買進價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.LastAskPrice">
            <summary>
            前次賣出價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.LatestTicks">
            <summary>
            最近xx筆成交資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.LastInquiry">
            <summary>
            最後詢價時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.MaxDigit">
            <summary>
            最高的小數位數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.ExchangeStatus">
            <summary>
            交易狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.NominalPrice">
            <summary>
            名目價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.SettlePrice">
            <summary>
            結算價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.PreClosePrice">
            <summary>
            前日收盤價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.PreSettlePrice">
            <summary>
            前日結算價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.Self">
            <summary>
            Data Binding使用變數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteImp.UserText">
            <summary>
            使用者自定義字串
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.#ctor(System.String,System.Int32)">
            <summary>
            Constructor
            ------------------------------------
            20150714
            ※ 在Constructor加入清空報價物件
            </summary>
            <param name="code">商品的系統代碼</param>
            <param name="bookRecordCount">委託簿的數量</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Int32)">
            <summary>
            Constructor
            ------------------------------------
            20150714
            ※ 在Constructor加入清空報價物件
            </summary>
            <param name="cmdInfo"></param>
            <param name="bookRecordCount"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetCommodityInfo(CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            注意：這個function只用來支援當報價產生時，商品資料還未收到的模式!!
            (在全推報價模式的資料暫存，有可能會出現這情形!!)
            </summary>
            <param name="cmdInfo"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.ClearQuote">
            <summary>
            清空報價物件
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.ClearOrderBook">
            <summary>
            清空委買委賣. 
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetUpdateTime(System.DateTime)">
            <summary>
            設定更新時間
            </summary>
            <param name="updateTime"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.AskPrice(System.Int32)">
            <summary>
            取得委託簿的委賣價
            </summary>
            <param name="i">第i個委賣價，index從0開始</param>
            <returns>委賣價</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.BidPrice(System.Int32)">
            <summary>
            取得委託簿的委買價
            </summary>
            <param name="i">第i個委買價，index從0開始</param>
            <returns>委買價</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.AskQty(System.Int32)">
            <summary>
            取得委託簿的委賣量
            </summary>
            <param name="i">第i個委賣量，index從0開始</param>
            <returns>委賣量</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.BidQty(System.Int32)">
            <summary>
            取得委託簿的委買量
            </summary>
            <param name="i">第i個委買量，index從0開始</param>
            <returns>委買量</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.FireQuoteEvent(CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            派送事件
            </summary>
            <param name="e">事件內容</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.FireInquiryEvent(CapitalPipe.LiteTrading.Quotes.InquiryEventArgs)">
            <summary>
            派送詢價事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.setOpen(System.Decimal)">
            <summary>
            設定開盤價
            </summary>
            <param name="open"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.setHigh(System.Decimal)">
            <summary>
            設定最高價
            </summary>
            <param name="high"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.setLow(System.Decimal)">
            <summary>
            設定最低價
            </summary>
            <param name="low"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.setClose(System.Decimal)">
            <summary>
            設定最後成交價
            </summary>
            <param name="close"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.setLastPrice(System.Decimal)">
            <summary>
            依照成交價更新高低收資料
            </summary>
            <param name="last">最後成交價</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetPreSettlePrice(System.Decimal)">
            <summary>
            設定昨日結算價
            </summary>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetPreClosePrice(System.Decimal)">
            <summary>
            設定昨收價
            </summary>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetSettlePrice(System.Decimal)">
            <summary>
            設定結算價
            </summary>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetNominalPrice(System.Decimal)">
            <summary>
            設定名目價
            </summary>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetOHLC(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            設定開高低收資料
            </summary>
            <param name="open">開盤價</param>
            <param name="high">最高價</param>
            <param name="low">最低價</param>
            <param name="last">最後成交價</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetMatchQty(System.DateTime,System.Decimal,System.Int32)">
            <summary>
            設定最後成交量價資訊
            </summary>
            <param name="matDt">最後成交時間</param>
            <param name="matPri">最後成交價</param>
            <param name="matQty">最後成交量</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetTotalQty(System.Int32)">
            <summary>
            設定總成交量
            屬於成交的update
            </summary>
            <param name="qty">總成交量</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetTotalAmount(System.Decimal)">
            <summary>
            設定總成交金額
            </summary>
            <param name="amt">總成交金額</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetBidPrice(System.Int32,System.Decimal)">
            <summary>
            設定委託簿的委買價
            </summary>
            <param name="i">第i個委買價，index從0開始</param>
            <param name="pri">委買價</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetAskPrice(System.Int32,System.Decimal)">
            <summary>
            設定委託簿的委賣價
            </summary>
            <param name="i">第i個委賣價，index從0開始</param>
            <param name="pri">委賣價</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetBidQty(System.Int32,System.Int32)">
            <summary>
            設定委託簿的委買量
            </summary>
            <param name="i">第i個委買量，index從0開始</param>
            <param name="iQty">委買量</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetAskQty(System.Int32,System.Int32)">
            <summary>
            設定委託簿的委賣量
            </summary>
            <param name="i">第i個委賣量，index從0開始</param>
            <param name="iQty">委賣量</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetLastBid(System.Decimal)">
            <summary>
            設定前次bid報價
            </summary>
            <param name="pri">前次bid價格</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetLastAsk(System.Decimal)">
            <summary>
            設定前次ask價格
            </summary>
            <param name="pri">前次ask價格</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetInferBuyPrice(System.Decimal)">
            <summary>
            設定衍生買進價
            </summary>
            <param name="pri">衍生買進價</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetInferBuyQty(System.Int32)">
            <summary>
            設定衍生買進量
            </summary>
            <param name="qty">衍生買進量</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetInferSellPrice(System.Decimal)">
            <summary>
            設定衍生賣出價
            </summary>
            <param name="pri">衍生賣出價</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetInferSellQty(System.Int32)">
            <summary>
            設定衍生賣出量
            </summary>
            <param name="qty">衍生賣出量</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.UpdateBidAskTick(CapitalPipe.LiteTrading.Quotes.TickBidAskType)">
            <summary>
            更新TickBidAskType資料
            </summary>
            <param name="baType"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.UpdateUpDownTick(CapitalPipe.LiteTrading.Quotes.TickUpDownType)">
            <summary>
            更新UpDownTickType資料
            </summary>
            <param name="uptType"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetTotalBuyCount(System.Int32)">
            <summary>
            設定總委買筆數
            </summary>
            <param name="tBCount">總委買筆數</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetTotalBuyQty(System.Int32)">
            <summary>
            設定總委買量
            </summary>
            <param name="qty">總委賣量</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetTotalSellCount(System.Int32)">
            <summary>
            設定總委賣筆數
            </summary>
            <param name="tSCount">總委賣筆數</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetTotalSellQty(System.Int32)">
            <summary>
            設定總委賣量
            </summary>
            <param name="qty">總委賣量</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetRefInfo(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            設定參考價/漲停/跌停
            </summary>
            <param name="refPri">參考價</param>
            <param name="upLimit">漲停價</param>
            <param name="dnLimit">跌停價</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetUpLimit(System.Decimal)">
            <summary>
            設定漲停價
            </summary>
            <param name="upLimit"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetDownLimit(System.Decimal)">
            <summary>
            設定跌停價
            </summary>
            <param name="dnLimit"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetMaxDigit(System.Int32)">
            <summary>
            設定報價的最大位數(quote server的乘數是由這高值決定)
            </summary>
            <param name="iDigits"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.AddTickData(CapitalPipe.LiteTrading.Quotes.TickData)">
            <summary>
            增加Tick資料
            </summary>
            <param name="data">tick資料</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.BidPriceAdjusted(System.Int32)">
            <summary>
            調整後買進價格
            邏輯：
            (1)若有原始資料==>使用原始資料
            (2)若無原始資料==>使用比idx小的最高檔位資料
               ex:idx=3(第四檔),無資料，則使用第三檔資料
                  若第三檔亦無資料，往前推使用第二檔，直到第一檔為止
            (3)若第一檔也無資料
               (a)賣出第一檔也無資料，使用最後成交價或是參考價
               (b)賣出第一檔 == 跌停價，使用跌停價
               (c)使用參考價
            </summary>
            <param name="idx">第idx個委買價格，index從0開始</param>
            <returns>調整後買進價格，若無資料會回傳最近一檔的委買價格</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.AskPriceAdjusted(System.Int32)">
            <summary>
            調整後賣出價格
            邏輯：
            (1)若有原始資料==>使用原始資料
            (2)若無原始資料==>使用比idx小的最高檔位資料
               ex:idx=3(第四檔),無資料，則使用第三檔資料
                  若第三檔亦無資料，往前推使用第二檔，直到第一檔為止
            (3)若第一檔也無資料
               (a)買進第一檔也無資料，使用最後成交價或是參考價
               (b)買進第一檔 == 漲停價，使用漲停價
               (c)使用參考價
            </summary>
            <param name="idx">第idx個委賣價格，index從0開始</param>
            <returns>調整後委賣價格，若無資料會回傳最近一檔的委賣價格</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.BidQtyAdjusted(System.Int32)">
            <summary>
            調整後買進數量
            </summary>
            <param name="idx">第idx個委買量，index從0開始</param>
            <returns>調整後買進數量，若無資料會回傳最近一檔的數量</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.AskQtyAdjusted(System.Int32)">
            <summary>
            調整後賣出數量
            </summary>
            <param name="idx">第idx個委賣數量，index從0開始</param>
            <returns>調整後賣出數量，若無資料會回傳最近一檔的數量</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetLastInquiry(System.DateTime)">
            <summary>
            設定前次詢價時間
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetExchangeStatus(CapitalPipe.LiteTrading.Quotes.MarketDataStatus)">
            <summary>
            設定目前的市場狀態
            </summary>
            <param name="dt">市場狀態</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetOpenInterests(System.Int32)">
            <summary>
            設定未平倉
            </summary>
            <param name="oi"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.SetUserText(System.String)">
            <summary>
            設定使用者自定義字串
            </summary>
            <param name="usrText">使用者自定義字串值</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteImp.GetQuoteDigits(System.Decimal,System.Decimal)">
            <summary>
            取得兩個價格間的最大digit
            </summary>
            <param name="price1"></param>
            <param name="price2"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.QuoteManager">
            <summary>
            管理Quotes的類別
            報價管理員內會包含各個系統設定好的報價模組
            在使用者要求報價資訊時，會先自目前所有的報價物件中找出是否有該商品的報價物件
            若找不到，則會依次向各個報價模組查詢是否能創建出該商品的報價物件，
            若報價模組能創建該商品的報價物件(具有該商品的報價能力)，則會使用該報價模組創建報價物件並回傳
            若該報價模組無法創建該商品的報價物件，則會向下一個報價模組查詢，
            直到找到有能創建出該商品報價物件的模組或是所有的模組找完為止
            若所有的模組都無法創建出報價物件，則會回傳null
            
            主要的使用時機：取得報價
            
                string code = "2330.TWSE";
                Quote q = QuoteManager.DefaultManager.GetQuote(code);
            
            To Do:
            (1)思考建立一個xx交易所使用xx模組的機制
            (2)同商品多報價來源的備援機制？(可能要大改版)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager._adaptors">
            <summary>
            所有的QuoteAdapter，key值為instance ID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager._quotes">
            <summary>
            所有的quote物件，key值為商品的系統碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager._instance">
            <summary>
            QuoteManager的實例，DefaultManager會回傳這個值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager._adaptorList">
            <summary>
            所有的adaptor，這個跟_adaptors有點重覆，要思考合併!!
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager._controlQueueLimit">
            <summary>
            是否控制Queue的數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager._queueSizeLimit">
            <summary>
            最多queue幾筆資料，預設值為10000
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager._lastDataHandled">
            <summary>
            處理完最後一筆資料的時點
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager._sendFullQuoteInitialQutoeWhenCreated">
            <summary>
            For報價server使用!!
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager._performanceTracking">
            <summary>
            是否戶用效能追蹤？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager._queuedData">
            <summary>
            Quote資料Queue
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager._eventThread">
            <summary>
            處理quote資料的thread
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager._eventDispatchers">
            <summary>
            
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Quotes.QuoteManager.OnNewQuoteCreated">
            <summary>
            新報價產生時，會發出這個事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager.DataType_NewQuoteGenerated">
            <summary>
            新Quote產生的DataType
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager.DataType_InitialFullQuote">
            <summary>
            初始化全部資料的DataType
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager.DataType_InquiryFromOtherSource">
            <summary>
            由其他來源產生的詢價事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteManager.DataType_FireQuoteEvent">
            <summary>
            發送報價事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteManager.Adaptors">
            <summary>
            所有的Adaptor
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteManager.LastDataHandled">
            <summary>
            處理完最後一筆資料的時點
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteManager.DefaultManager">
            <summary>
            預設的報價管理員
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteManager.IsControlQueueSize">
            <summary>
            是否要控制queue的大小？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteManager.QueueSizeLimit">
            <summary>
            Queue的最大值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteManager.IsSendFullQuoteWhenCreated">
            <summary>
            在報價物件產生後，是否要傳送初始報價？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteManager.IsPerformanceTracking">
            <summary>
            是否執行報價處理的績效追蹤？
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.GetQuote(System.String)">
            <summary>
            取得報價
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.GetQuoteAdaptor(System.String)">
            <summary>
            
            </summary>
            <param name="adapterID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.FireSingleCommodityDebugQuoteEvent(System.String)">
            <summary>
            發送單一商品的行情事件
            for debug使用
            </summary>
            <param name="code">商品代碼</param>
            <returns>
            -1:找不到商品
            1:成交發送行情事件
            </returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.FireAllCommoditiesDebugQuoteEvent">
            <summary>
            發送所有商品的行情事件
            for debug 使用
            </summary>
            <returns>1</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.Initialize">
            <summary>
            連線
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.Connect">
            <summary>
            連線
            會通知各模組進行連線
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.Disconnect">
            <summary>
            中斷連線
            會通知各模組中斷連線
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.CreateQuote(System.String)">
            <summary>
            創建報價物件
            </summary>
            <param name="code">系統代碼</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.GetModule(System.String)">
            <summary>
            取得模組
            </summary>
            <param name="strFn"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.AddQuoteAdaptor(System.String,CapitalPipe.LiteTrading.Quotes.QuoteAdaptor)">
            <summary>
            加入報價模組
            </summary>
            <param name="key">報價模組key值，不可重覆</param>
            <param name="adaptor">報價模組instance</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.AddQuoteAdaptor(CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting,CapitalPipe.LiteTrading.Quotes.QuoteAdaptor)">
            <summary>
            加入報價模組
            </summary>
            <param name="moduleSetting"></param>
            <param name="instance"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.SortModules(System.Comparison{CapitalPipe.LiteTrading.Quotes.QuoteAdaptor})">
            <summary>
            排序
            </summary>
            <param name="func"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.RemoveModule(CapitalPipe.LiteTrading.Quotes.QuoteAdaptorSetting)">
            <summary>
            移除報價模組
            </summary>
            <param name="moduleSetting"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.RemoveModuleFromManager(System.String)">
            <summary>
            移除報價模組
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.AddQueuedQuoteData(CapitalPipe.LiteTrading.Quotes.QueuedQuotedData)">
            <summary>
            加入一筆QueuedQuoteData
            [Thread-Save]
            </summary>
            <param name="data">待處理報價資料</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.InitEventThread">
            <summary>
            初始化行情事件處理Thread
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.AddEventDispatcher(CapitalPipe.Utilities.TrivialDelegate)">
            <summary>
            加入一個TrivialDelegate，這個delegate會在行情loop中執行
            用途：Spot事件，spot事件理應在行情事件裡面派送
                  但是在快市時，會收到單一商品的連續成交資料，若
                  Spot採用單純的Event-Listener，在underlying發生改變時立即處理並派送事件
                  這樣會讓系統花很多時間在處理不必要的事件，因為spot事件最重要的是最後的
                  結果，因此中間的連續觸發是沒有意義的，為了解決這個case，設計了一個
                  dispacher的機制，當spot發生改變時，並不會立刻派送事件，而是將待派送的事件
                  放至在某一個delegate之中，如果連續觸發時，會視這個delegate是否有該spot的待派送事件
                  若有則將之更新成最後的事件，drop之前的事件(這樣可以減少一次事件派送)
                  當這個批次的資料全部處理完，才會針對剛剛的delegate執行派送
            </summary>
            <param name="del"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.TerminateEventThread">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.DoEventLoop">
            <summary>
            執行事件迴圈
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.FireEventDispatcherEvents">
            <summary>
            20141001新增，for壓力測試新增的項目
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.HasKey(System.String)">
            <summary>
            是否包含某個key值的module？
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.GetCurrentQueueDataCount">
            <summary>
            傳回目前Queue的資料量
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.GetQuoteModulesStatus">
            <summary>
            取得行情模組狀態
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteManager.GetConnectionStatus">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo">
            <summary>
            行情模組資訊
            * 來源別：'N'=>一般模組，'C'=>複合模組
            * 模組名稱
            需要實做以下abstract functions
            * GetQuoteModuleName:傳回模組名稱
            * GetInstanceLimit:傳回可產生的實例上限
            * CreateQuoteModule:創建行情模組
                                實做CreateQuoteModule時，必須做key的管理
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.ModuleName">
            <summary>
            模組名稱 ==> 子類別不用覆寫，只要實做GetQuoteModuleName即可
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.Modules">
            <summary>
            所有的行情模組
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.DefaultSettingFile">
            <summary>
            預設的設定檔(for Local/Test Mode)
            自營商model是由db決定
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.GetQuoteModuleName">
            <summary>
            傳回模組名稱
            </summary>
            <returns>行情模組名稱</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.GetInstanceLimit">
            <summary>
            傳回可產生的實例上限
            </summary>
            <returns>實例上限</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.CreateQuoteAdaptor(System.String)">
            <summary>
            創建行情模組
            </summary>
            <param name="strID">行情模組key值</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.TestModule(System.String)">
            <summary>
            測試是否為行情模組
            </summary>
            <param name="fn">模組assembly檔案</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.CreateQuoteModuleInfoFromFile(System.String)">
            <summary>
            自指定的dll檔案來產生行情模組資訊物件
            </summary>
            <param name="fn">dll檔案</param>
            <returns>行情模組資訊物件</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.AddQuoteModuleInfo(CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo)">
            <summary>
            加入Quote模組資訊物件
            </summary>
            <param name="moduleInfo">Quote模組資訊物件</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.RemoveQuoteModuleInfo(System.String)">
            <summary>
            移除Quote模組
            </summary>
            <param name="moduleID">Quote模組Key值</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.GetAllQuoteModule">
            <summary>
            取得所有的報價模組
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.GetQuoteModuleInfo(System.String)">
            <summary>
            取得行情模組資訊
            </summary>
            <param name="moduleID">模組ID</param>
            <returns>行情模組資訊物件</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.ClearAllModules">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.LoadModules">
            <summary>
            自預設檔案載入行情模組資訊
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.LoadModules(System.String)">
            <summary>
            載入模組
            </summary>
            <param name="fn">模組assembly檔案</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.SaveModules">
            <summary>
            儲存行情模組資訊到預設檔案
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteModuleInfo.SaveModules(System.String)">
            <summary>
            將Quote模組設定資料(_modules)，存到xml檔案
            </summary>
            <param name="fn">指定的xml檔案</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.RequestForQuotationData">
            <summary>
            詢價資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.RequestForQuotationData._code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.RequestForQuotationData._requestID">
            <summary>
            詢價代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.RequestForQuotationData._dtOccur">
            <summary>
            詢價發生時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.RequestForQuotationData._duration">
            <summary>
            詢價持續時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.RequestForQuotationData.Code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.RequestForQuotationData.RequestID">
            <summary>
            詢價識別碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.RequestForQuotationData.OccurTime">
            <summary>
            詢價發生時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.RequestForQuotationData.Duration">
            <summary>
            詢價持續時間
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.RequestForQuotationData.#ctor(System.String,System.String,System.DateTime,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="code">商品代碼</param>
            <param name="requestID">詢價</param>
            <param name="dtOccur"></param>
            <param name="duration"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorage">
            <summary>
            儲存最新一筆報價
            </summary>
            <remarks>
            對報價server來說滿重要的!!
            </remarks>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorage.UpdateQuoteData(CapitalPipe.LiteTrading.Quotes.Quote)">
            <summary>
            
            </summary>
            <param name="quoteObj"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorage.RetrieveQuoteSnapshotData(System.String)">
            <summary>
            取得snapshot資料
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary._dataLength">
            <summary>
            一個商品的長度 長度是固定的所以之後用這個來除即可找出商報價資料的位置或者總共有幾筆報價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary._channlLength">
            <summary>
            channl的長度名稱 +頻道號碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary._channlIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary._channlPath">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary._dataPath">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary._fi">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary._cha">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary._channle">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="Name"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary.LoadChannleData">
            <summary>
            將對找表資料載入
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary.UpdateQuoteData(CapitalPipe.LiteTrading.Quotes.Quote)">
            <summary>
            盤中更新資料
            </summary>
            <param name="quoteObj"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary.RetrieveQuoteSnapshotData(System.String)">
            <summary>
            程式當掉後將儲存起來的最新一筆資料抓回來
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary.RetrieveQuoteSnapshotData(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="ordBookCount"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary.ChectDate">
            <summary>
            檢查日期
            如果是前一天的日期就將檔案重新覆蓋過去
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.QuoteSnapshotStorageByBinary.CodeBytes(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteUpdateModel">
            <summary>
            更新模式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.SyntheticQuote._baseBasket">
            <summary>
            這個淨值計算器的基準Basket
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.SyntheticQuote._listenQuotes">
            <summary>
            目前監聽的報價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.SyntheticQuote._updateModel">
            <summary>
            更新方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.SyntheticQuote._estimationMethod">
            <summary>
            計算方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.SyntheticQuote._baseCommodity">
            <summary>
            基準商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.SyntheticQuote._exportQuote">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.SyntheticQuote._useQuoteRef">
            <summary>
            指數使用報價的參考價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.SyntheticQuote._queuedToBeUpdatedQuotes">
            <summary>
            待更新報價物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.SyntheticQuote._backgroundUpdateThread">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.SyntheticQuote.Code">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuote.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Indices.ValueEstimationMethod,CapitalPipe.LiteTrading.Quotes.SyntheticQuoteUpdateModel,CapitalPipe.LiteTrading.Baskets.Basket)">
            <summary>
            
            </summary>
            <param name="cmdInfo"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuote.SetBasket(CapitalPipe.LiteTrading.Baskets.Basket)">
            <summary>
            
            </summary>
            <param name="basket"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuote.ListenBasket">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuote.BaseQuote_OnQuoteEvent(System.Object,CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuote.ReleaseListenQuotes">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuote.UpdateValues">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuote.AddThisToUpdateQueue">
            <summary>
            將自已加到待更新的佇列
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuote.ToSyntheticQuoteRule">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuote.PulseQueue">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuote.InitializeUpdateThread">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuote.DoUpdateThread">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteRule._baseBasketID">
            <summary>
            這個淨值計算器的基準Basket
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteRule._updateModel">
            <summary>
            更新方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteRule._estimationMethod">
            <summary>
            計算方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteRule._baseCommodityCode">
            <summary>
            基準商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteRule._useQuoteRef">
            <summary>
            指數使用報價的參考價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteRule.Code">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteRule.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteRule.BasketID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteRule.ValueMethod">
            <summary>
            評價模型
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteRule.ToXMLNode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteAdaptor">
            <summary>
            實際上不是QuoteAdaptor
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteAdaptor._synQuotes">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteAdaptor.AllSyntheticQuotes">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteAdaptor.AllSyntheticQuoteRules">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteAdaptor.DefaultSyntheticQuoteAdaptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteAdaptor.AddSyntheticQuoteRule(CapitalPipe.LiteTrading.Quotes.SyntheticQuoteRule)">
            <summary>
            已經有Rule，回傳0
            成功：回傳1
            其他錯誤傳回-1;
            </summary>
            <param name="rule"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteAdaptor.RemoveSyntheticQuoteRule(System.String)">
            <summary>
            移除報價規則
            </summary>
            <param name="strCode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteAdaptor.CreateQuote(System.String)">
            <summary>
            
            </summary>
            <param name="strCode"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteAdaptor.SaveToStorage">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.SyntheticQuoteAdaptor.LoadFromStorage">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.TickBidAskType">
            <summary>
            這筆Tick資料是成交在Bid Side還是Ask Side
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.TickBidAskType.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.TickBidAskType.BidSide">
            <summary>
            Bid價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.TickBidAskType.AskSide">
            <summary>
            Ask價
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.TickData">
            <summary>
            Description of TickData.
            Tick成交資料
            當收到行情源的Tick成交資料時，要加到Quote裡面
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Quotes.TickData.NoTickData">
            <summary>
            代表沒有tick資料的物件
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.TickData.#ctor(System.Decimal,System.Int32,System.DateTime,System.DateTime,System.Int32,CapitalPipe.LiteTrading.Quotes.TickBidAskType,CapitalPipe.LiteTrading.Quotes.TickUpDownType)">
            <summary>
            Constructor
            </summary>
            <param name="pri"></param>
            <param name="qty"></param>
            <param name="dtMatch"></param>
            <param name="dtLocal"></param>
            <param name="baType"></param>
            <param name="updType"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Quotes.TickData.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Quotes.TickUpDownType">
            <summary>
            價格跳動類型
            </summary>
            <remarks>
            <list type="bullet">
            <item>UpTick:上漲</item>
            <item>SameTick:不變</item>
            <item>DownTick:下跌</item>
            </list>
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.TickUpDownType.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.TickUpDownType.UpTick">
            <summary>
            上漲
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.TickUpDownType.SameTick">
            <summary>
            不變
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Quotes.TickUpDownType.DownTick">
            <summary>
            下跌
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SandBox.Orders.SandBoxOrderManager">
            <summary>
            For Sandbox
            做程式下單時所用的安控機制
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SandBox.Orders.SandBoxOrderManager._senOrderTime">
            <summary>
            控制下單速度的queue
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SandBox.Orders.SandBoxOrderManager._instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SandBox.Orders.SandBoxOrderManager.SetOrderSpeedLimit(System.Int32,System.Double)">
            <summary>
            
            </summary>
            <param name="orderCount"></param>
            <param name="perSec"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SandBox.Orders.SandBoxOrderManager.NewGenericOrder(System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.SandBox.Orders.SendOrderHandler,System.String@)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SandBox.Orders.SandBoxOrderManager.NewGenericOrder(System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.BSType,System.Decimal,System.Int32,CapitalPipe.LiteTrading.Orders.OrderType,CapitalPipe.LiteTrading.Orders.OrderFillType,System.String,System.String,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.SandBox.Orders.SendOrderHandler,System.String@)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="cmd"></param>
            <param name="bstype"></param>
            <param name="price"></param>
            <param name="qty"></param>
            <param name="ordType"></param>
            <param name="fillType"></param>
            <param name="param"></param>
            <param name="acc"></param>
            <param name="newOrdHandler"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SandBox.Orders.SandBoxOrderManager.NewQuoteOrder(System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Decimal,System.Int32,System.Decimal,System.Int32,System.String,System.String,System.String,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.SandBox.Orders.SendOrderHandler,System.String@)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="cmd"></param>
            <param name="bidPrice"></param>
            <param name="bidQty"></param>
            <param name="askPrice"></param>
            <param name="askQty"></param>
            <param name="accInfo"></param>
            <param name="retMessage"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SandBox.Orders.SendOrderHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Scripts.TimerParamer">
            <summary>
            定期執行方式的參數
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Scripts.TimerParamer.TimerType">
            <summary>
            Timer的執行方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TimerParamer.TimerType.OneShot">
            <summary>
            只執行一次
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TimerParamer.TimerType.Periodically">
            <summary>
            批次執行
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TimerParamer.TimerType.Undefined">
            <summary>
            Sentinel變數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TimerParamer._executionType">
            <summary>
            執行方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TimerParamer._startTime">
            <summary>
            啟始執行時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TimerParamer._endTime">
            <summary>
            結束執行時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TimerParamer._exactlyTime">
            <summary>
            執行時點(OneShot時)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TimerParamer._interval">
            <summary>
            執行間隔(xx秒)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TimerParamer._repeatCount">
            <summary>
            重覆執行次數(Periodically時)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TimerParamer._lastExecute">
            <summary>
            前次執行時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TimerParamer._cummExecTimes">
            <summary>
            累積執行次數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TimerParamer._executeTimes">
            <summary>
            已執行次數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TimerParamer.ExecutionType">
            <summary>
            時間條件的執行方式
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TimerParamer.StartTime">
            <summary>
            起始執行時間(for Periodically時使用)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TimerParamer.EndTime">
            <summary>
            結束執行時間(for Periodically時使用)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TimerParamer.ExecuteTime">
            <summary>
            執時間點(for OneShot使用)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TimerParamer.ExecuteLimit">
            <summary>
            執行次數上限
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TimerParamer.Interval">
            <summary>
            兩次執行的間隔
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TimerParamer.LastExecute">
            <summary>
            上次執行時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TimerParamer.CummExecuteTimes">
            <summary>
            累積執行次數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TimerParamer.Description">
            <summary>
            說明
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TimerParamer.ExecutedCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters">
            <summary>
            ScriptExecuter的參數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters._scriptVariables">
            <summary>
            Script執行的參數，為了方便測試，所有的參數都是以字串方式處理
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters._timerParameters">
            <summary>
            時間參數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters._listenQuotes">
            <summary>
            要監聽報價事件的商品們~~~
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.XMLTag_ScriptVariables">
            <summary>
            所有Script變數的根節點
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.XMLTag_ScriptVariable">
            <summary>
            變數節點
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.XMLTag_TimerParameters">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.XMLTag_TimerParameter">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.XMLTag_ListenOrderEvents">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.XMLTag_ListenTransactionEvents">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.XMLTag_ListenQuotes">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.XMLTag_QuoteCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.XMLTag_StartTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.XMLTag_EndTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.XMLTag_ExecuteLimit">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.XMLTag_ExecutionType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.XMLTag_Interval">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.XMLTag_ExecuteTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.Variables">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.TimerParameters">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.ListenQuotes">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.RestoreFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptParameters.SaveToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Scripts.TradeScript">
            <summary>
            用來交易Script檔案管理的物件
            檔案管理方式：
                所有的檔案都有一個GUID
                
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScript._guid">
            <summary>
            Script的GUID
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter">
            <summary>
            Script執行器
            ----------------------------------------------------------
            用來實做以下的功能：
            (1) 定期執行
            (2) 條件執行
            ---------------------------------------------------------
            支援Rename機制，故使用guid
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.XMLTag_ScriptSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.GUID">
            <summary>
            GUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.Name">
            <summary>
            執行器的名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.Active">
            <summary>
            啟用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.Editing">
            <summary>
            是否在編輯中？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.Parameters">
            <summary>
            腳本執行器的參數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.SourceCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.LogData">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.ExecutingStatus">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="guid"></param>
            <param name="name"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.CompileScript">
            <summary>
            Timer事件：        OnTimer(void)
            委託回報事件：      OnOrderChanged(Order)
            成交回報事件：      OnOrderMatched(Match)
            報價事件：          OnQuoteChaned(Quote)
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.OnAsyncReadData(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.AppendLogData(System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.Rename(System.String)">
            <summary>
            重新命名:Rename只能透過manager來做!!
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.SaveToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuter.LoadFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuterManager._executers">
            <summary>
            所有的Script執行器
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuterManager._defaultManager">
            <summary>
            預設的ScriptExecuter管理員
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuterManager.XMLTag_ScriptExecuters">
            <summary>
            所有ScriptExecuter的根節點
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuterManager.XMLTag_ScriptExecuter">
            <summary>
            每個ScriptExecuter節點
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuterManager.XMLTag_GUID">
            <summary>
            Script的GUID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuterManager.XMLTag_Name">
            <summary>
            Script名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuterManager.ScriptExecuters">
            <summary>
            所有的ScriptExecuters
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuterManager.DefaultManager">
            <summary>
            預設的ScriptExecuter管理員
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuterManager.DefaultSettingFile">
            <summary>
            預設的設定儲存檔
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuterManager.HasScriptExecuter(System.String)">
            <summary>
            是否有該名稱的Executer
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuterManager.AddNewScriptExecuter(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuterManager.RemoveScriptExecuter(System.String)">
            <summary>
            移除
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuterManager.Rename(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="oldName"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuterManager.LoadSettings">
            <summary>
            載入設定
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptExecuterManager.SaveSettings">
            <summary>
            儲存設定
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Scripts.TradeScriptOrderResult">
            <summary>
            交易Script的下單結果
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Scripts.TradeScriptOrderService">
            <summary>
            提供交易script的下單服務的物件
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptOrderService.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptOrderService.SendNewOrder(System.String,System.String,System.Decimal,System.Int32,System.String,System.String,System.String,System.Object)">
            <summary>
            下新單
            </summary>
            <param name="code">交易所</param>
            <param name="code">商品代碼</param>
            <param name="bsType">買賣別</param>
            <param name="price">價格</param>
            <param name="qut">數量</param>
            <param name="orderType">下單類型</param>
            <param name="fillType">成交類型</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptOrderService.SendNewQuoteOrder(System.String,System.Decimal,System.Int32,System.Decimal,System.Int32,System.String,System.String,System.Object)">
            <summary>
            送出報價委託
            </summary>
            <param name="code"></param>
            <param name="bidPrice"></param>
            <param name="bidQty"></param>
            <param name="askPrice"></param>
            <param name="askQty"></param>
            <param name="ordType"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptOrderService.CancelOrder(System.String)">
            <summary>
            
            </summary>
            <param name="orderID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptOrderService.DecreaseOrder(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="orderID"></param>
            <param name="qty"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Scripts.TradeScriptOrderService.VaildBSStr(System.String)">
            <summary>
            
            </summary>
            <param name="bsStr"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot">
            <summary>
            自動下單機器人
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._autoOrderLock">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._isDestroyed">
            <summary>
            是否已結束~~~
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._isActive">
            <summary>
            是否啟用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._baseCmd">
            <summary>
            基礎商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._buySellType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._volumeLimit">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._orderVolume">
            <summary>
            單筆委託量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._cummMatch">
            <summary>
            累積成交量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._useRoundLot">
            <summary>
            使用整股下單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._hitImmediatelyWarnning">
            <summary>
            立即成交警示
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._theoPrice">
            <summary>
            理論價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._ticksToWithdraw">
            <summary>
            撤單Tick數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._failCount">
            <summary>
            送單失敗
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._errorLimit">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._currentOrder">
            <summary>
            目前的委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._preference">
            <summary>
            委託條件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._orderSource">
            <summary>
            委託來源
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._state">
            <summary>
            物件狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._handledMatches">
            <summary>
            已處理的成交資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._sentOrders">
            <summary>
            已送出委託單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot._account">
            <summary>
            下單帳號
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.OnRobotStateChanged">
            <summary>
            Robot的狀態改變
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.OnAutoOrderRobotMatch">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.Acitve">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.VolumeLimit">
            <summary>
            數量上限
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.OrderVolume">
            <summary>
            委託數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.CummulativeMatch">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.State">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.SendOrderPreference">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.OrderSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.Account">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.BSType)">
            <summary>
            Constructor
            </summary>
            <param name="buySellType"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.ClearMatchVolume">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.CheckOrderCycle">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.CheckCancelOrder(CapitalPipe.LiteTrading.Orders.GenericOrder)">
            <summary>
            
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.CheckSendOrder">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.CurrentOrder_OnOrderChange(System.Object,CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.SetTheoraticalPrice(System.Decimal)">
            <summary>
            會做tick up/tick down處理
            </summary>
            <param name="theoPri"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.AutoOrderRobot.Destroy">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.AutoOrderRobotState">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.ComboTradeBalanceTradeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.ComboTradeBalanceTradeType.Proportional">
            <summary>
            依比例
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.ComboTradeState">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.ComboTradeType">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.CustomLegPriceAlgoritmCreater">
            <summary>
            
            </summary>
            <param name="leg"></param>
            <returns></returns>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CustomLegPriceAlgoritm.CreaterInfos">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy._orderTerms">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy._currentExecution">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy._ordersSent">
            <summary>
            已執行的交易
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy._sentOrders">
            <summary>
            
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy.OnBasketOrderSent">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy.IsActive">
            <summary>
            是否啟用？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy.OrderTerms">
            <summary>
            委託條件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy.BS">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy.SentOrders">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy.Description">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy.#ctor(System.Int32,CapitalPipe.LiteTrading.Spreads.SpreadValueType,CapitalPipe.LiteTrading.Spreads.ValueCompare,System.Double,CapitalPipe.LiteTrading.Spreads.InstantSpread)">
            <summary>
            
            </summary>
            <param name="sp"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy.AddOrderTerm(CapitalPipe.LiteTrading.Orders.OrderTerm)">
            <summary>
            
            </summary>
            <param name="ordTerm"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy.CheckExecuteStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy.AddBasketOrder(CapitalPipe.LiteTrading.Orders.BasketOrder)">
            <summary>
            
            </summary>
            <param name="ord"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy.AssignOrderTerms(System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.Orders.OrderTerm})">
            <summary>
            
            </summary>
            <param name="terms"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy.ClearExecutedCount">
            <summary>
            清空已執行次數
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy.ToXMLNode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadGroupTradeStrategy.ParseFromXMLNode(System.Xml.Linq.XElement,CapitalPipe.LiteTrading.Spreads.InstantSpread)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
            <param name="parentSpread"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.HedgeOrderTradeThroughWatcher">
            <summary>
            避險單穿價警示器
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.HedgeOrderTradeThroughWatcher.HedgeOrderWatchEntry">
            <summary>
            每筆避險單都有一個HedgeOrderWatchEntry，用來保存避險單的相關成交資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.HedgeOrderTradeThroughWatcher.HedgeOrderWatchEntry.ParentOrder">
            <summary>
            母單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.HedgeOrderTradeThroughWatcher.HedgeOrderWatchEntry.OrderReadyTime">
            <summary>
            委託狀態切成Ready的時間點
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.HedgeOrderTradeThroughWatcher.HedgeOrderWatchEntry.TradeThroughTime">
            <summary>
            穿價時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.HedgeOrderTradeThroughWatcher.HedgeOrderWatchEntry.Matches">
            <summary>
            此筆委託的成交
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.InstantSpread">
            <summary>
            Python類型的Spread?
            Python類型的Spread都是用一個script表示，python spread是採用function方式定義
            def spread(x,y):  ==> for simple模式，若選simple模式，但是找不到這個func，要出error
            def spreadBid(x,y): ==> for elaborated模式
            def spreadAsk(x,y):
            --------------------------------------
            要加入價差合理範圍的檢查
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._formulaType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._spreadDescription">
            <summary>
            Spread說明
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._spreadExecutionInterval">
            <summary>
            策略執行間距
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._leg1Account">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._leg2Account">
            <summary>
            Leg2的下單帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._spreadID">
            <summary>
            Spread的名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._spreadTypeGUID">
            <summary>
            Spread類型的GUID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._leg1Condition">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._leg2Condition">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._strategies">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._lastUpdateTime">
            <summary>
            最近更新時間
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Spreads.InstantSpread.OnInstantSpreadChanged">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._spreads">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._spreadCreaters">
            <summary>
            自訂Spread的Creaters
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._leg1Code">
            <summary>
            Leg1的代碼，可以是連續月份碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._leg1Commodity">
            <summary>
            Leg1的商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._leg1Quote">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._leg2Code">
            <summary>
            Leg2的代碼，可以是連續月份碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._leg2Commodity">
            <summary>
            Leg2的商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._leg2Quote">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._leg1VolumeMultiplier">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._leg2VolumeMultiplier">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._referenceCmds">
            <summary>
            參考商品集合
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._bidPriceFormula">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._askPriceFormula">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._lastPriceFormula">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._pythoFormula">
            <summary>
            PythonScript的公式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._lastExpression">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._bidExpression">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._askExpression">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._spreadBid">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._spreadAsk">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._spreadLast">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._isUsingTriggerConditons">
            <summary>
            是否使用TriggerCondition
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._scriptEngine">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._scriptScope">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._scriptRuntime">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._compiled">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._lastPriceFunc">
            <summary>
            Python模式下的Last價格公式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._bidPriceFunc">
            <summary>
            Python模式下的Bid價格公式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._askPriceFunc">
            <summary>
            Python模式下的Ask價格公式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._bBidFormulaException">
            <summary>
            Bid公式是否出現錯誤？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._bAskFormulaException">
            <summary>
            Ask公式是否出現錯誤？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._bLastFormulaException">
            <summary>
            Last公式是否出現錯誤？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._bidException">
            <summary>
            當Bid價格出現Exception時，Exception的內容
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._askException">
            <summary>
            當Ask價格出現Exception時，Exception的內容
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._lastException">
            <summary>
            當Last價格出現Exception時，Exception的內容
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._digits">
            <summary>
            價差的小數位數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread._digitFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread.XMLTag_InstantSpreadEntry">
            <summary>
            Spread紀錄
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpread.XMLTag_Digits">
            <summary>
            Spread的顯示位數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.SignalInterval">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.Leg1Code">
            <summary>
            第一隻腳商品代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.Leg1Commodity">
            <summary>
            第一隻腳商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.Leg2Code">
            <summary>
            第二隻腳商品代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.SpreadID">
            <summary>
            價差的代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.Leg2Commodity">
            <summary>
            第二隻腳商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.Leg1VolumeMultiplier">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.Leg2VolumeMultiplier">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.Leg1Account">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.Leg2Account">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.SpreadBid">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.SpreadBidString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.SpreadAsk">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.SpreadAskString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.SpreadLast">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.SpreadLastString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.Digits">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.FormulaType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.BidPriceFormula">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.AskPriceFormula">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.LastPriceFormula">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.PythonFormula">
            <summary>
            Python公式
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.ReferenceCommodities">
            <summary>
            所有的參考商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.Strategies">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.Spreads">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.Leg1ValidCondition">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.Leg2ValidCondition">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.IsUsingTriggerConditions">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.StrategyCount">
            <summary>
            策略組數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.StrategyExecutingCount">
            <summary>
            執行中的策略數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.StrategyFilledCount">
            <summary>
            策略已執行滿的數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.SpreadType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.BidException">
            <summary>
            Bid公式的錯誤
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.AskException">
            <summary>
            Ask公式的錯誤
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.LastException">
            <summary>
            最後價錯誤
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.ToolTip">
            <summary>
            要顯示的ToolTip內容
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.Self">
            <summary>
            用來指向自己的欄位，通常用來在Binding時能指回自已使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.SettingFile">
            <summary>
            設定檔案
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.SpreadTypeGUID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpread.Creators">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.#ctor(System.String,System.String,System.String,CapitalPipe.LiteTrading.Spreads.SpreadFormulaType)">
            <summary>
            
            </summary>
            <param name="leg1Code"></param>
            <param name="leg2Code"></param>
            <param name="langType"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.Release">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.InitializeCommodities">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.ClearErrors">
            <summary>
            清空價差的錯誤!!
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.SetLeg1Commodity(System.String)">
            <summary>
            設定Leg1商品
            </summary>
            <param name="leg1Code"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.SetLeg2Commodity(System.String)">
            <summary>
            設定Leg2商品
            </summary>
            <param name="leg1Code"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.Leg2Quote_OnQuoteEvent(System.Object,CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            第一隻腳報價事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.OnQuoteEvent(System.String,CapitalPipe.LiteTrading.Quotes.Quote)">
            <summary>
            
            </summary>
            <param name="sourceID"></param>
            <param name="q"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.Leg1Quote_OnQuoteEvent(System.Object,CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            第二隻腳報價事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.UpdateSpread">
            <summary>
            更新Spread
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.HandleReferenceCommodityQuoteChanged(System.String,CapitalPipe.LiteTrading.Quotes.Quote)">
            <summary>
            
            </summary>
            <param name="referenceID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.CheckTriggerStrategies">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.UpdateStrategyInfo">
            <summary>
            更新策略有關欄位
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.UpdateNCalcSpread">
            <summary>
            更新NCalc的價差值
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.UpdatePythonSpread">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.AddReferenceCommodity(System.String,System.String,CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition)">
            <summary>
            加入參考商品
            </summary>
            <param name="refID"></param>
            <param name="code"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.RemoveReferenceCommodity(System.String)">
            <summary>
            移除參考商品
            </summary>
            <param name="refID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.ClearReferenceCommodities">
            <summary>
            清空參考商品
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.SetFormula(System.String)">
            <summary>
            
            </summary>
            <param name="formula"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.SetElaboratedFormula(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="bidFormula"></param>
            <param name="askFormula"></param>
            <param name="lastFormula"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.InitializeRuntime">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.ToXMLNode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.ParseFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.LoadFromFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.LoadFromFile(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.SaveToFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.SaveToFile(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.GetDoubleValueFromDecimal(System.Decimal)">
            <summary>
            
            </summary>
            <param name="decVal"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.SetReferenceDataIntoSpreadExpression(CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry[],NCalc.Expression)">
            <summary>
            
            </summary>
            <param name="refereces"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.SetPriceValuesIntoNCalExpression(CapitalPipe.LiteTrading.Quotes.Quote,CapitalPipe.LiteTrading.Quotes.Quote,CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry[],NCalc.Expression,System.String@)">
            <summary>
            
            </summary>
            <param name="leg1Quote"></param>
            <param name="leg2Quote"></param>
            <param name="refereces"></param>
            <param name="expression"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.SetPriceValuesIntoNCalExpression(System.String,System.String,System.Decimal,NCalc.Expression,System.String@)">
            <summary>
            
            </summary>
            <param name="sourceID"></param>
            <param name="field"></param>
            <param name="dvalue"></param>
            <param name="expression"></param>
            <param name="exceptionMessage"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.GetNCalcSpread(CapitalPipe.LiteTrading.Quotes.Quote,CapitalPipe.LiteTrading.Quotes.Quote,CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry[],NCalc.Expression,System.String@)">
            <summary>
            
            </summary>
            <param name="leg1Quote"></param>
            <param name="leg2Quote"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.GetNCalcSpreadNoExceptionHandle(CapitalPipe.LiteTrading.Quotes.Quote,CapitalPipe.LiteTrading.Quotes.Quote,CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry[],NCalc.Expression)">
            <summary>
            
            </summary>
            <param name="leg1Quote"></param>
            <param name="leg2Quote"></param>
            <param name="refereces"></param>
            <param name="expression"></param>
            <param name="exceptionMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.GetNCalcSpread(NCalc.Expression,System.String@)">
            <summary>
            
            </summary>
            <param name="expression"></param>
            <param name="retMsg"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.GetNCalcSpreadNoExceptionHandle(NCalc.Expression)">
            <summary>
            
            </summary>
            <param name="expression"></param>
            <param name="retMsg"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.SetPythonScriptVariables(CapitalPipe.LiteTrading.Quotes.Quote,CapitalPipe.LiteTrading.Quotes.Quote,CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry[],Microsoft.Scripting.Hosting.ScriptScope)">
            <summary>
            
            </summary>
            <param name="scriptScope"></param>
            <param name="leg1Quote"></param>
            <param name="leg2Quote"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.SetReferenceDataIntoSpreadScriptScope(CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry[],Microsoft.Scripting.Hosting.ScriptScope)">
            <summary>
            
            </summary>
            <param name="refereces"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.SetPriceDataIntoSpreadScriptScope(System.String,System.String,System.Decimal,Microsoft.Scripting.Hosting.ScriptScope,System.String@)">
            <summary>
            
            </summary>
            <param name="sourceID"></param>
            <param name="field"></param>
            <param name="dvalue"></param>
            <param name="scope"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.FireSpreadClassEvent(CapitalPipe.LiteTrading.Spreads.InstantSpreadClassEventType,CapitalPipe.LiteTrading.Spreads.InstantSpread)">
            <summary>
            
            </summary>
            <param name="evType"></param>
            <param name="evSp"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpread.RegisterInstantSpreadCreator(System.String,CapitalPipe.LiteTrading.Spreads.InstantSpreadCreator)">
            <summary>
            
            </summary>
            <param name="strGUID"></param>
            <param name="creator"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition._source">
            <summary>
            來源
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition._name">
            <summary>
            來源商品名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition._isActive">
            <summary>
            是否啟用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition._validRange">
            <summary>
            後xx秒內才有效
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition.XMLTag_InstantSpreadTriggerConditionEntry">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition.XMLTag_IsActive">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition.XMLTag_ValidRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition.Source">
            <summary>
            來源
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition.BaseCommodityName">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition.IsActive">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition.ValidRange">
            <summary>
            有效區間(xx秒)
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition.ToXMLNode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition.ToXMLNode(System.String)">
            <summary>
            
            </summary>
            <param name="nodeName"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition.ApplyXMLSettings(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadTriggerCondition.FromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.InstantSpreadEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry.Code">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry.BaseQuote">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry.TriggerCond">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry.#ctor(System.String,System.String,CapitalPipe.LiteTrading.Spreads.InstantSpread)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry.BaseQuote_OnQuoteEvent(System.Object,CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry.Release">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry.ApplyTriggerCondition(System.Boolean,System.Int32)">
            <summary>
            套用觸發條件
            </summary>
            <param name="validRange"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry.ToXMLNode">
            <summary>
            轉成XML的節點
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ReferenceCommodityEntry.ParseFromXMLNode(System.Xml.Linq.XElement,CapitalPipe.LiteTrading.Spreads.InstantSpread)">
            <summary>
            從XML節點
            </summary>
            <param name="xElem"></param>
            <param name="sp"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.InstantSpreadEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.InstantSpreadClassEventType">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.InstantSpreadClassEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadClassEventArgs.EventType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadClassEventArgs.EventSpread">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadClassEventArgs.#ctor(CapitalPipe.LiteTrading.Spreads.InstantSpreadClassEventType,CapitalPipe.LiteTrading.Spreads.InstantSpread)">
            <summary>
            /
            </summary>
            <param name="evType"></param>
            <param name="evSpead"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.InstantSpreadClassEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.SpreadFormulaType">
            <summary>
            Spread公式類型
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.InstantSpreadCreator">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadCreator.InstantSpreadDescription">
            <summary>
            InstantSpread的說明
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadCreator.CreateSpread">
            <summary>
            產生Spread
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadCreator.EditSpread(CapitalPipe.LiteTrading.Spreads.InstantSpread)">
            <summary>
            編輯Spread
            </summary>
            <param name="sp"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadCreator.CreateSpreadFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            restore時，由xml節點產生spread
            </summary>
            <param name="xNode"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution">
            <summary>
            價差交易物件，代表每個策略的單次執行
            ----------------------------------------------------------------------
            狀態：
                任一筆單Fail/Error ==> 狀態為Fail/Error
                Cancel ==> 指的是使用者的Cancel整個價差交易物件，而非委託單的Cancel
                           委託單的Cancel要重送(倘若user一直刪單呢？)
                           若user的刪單要如何處理？==>改成cancel
                           所以由追價產生的刪單，必須跟user的刪單做區隔!!
            問題：
                整股處理方式？
                要定義追價/取消的操作!!
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._sequence">
            <summary>
            這個InstantSpreadExecution的序號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._cancelOutside">
            <summary>
            使用者在別處刪單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._buySellType">
            <summary>
            買賣別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._laterTradeType">
            <summary>
            組合的BalanceTrade類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._comboTradeType">
            <summary>
            交易執行方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._leg1">
            <summary>
            第一隻腳
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._leg2">
            <summary>
            第二隻腳
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._tickOffsetToOrder">
            <summary>
            加五個tick送單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._leg1TargetVolume">
            <summary>
            第一隻腳目標量(整股單位)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._leg2TargetVolume">
            <summary>
            第二隻腳目標量(整股單位)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._leg1TradedVolume">
            <summary>
            第一隻腳成交量(整股單位)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._leg2TradedVolume">
            <summary>
            第二隻腳成交量(整股單位)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._leg1TradedVolumeReal">
            <summary>
            第一隻腳實際成交量(以股數計算)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._leg2TradedVolumeReal">
            <summary>
            第一隻腳實際成交量(以股數計算)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._leg1PendingVolume">
            <summary>
            第一隻腳待執行量(整股單位)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._leg2PendingVolume">
            <summary>
            第二隻腳待執行量(整股單位)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._leg1ToLeg2Ratio">
            <summary>
            第一隻腳/第二隻腳的比率
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._leg1Account">
            <summary>
            第一隻腳下單帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._leg2Account">
            <summary>
            第二隻腳下單帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._leg1Orders">
            <summary>
            第一隻腳委託單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._leg2Orders">
            <summary>
            第二隻腳委託單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._message">
            <summary>
            訊息
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._state">
            <summary>
            狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._handledLeg1Trade">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._handledLeg2Trade">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.CancelingOrders">
            <summary>
            改用成static member，不知能否省下記憶體空間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution._spreadExecutions">
            <summary>
            所有的SpreadExecution
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.OnInstantSpreadEvent">
            <summary>
            SrpeadExecution事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.Sequence">
            <summary>
            序號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.Leg1Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.Leg2Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.Leg1TargetVolume">
            <summary>
            第一隻腳目標量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.Leg1PendingVolume">
            <summary>
            第一隻腳Pending量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.Leg2TargetVolume">
            <summary>
            第二隻腳目標量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.Leg2PendingVolume">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.BuySellType">
            <summary>
            買賣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.LaterTrade">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.State">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.CanUserCancel">
            <summary>
            是否可刪單？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.IsFinalized">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.TargetInformation">
            <summary>
            目標量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.MatchInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.StatusMessage">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.CanceledOutSide">
            <summary>
            使用者在別處刪委託單造成的刪單!!
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.SpreadExecutions">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Orders.BSType,System.Int32,System.Int32,CapitalPipe.LiteTrading.Spreads.ComboTradeType,CapitalPipe.LiteTrading.Spreads.ComboTradeBalanceTradeType,CapitalPipe.LiteTrading.Orders.AccountInfo,CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            
            </summary>
            <param name="tradingPair"></param>
            <param name="buySellType"></param>
            <param name="targetVolume"></param>
            <param name="tradeType"></param>
            <param name="laterType"></param>
            <param name="leg1Alias"></param>
            <param name="leg2Alias"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.Activate">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.CheckSendLeg1Order">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.CheckSendLeg2Order">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.CancelExecution">
            <summary>
            取消執行
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.RaisePrice">
            <summary>
            追價
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.CheckParameters">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.CheckFinalization">
            <summary>
            設定委託狀態!!
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.Leg1Order_OnOrderChange(System.Object,CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.Leg2Order_OnOrderChange(System.Object,CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.SetSequence(System.Int32)">
            <summary>
            
            </summary>
            <param name="seq"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution.AddSpreadExecution(CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution)">
            <summary>
            
            </summary>
            <param name="sexec"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadExecutionEventArgs.#ctor(CapitalPipe.LiteTrading.Spreads.InstantSpreadExecutionEventType,CapitalPipe.LiteTrading.Spreads.InstantSpreadExecution)">
            <summary>
            
            </summary>
            <param name="evType"></param>
            <param name="evExecution"></param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy._leg1Volume">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy._leg2Volume">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy._bsType">
            <summary>
            買進/賣出價差
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy._tradeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy._balanceType">
            <summary>
            在Simultaneously時不適用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy._currentExecution">
            <summary>
            目前正在執行的交易紀錄
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy._spreadExecuted">
            <summary>
            已執行的交易
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy.IsActive">
            <summary>
            是否啟用？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy.Leg1Volume">
            <summary>
            Leg1每次執行數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy.Leg2Volume">
            <summary>
            Leg2每次執行數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy.BS">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy.TradeExecType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy.BalanceTradeExecType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy.Description">
            <summary>
            策略說明
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy.#ctor(CapitalPipe.LiteTrading.Orders.BSType,System.Int32,System.Int32,System.Int32,CapitalPipe.LiteTrading.Spreads.SpreadValueType,CapitalPipe.LiteTrading.Spreads.ValueCompare,System.Double,CapitalPipe.LiteTrading.Spreads.ComboTradeType,CapitalPipe.LiteTrading.Spreads.ComboTradeBalanceTradeType,CapitalPipe.LiteTrading.Spreads.InstantSpread)">
            <summary>
            
            </summary>
            <param name="sp"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy.CheckExecuteStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy.ClearExecutedCount">
            <summary>
            清空已執行次數
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy.ToXMLNode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadComboTradeStrategy.ParseFromXMLNode(System.Xml.Linq.XElement,CapitalPipe.LiteTrading.Spreads.InstantSpread)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
            <param name="parentSpread"></param>
            <returns></returns>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy._lastExecuteTime">
            <summary>
            前次執行時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy._parentSpread">
            <summary>
            策略來源Spread
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy._isActive">
            <summary>
            是否啟用？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy._totalExecuteCount">
            <summary>
            總執行次數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy._currentExecutedCount">
            <summary>
            目前已執行次數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy._threshold">
            <summary>
            門檻值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy._baseSpreadType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy._relation">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy.ParentSpread">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy.IsActive">
            <summary>
            是否啟用？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy.TotalExecuteCount">
            <summary>
            執行次數上限
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy.CurrentExecutedCount">
            <summary>
            已執行
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy.SpreadValueUsing">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy.ValueRelation">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy.Threshold">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy.ExecutonCondition">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy.Description">
            <summary>
            策略說明
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy.ToXMLNode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy.CheckExecuteStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.InstantSpreadStrategy.GetValueCompareSymbol(CapitalPipe.LiteTrading.Spreads.ValueCompare)">
            <summary>
            
            </summary>
            <param name="cmp"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.SpreadValueType">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.ValueCompare">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.LaterTradeType">
            <summary>
            優先腳送單後，第二隻腳的處理方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.LaterTradeType.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.LaterTradeType.Propotional">
            <summary>
            依比例
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.LaterTradeType.SendAtPreviousOrderFilled">
            <summary>
            只有在優先腳完全成交後才送另一隻腳
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.ManualComboTrade">
            <summary>
            手動交易
            ----------------------------------------------------------------------
            Beta Ver : Basket單在另一邊完全成交時，才會送出(單筆basket單)
                    Basket單的依比例送出，似乎需要多一些思考
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.ManualComboTrade._comboTrades">
            <summary>
            所有的組合交易
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.Leg1Term">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.Leg2Term">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.Leg1TargetVolume">
            <summary>
            第一隻腳目標量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.Leg1PendingVolume">
            <summary>
            第一隻腳Pending量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.Leg2TargetVolume">
            <summary>
            第二隻腳目標量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.Leg2PendingVolume">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.BuySellType">
            <summary>
            買賣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.LaterTrade">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.State">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.IsFinalized">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.StatusMessage">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.ComboTrades">
            <summary>
            所有的組合交易
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.#ctor(CapitalPipe.LiteTrading.Spreads.TradingPair,CapitalPipe.LiteTrading.Orders.BSType,System.Double,CapitalPipe.LiteTrading.Spreads.ComboTradeType,CapitalPipe.LiteTrading.Spreads.LaterTradeType,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="tradingPair"></param>
            <param name="buySellType"></param>
            <param name="targetVolume"></param>
            <param name="tradeType"></param>
            <param name="laterType"></param>
            <param name="leg1Alias"></param>
            <param name="leg2Alias"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.Activate">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.UpdatePositionInfo(System.Collections.Generic.Dictionary{System.String,CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo})">
            <summary>
            
            </summary>
            <param name="qtyInfos"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.UpdateOrderedQtyInfos(System.Collections.Generic.Dictionary{System.String,CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo},System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="qtyInfos"></param>
            <param name="code"></param>
            <param name="iLeg"></param>
            <param name="qty"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.CheckSendLeg1Order">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.CheckSendLeg1CommodityOrder">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.CheckSendLeg1BasketOrder">
            <summary>
            暫時不實做
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.CheckSendLeg2Order">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.CheckSendLeg2CommodityOrder">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.CheckSendLeg2BasketOrder">
            <summary>
            暫時不實做
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.CheckParameters">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.CheckFinalization">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.Leg1Order_OnOrderChange(System.Object,CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.Leg2Order_OnOrderChange(System.Object,CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.ManualComboTrade.AddManualComboTrade(CapitalPipe.LiteTrading.Spreads.ManualComboTrade)">
            <summary>
            手動組合交易
            </summary>
            <param name="comboTrade"></param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.PairFormula.Undefined">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.PairFormula.Subscract">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.PairFormula.Summation">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.PairFormula.Custom">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.PairDirectionRelationship">
            <summary>
            Pair組合的價格方向關係
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.PairDirectionRelationship.InverseDirection">
            <summary>
            反向配對 ==> 一般而言是這種類型的，一買對應一賣
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.PairDirectionRelationship.SameDirection">
            <summary>
            同向配對 ==> 可以用在一倍槓桿or類似反向報酬的商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.PairDirectionRelationship.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.TradeRobot">
            <summary>
            控制組合交易的機器人
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradeRobot.RobotUUID">
            <summary>
            這個robot的guid
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradeRobot.AutoBuy">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradeRobot.BuyRobotStatus">
            <summary>
            買進Robot的狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradeRobot.SellRobotStatus">
            <summary>
            賣出Robot的狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradeRobot.AutoSell">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradeRobot.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradeRobot.BuyMatchVolume">
            <summary>
            買進成交
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradeRobot.SellMatchVolume">
            <summary>
            賣出成交
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradeRobot.MatchVolumeInfo">
            <summary>
            買賣成交資訊
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradeRobot.UpdateAccountAlias(System.String)">
            <summary>
            因需要套用帳號新增功能
            </summary>
            <param name="alias"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradeRobot.CreateXMLConfig(System.Xml.Linq.XElement)">
            <summary>
            產生一個字串的config
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradeRobot.ApplyXMLConfig(System.Xml.Linq.XElement)">
            <summary>
            套用一個字串的config
            </summary>
            <param name="template"></param>
        </member>
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.Spreads.TradeRobot.Destroy" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradeRobot.UpdateThreoraticalPrice">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.RobotStatus">
            <summary>
            交易Robot的運作狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.BasketAutoBuySellRobot.BasketAutoBuySellRobotDescription">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.BasketAutoBuySellRobot.BasketAutoBuySellRobotGUID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.BasketAutoBuySellRobot.RobotUUID">
            <summary>
            這個robot的guid
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.BasketAutoBuySellRobot.AutoBuy">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.BasketAutoBuySellRobot.AutoSell">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.BasketAutoBuySellRobot.BuyMatchVolume">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.BasketAutoBuySellRobot.SellMatchVolume">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.BasketAutoBuySellRobot.BuyRobotStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.BasketAutoBuySellRobot.SellRobotStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.BasketAutoBuySellRobot.Description">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.BasketAutoBuySellRobot.CreateBasketAutoBuySellRobot(CapitalPipe.LiteTrading.Spreads.TradingPairLeg,System.String)">
            <summary>
            
            </summary>
            <param name="strConfig"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.BasketAutoBuySellRobot.RegisterBasketAutoBuySellRobot">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot">
            <summary>
            一般商品的自動交易Robot
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot._basePair">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot._thisLeg">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot._buyRobot">
            <summary>
            買進Robot
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot._sellRobot">
            <summary>
            賣出Robot
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot._baseCommodity">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot._oppositeLeg">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot._buyAtOppositeSide">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot._sellAtOppositeSide">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot._account">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot._buyAdjust">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot._sellAdjust">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.CommodityAutoBuySellRobotDescription">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.CommodityAutoBuySellRobotGUID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.RobotUUID">
            <summary>
            這個robot的guid
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.BaseCommodity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.AutoBuy">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.AutoSell">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.BuyVolumeLimit">
            <summary>
            數量上限
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.BuyOrderVolume">
            <summary>
            委託數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.BuyOrderPreference">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.SellVolumeLimit">
            <summary>
            數量上限
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.SellOrderVolume">
            <summary>
            委託數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.SellOrderPreference">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.BuyMatchVolume">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.SellMatchVolume">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.BuyAtCounterPartSide">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.SellAtCounterPartSide">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.BuyPriceAdjust">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.SellPriceAdjust">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.BuyRobotStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.SellRobotStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.TradeAccount">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.Description">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.#ctor(CapitalPipe.LiteTrading.Spreads.TradingPair,CapitalPipe.LiteTrading.Spreads.TradingPairLeg,CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="baseCmd"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.SellRobot_OnRobotStateChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.BuyRobot_OnRobotStateChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.Robot_OnAutoOrderRobotMatch(System.Object,CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="tr"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.ClearBuyMatchVolume">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.ClearSellMatchVolume">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.UpdateAccountAlias(System.String)">
            <summary>
            
            </summary>
            <param name="alias"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.ApplyXMLConfig(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xConfig"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.CreateXMLConfig(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xConfig"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.UpdateThreoraticalPrice">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.Destroy">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.CreateCommodityAutoBuySellRobot(CapitalPipe.LiteTrading.Spreads.TradingPairLeg,System.String)">
            <summary>
            
            </summary>
            <param name="strConfig"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.CommodityAutoBuySellRobot.RegisterCommodityAutoBuySellRobot">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.SpreadCombination">
            <summary>
            ----------------------------------------------------------
            Reference Counting
              提供一個鎖定物件的機制
              使用者自行決定是否計入使用中
              使用方式：  
                呼叫AddReferenceCounting()
                若該計數大於零，則不允許編輯、刪除
                注意: 
                使用完必須ReleaseReferenceCounting()
                否則會造成該物件無法編輯、刪除
            ------------------------------------------------------------------------
            由於使用script的速度較慢，故必須提供兩種機制：
            (1) 使用python script執行的spread
            (2) 使用c#編譯出的assembly，這類型的spread有較佳的執行速度，主要提供client
                客製化整合使用
            如何整合這兩種類型的spread？這個有待討論(統一期應該會有這個需求)
            ------------------------------------------------------------------------
            20140829 修改By Otto
                將SpreadCommodityPair改名為SpreadCombination
                加入一個TickValue欄位
                CalculatePrice未考慮thread safe，新增[MethodImpl(MethodImplOptions.Synchronized)]屬性來控制
                新增_spreadLock變數來控制修改時_quoteA/_quoteB等的控制權
                  ==> 原先這個物件是要避免在multithreading的dispose的過程會出錯，但取消這個物件，改由user自行負責!!
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.SpreadCombination.GUID">
            <summary>
            價差組合GUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.SpreadCombination.UnitA">
            <summary>
            A商品單位
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.SpreadCombination.UnitB">
            <summary>
            B商品單位
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.SpreadCombination.SpreadName">
            <summary>
            價差組合名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.SpreadCombination.TickValue">
            <summary>
            Tick值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.SpreadCombination.Expressions">
            <summary>
            自訂運算式
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.SpreadCombination.CommodityA">
            <summary>
            A商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.SpreadCombination.CommodityB">
            <summary>
            B商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.SpreadCombination.QuoteA">
            <summary>
            A報價，如果沒有報價則回傳null
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.SpreadCombination.QuoteB">
            <summary>
            B報價，如果沒有報價則回傳null
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.SpreadCombination.ReferenceCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.#ctor(System.String,System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Int32,CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Int32,System.Decimal,System.String)">
            <summary>
            價差組合
            </summary>
            <param guid="spreadName"></param>
            <param guid="cmdA"></param>
            <param guid="unitA"></param>
            <param guid="cmdB"></param>
            <param guid="unitB"></param>
            <param guid="caculator"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.AmendSpreadCombination(System.String,CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Int32,CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Int32,System.Decimal,System.String)">
            <summary>
            修改spread參數
            </summary>
            <param name="spreadName"></param>
            <param name="cmdA"></param>
            <param name="unitA"></param>
            <param name="cmdB"></param>
            <param name="unitB"></param>
            <param name="tickValue"></param>
            <param name="expressions"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.Quote_OnQuoteEvent(System.Object,CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.ForceSpreadManagerFireEvent(CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventType)">
            <summary>
            讓SpreadManager發送事件
            </summary>
            <param name="evType"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.AddReferenceCounting">
            <summary>
            使用者自行決定是否計入使用中
            若該計數大於零，則不允許編輯、刪除
            注意: 
            使用完必須ReleaseReferenceCounting
            否則會造成該物件無法編輯、刪除
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.ReleaseReferenceCounting">
            <summary>
            使用者自行決定是否計入使用中
            若該計數大於零，則不允許編輯、刪除
            注意: 
            使用完必須ReleaseReferenceCounting
            否則會造成該物件無法編輯、刪除
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.CompileScript">
            <summary>
            編譯使用者定義Script
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.GetRefPrice">
            <summary>
            代入A、B商品的參考價計算
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.GetLastPrice">
            <summary>
            代入A、B商品的成交價計算
            </summary>
            <returns></returns>
        </member>
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.GetCalculeBidPrice" 中格式錯誤的 XML 註解 -->
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.GetCalculeAskPrice" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.CalculatePrice(System.Decimal,System.Decimal)">
            <summary>
            計算價格
            </summary>
            <param name="calPriA"></param>
            <param name="calPriB"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.GetMktQty(System.Boolean)">
            <summary>
            一般單的剩量
            最佳ask量=min(A_ask量/A商品設定量,B_bid量/B商品設定量)
            最佳bid量=min(A_bid量/A商品設定量,B_ask量/B商品設定量)
            </summary>
            <param name="isBid"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.ReleaseScriptObjects">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.ReleaseQuotes">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombination.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager">
            <summary>
            用來管理Spread資訊的Manager
            ------------------------------------------------------------------------
            討論：系統物件的新增/修改/移除/取代機制
                ==> 若提供系統
            物件的新增：(Add)
                這個比較簡單，直接發送一個新增事件，參數是被新增的物件
            物件的移除：(Remove)
                系統發出物件移除事件，所有使用可能被dispose物件的任何物件都必須監控這個事件
                並在物件被移除時做適當的處置
                物件移除的實做不會是馬上執行，而是被放入一個待移除的list之中
                在經過一個指定時間後才執行實際的移除
            物件的取代：(Replace)
                取代機制通常發生於當物件太複雜很難透過簡單的參數調整來完成修改任務時，會以一個
                新的物件取代舊的物件。通常發生於使用guid控管的物件集合(因為guid不會變，所以…)
                使用Replace機制必須透過兩個階段發送事件
                (a) 物件將要被取代，參數是要被替換的舊物件
                    這個被取代的舊物件處置方式同被移除的物件
                (b) 物件已經被取代，參數是替換舊物件的新物件
            物件的修改：(Change)
                套用修改前，要發送ChangesWillApply事件
                套用修改後，要發送ChangesApplied事件
            -------------------------------------------------------------
            20140829 修改by Otto
                新增常數SpreadConfigEventID，用來取代"SPREAD_ID"這個魔術數字
                取消發送systemconfiguration事件，改由spread事件負責
                要避免魔術數字的出現
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager._toBeRemoved">
            <summary>
            待移除的SpreadCombination
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.OnSpreadCombinationEvent">
            <summary>
            Event
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.SpreadConfigEventID">
            <summary>
            Spread事件的ID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.XMLTag_SpreadPairs">
            <summary>
            儲存所有spread節點的xml tag值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.XMLTag_TickValue">
            <summary>
            TickValue儲存時使用的xml tag值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.XMLTag_Expressions">
            <summary>
            Expressions存儲時使用的xml tag值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.DisposeObjectDelaySeconds">
            <summary>
            移除spread combination的遞延時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.DefaultSettingFile">
            <summary>
            預設值的檔案
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.DefaultManager">
            <summary>
            預設的商品組合管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.GetSpreadCombination(System.String)">
            <summary>
            取得價差組合
            </summary>
            <param guid="guid"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.GetAllSpreadCombinationNames">
            <summary>
            取得商品組合名稱
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.GetAllSpreadCombinations">
            <summary>
            取得所有的商品組合
            </summary>
            <returns>回傳全部商品組合，若沒有投資組合會回傳null</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.AddSpreadCombination(System.String,CapitalPipe.LiteTrading.Spreads.SpreadCombination)">
            <summary>
            增加商品組合
            </summary>
            <param guid="guid"></param>
            <param guid="kvpair"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.RemoveSpreadCombination(System.String)">
            <summary>
            移除商品組合
            ---------------------------------------------------------
            20140829 修改By Otto
                舊物件在事件結束後dispose掉
            </summary>
            <param guid="guid"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.EditSpreadCombination(System.String,CapitalPipe.LiteTrading.Spreads.SpreadCombination)">
            <summary>
            修改商品組合
            由於spread比較複雜，先不實做修改，改以取代方式行之
            -------------------------------------------------------
            20140829 修改by Otto
                WillAply時，event標的改設成原物件
                Applied時，event標的設成新物件
                舊物件在事件結束後dispose掉
            </summary>
            <param guid="guid"></param>
            <param guid="kvpair"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.AddToBeRemovedObject(CapitalPipe.LiteTrading.Spreads.SpreadCombination)">
            <summary>
            加入一個待被移除的物件
            </summary>
            <param name="sp"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.DefaultEventCenter_OnSystemTimerTick(System.Object,System.EventArgs)">
            <summary>
            判斷是否要移除物件的timer tick事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.FireEvent(CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventArgs)">
            <summary>
            派送事件
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.SaveSettings(System.String)">
            <summary>
            儲存使用者商品組合設定
            </summary>
            <param guid="fn"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombinationManager.LoadSettings(System.String)">
            <summary>
            
            </summary>
            <param name="fn"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventType">
            <summary>
            Spread組合的事件類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventType.Add">
            <summary>
            新增
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventType.OnQuoteChanged">
            <summary>
            報價改變
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventType.OnStatusChanged">
            <summary>
            狀態改變
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventType.ChangesWillApply">
            <summary>
            參數即將改變(目前未使用)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventType.ChangesApplied">
            <summary>
            參數改變(目前未使用)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventType.WillReplace">
            <summary>
            物件即將被取代
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventType.Replaced">
            <summary>
            物件已被取代
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventType.Remove">
            <summary>
            移除
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventArgs.EventSpread">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventArgs.EventType">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventArgs.#ctor(CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventType,CapitalPipe.LiteTrading.Spreads.SpreadCombination)">
            <summary>
            
            </summary>
            <param name="evType"></param>
            <param name="eventPair"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.SpreadCombinationEventHandler">
            <summary>
            事件的handler
            </summary>
            <param name="sender">事件來源</param>
            <param name="args">事件參數</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.RobotCreater">
            <summary>
            儲存RobotCreater的資料
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.RobotCreater.RobotCraterMathod">
            <summary>
            用來建立Robot的方法
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.RobotCreater._robotName">
            <summary>
            要顯示的Robot名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.RobotCreater._robotGUID">
            <summary>
            Robot的GUID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.RobotCreater._legType">
            <summary>
            leg類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.RobotCreater._createMethod">
            <summary>
            建立robot的方法
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.RobotCreater.RobotName">
            <summary>
            robot的顯示名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.RobotCreater.RobotGUID">
            <summary>
            robot的guid
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.RobotCreater.LegType">
            <summary>
            掛單那隻腳的類型(basket或是一般商品)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.RobotCreater.CreateMethod">
            <summary>
            建立Robot的方法
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.RobotCreater.Self">
            <summary>
            For Binding~~~
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.RobotCreater.#ctor(System.String,System.String,CapitalPipe.LiteTrading.Spreads.TradingPairLegType,CapitalPipe.LiteTrading.Spreads.RobotCreater.RobotCraterMathod)">
            <summary>
            Constructor
            </summary>
            <param name="robotName">要顯示的Robot名稱</param>
            <param name="robotGUID">Robot的GUID</param>
            <param name="legType">掛單那隻腳的類型(basket或是一般商品)</param>
            <param name="createMethod">這個Robot的creater</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.RobotCreater.CreateTradeRobot(CapitalPipe.LiteTrading.Spreads.TradingPairLeg,System.String)">
            <summary>
            建立Robot的creater方法
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.TradeRobotCreaterManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradeRobotCreaterManager._creaters">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradeRobotCreaterManager._defaultManager">
            <summary>
            預設的管理員
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradeRobotCreaterManager.CommodityRobotCreaters">
            <summary>
            一般商品的robotcreater
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradeRobotCreaterManager.BasketRobotCreaters">
            <summary>
            Basket商品的robotcreater
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradeRobotCreaterManager.AllCreaters">
            <summary>
            所有的robotcreater
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradeRobotCreaterManager.DefaultManager">
            <summary>
            預設的robotcrater管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradeRobotCreaterManager.CreateRobot(System.String,CapitalPipe.LiteTrading.Spreads.TradingPairLeg,System.String)">
            <summary>
            建立robot
            </summary>
            <param name="robotGuid"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradeRobotCreaterManager.GetRobotCreater(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradeRobotCreaterManager.RegisterRobotCreater(CapitalPipe.LiteTrading.Spreads.RobotCreater)">
            <summary>
            註冊RobotCreater
            </summary>
            <param name="robotGuid"></param>
            <param name="robotCreater"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.TradingPair">
            <summary>
            交易組合
            ------------------------------------
            分成兩隻腳
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo">
            <summary>
            紀錄部位應有數量用的物件
            每個可交易商品都有一個
            ==>理論上leg1與leg2不會重複，但是為了防止意外狀態，故做這樣的設計
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo._code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo._adjFlag">
            <summary>
            調整旗標
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo._theoQtyLeg1">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo._orderedQtyLeg1">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo._theoQtyLeg2">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo._orderedQtyLeg2">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo.Code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo.AdjustFalg">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo.TheoraticalQuantity">
            <summary>
            理論數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo.OrderedQuantity">
            <summary>
            委託中數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo.TheoQtyLeg1">
            <summary>
            第一隻腳理論數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo.TheoQtyLeg2">
            <summary>
            第二隻腳理論數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo.OrderedQtyLeg1">
            <summary>
            第一隻腳委託量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo.OrderedQtyLeg2">
            <summary>
            第二隻腳委託量
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo.SetRelativeMatchAdjustFlag">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo.ClearAdjustFlag">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.TradingPair.PairRatioRelationship">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._pairLock">
            <summary>
            控管Pair修改時的物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._pairUUID">
            <summary>
            這個pair的UUID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._currentHoldings">
            <summary>
            目前持有數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._pairRatio">
            <summary>
            組合倍數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._pairBid">
            <summary>
            spread的bid
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._pairAsk">
            <summary>
            spread的ask
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._pairSpread">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._ratioRelation">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._relationship">
            <summary>
            組合關係
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._pairFormula">
            <summary>
            組合公式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._leg1">
            <summary>
            第一隻腳商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._leg2">
            <summary>
            第二隻腳商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._leg1Robot">
            <summary>
            控制第一隻腳的Robot
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._leg2Robot">
            <summary>
            控制第二隻腳的Robot
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._bidWarnningLevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._askWarnningLevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._leg1BidIndicator">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._leg2BidIndicator">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._leg1AskIndicator">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._leg2AskIndicator">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._positionMap">
            <summary>
            部位表
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._comboTrades">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair._parentManager">
            <summary>
            
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Spreads.TradingPair.PropertyChanged">
            <summary>
            屬性改變事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair.XMLTag_PairUUID">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair.XMLTag_Leg1Entry">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair.XMLTag_Leg2Entry">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair.XMLTag_PairRelationship">
            <summary>
            組合關係
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair.XMLTag_PairRatio">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPair.XMLTag_Formula">
            <summary>
            公式
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.PairUUID">
            <summary>
            這個pair的uuid
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.CurrentHoldings">
            <summary>
            目前持有的數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Formula">
            <summary>
            組合公式
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.PairRatio">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.RatioRelation">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg1AutoBuy">
            <summary>
            啟用/停用第一隻腳自動買進
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg1AutoSell">
            <summary>
            啟用/停用第一隻腳自動賣出
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg2AutoBuy">
            <summary>
            啟用/停用第二隻腳自動買進
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg2AutoSell">
            <summary>
            啟用/停用第二隻腳自動賣出
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Relation">
            <summary>
            組合關係
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg1">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg2">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg1Robot">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg2Robot">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg1RobotDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg2RobotDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.BidWarnningLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.AskWarnningLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg1Item">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg2Item">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfos">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.PairBidIndicator">
            <summary>
            價差的買進指標
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.PairAskIndicator">
            <summary>
            價差賣出指標
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg1BidIndicator">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg2BidIndicator">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg1AskIndicator">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Leg2AskIndicator">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.IndicatorSelf">
            <summary>
            價差賣出指標
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.PairSpread">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.Self">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPair.ParentManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.#ctor(CapitalPipe.LiteTrading.Spreads.TradingPairManager)">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.AddLogMessage(System.String)">
            <summary>
            加入Log訊息
            </summary>
            <param name="strMsg"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.SetRatio(System.Double)">
            <summary>
            
            </summary>
            <param name="ratio"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.#ctor(CapitalPipe.LiteTrading.Spreads.TradingPairManager,CapitalPipe.LiteTrading.Spreads.TradingPairLeg,CapitalPipe.LiteTrading.Spreads.TradingPairLeg,CapitalPipe.LiteTrading.Spreads.PairDirectionRelationship,CapitalPipe.LiteTrading.Spreads.PairFormula,System.Double)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.AddComboTrade(CapitalPipe.LiteTrading.Spreads.ManualComboTrade)">
            <summary>
            
            </summary>
            <param name="comboTrade"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.AddHoldings(System.Double)">
            <summary>
            
            </summary>
            <param name="dblVal"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.UpdateQuantityInfo(System.Int16)">
            <summary>
            iLeg ==>由第一隻腳成交or第二隻腳成交發動的調整
            iLeg == -1
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.ClearHedgeFlags">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.SetRatioRelation(CapitalPipe.LiteTrading.Spreads.TradingPair.PairRatioRelationship)">
            <summary>
            
            </summary>
            <param name="rel"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.HandleManualTrade">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.UpdateSimpleBidAskIndicators">
            <summary>
            簡易的價差值
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.SetCurrentHoldings(System.Double)">
            <summary>
            
            </summary>
            <param name="holdings"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.FireSelfEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.FireIndicatorSelfEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.SetRobot(System.Int32,CapitalPipe.LiteTrading.Spreads.TradeRobot)">
            <summary>
            
            </summary>
            <param name="iLeg"></param>
            <param name="robot"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.Destroy">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.ParseFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.SaveToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPair.FirePropertyChangedEvent(System.String)">
            <summary>
            發送屬性改變事件
            </summary>
            <param name="strField"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.TradingPairLegType">
            <summary>
            交易配對組合的單腳類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLegType.Commodity">
            <summary>
            一般商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLegType.Basket">
            <summary>
            Basket組合(超過二個都算Basket)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLegType.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.TradingPairManager">
            <summary>
            /
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary">
            <summary>
            部位統計資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary._code">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary._baseCommodity">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary._adjFlag">
            <summary>
            Flag = 1, 2, 4, 8, 16
            1 ==> From 相對邊成交 Adjustment
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary._currentPosition">
            <summary>
            計算部位 ==> 來自所有TradingPair產生的交易(自動下單/組合手動單/避險單)。不計入其他程式下的單(ex:手動閃電下單)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary._realPosition">
            <summary>
            真實部位 ==> 來自收到的成交回報 + 昨日庫存
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.Code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.AdjustFlag">
            <summary>
            調整Flag
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.TargetQuantity">
            <summary>
            目標持有數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.TargetQuantityString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.ManualOrderedQuantity">
            <summary>
            手動委託中的數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.ManualOrderedQuantityString">
            <summary>
            手動委託中的數量
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.CurrentPosition">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.CurrentPositionString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.RealPosition">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.RealPositionString">
            <summary>
            真實部位
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.AutoHedgedOrderedQuantity">
            <summary>
            自動避險單
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.AutoHedgedOrderedQuantityString">
            <summary>
            真實部位
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.DifferenceToAdjust">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.DifferenceToAdjustString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.DifferenceNotIncludeHedgeOrders">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.DifferenceNotIncludeHedgeOrdersString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.ShowInRoundLots">
            <summary>
            以整股方式表示
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.AddPairQuantityInfo(CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo)">
            <summary>
            
            </summary>
            <param name="qtyInfo"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.SetHedgeOrderRemainQuantity(System.Int32)">
            <summary>
            
            </summary>
            <param name="qty"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.UpdateCurrentPosition(System.Int32)">
            <summary>
            
            </summary>
            <param name="qty"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.UpdateRealPosition(System.Int32)">
            <summary>
            
            </summary>
            <param name="qty"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.UpdatePairQuantityInfo(System.Byte)">
            <summary>
            調整數量
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.ClearHedgeAdjustFlag">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.SetHedgeAdjustFlag">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummary.SetCurrentPosition(System.Int32)">
            <summary>
            設定目前部位數量
            </summary>
            <param name="pos"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AccControlType">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AccountControlEntry">
            <summary>
            交易帳號控制
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AccountControlEntry.CtrlType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AccountControlEntry.BuySellType">
            <summary>
            買賣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AccountControlEntry.SelectedCommodityExchange">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AccountControlEntry.AccCtrlKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AccountControlEntry.Account">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AccountControlEntry.Preference">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AccountControlEntry.FormatedPreference">
            <summary>
            格式化的委託條件輸出
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AccountControlEntry.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AccountControlEntry.ParseFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
            <returns></returns>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._lastCheckAutoAdjust">
            <summary>
            下次自動調整時間點
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._pairManagerLock">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._settingsDirty">
            <summary>
            設定檔Dirty
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._autoAdjustDifference">
            <summary>
            自動調整差額
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._basketOrderCountThreshold">
            <summary>
            超過5筆的調整單才打包送basket單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._hedgeOrderAccount">
            <summary>
            避險委託帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._autoAdjustDelaySeconds">
            <summary>
            自動調整的延遲秒數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._riskCtrlCurrency">
            <summary>
            風控幣別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._riskCtrlSingleEntryMktValueLimit">
            <summary>
            單筆下單上限
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._positionConfirmed">
            <summary>
            部位已確認？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._objectChecked">
            <summary>
            物件已確認
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._logFile">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._positionSrc">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._logs">
            <summary>
            Log訊息
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._handledTransactions">
            <summary>
            已處理的成交資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._accUsingType">
            <summary>
            0:使用全域Alias
            1:使用帳號控制
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._accCtrlByCommodities">
            <summary>
            依商品控管
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._accCtrlByExchange">
            <summary>
            依交易所控管
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._quantityInfos">
            <summary>
            不用ObservableCollection ==> 原因:可能會multithread修改這個資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._hedgeOrders">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._hedgedBasketOrders">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._tradingPairs">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._volumeInControls">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._notAutoAdjustCmds">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._tmpQtyMap">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._adjustHedgeOnly">
            <summary>
            只調整避險部位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._speedCtrlInterval">
            <summary>
            速度控制的秒數基準
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._speedCtrlAdjCountLimit">
            <summary>
            速度控制的筆數上限
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._speedCtrlItems">
            <summary>
            送單筆數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._antiSelfBuySellInterval">
            <summary>
            防自成交的時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._antiSelfBuySellCrossCountLimit">
            <summary>
            >=這個值表示在自成交
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._latestOrderTerms">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._hedgeOrderCountLimit">
            <summary>
            避險委託次數上限
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._currentHedgeOrderSentCount">
            <summary>
            已送出避險委託次數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._tradeThroughStartTracingInterval">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._tradeThroughWarningInterval">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._abnormalHedgeOrderMatchInterval">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._abnormalHedgeOrderMatchRate">
            <summary>
            
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Spreads.TradingPairManager.OnQuantityInfoCollectionChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Spreads.TradingPairManager.OnPositionChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Spreads.TradingPairManager.OnLogMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager._defaultManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager.String_SettingFileName">
            <summary>
            設定檔的檔名部份
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager.String_LogFileName">
            <summary>
            交易的Log紀錄
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairManager.XMLTag_PairEntry">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.ShowQuantityInRoundLots">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.IsPositionConfirmed">
            <summary>
            部位是否已確認？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.ObjectStatusChecked">
            <summary>
            物件狀態是否已檢查？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.CanGoAutoTrading">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AutoAdjustPosition">
            <summary>
            是否自動調整
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AutoAdjustDelaySeconds">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AdjustHedgePositionOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.HedgeOrderAlias">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.TradingPairs">
            <summary>
            目前管理員所管理的所有交易配對
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AccountControlEntriesByCommodity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AccountControlEntriesByExchange">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PairQuantitySummaries">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.Positions">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.IsSettingsDirty">
            <summary>
            設定檔是否是Dirty？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AccountControlUsing">
            <summary>
            帳號控制類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.RiskControlBaseCurrency">
            <summary>
            風控計算的幣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.RiskControlSingleEntryMarketValueLimit">
            <summary>
            單筆下單上限值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.RiskControlSingleEntryMarketValueLimitInThousands">
            <summary>
            單筆下單上限值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.SpeedControlInterval">
            <summary>
            速度控制的秒數基準
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.SpeedControlAutoAdjustLimit">
            <summary>
            速度控制的筆數上限
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AntiSelfBuySellControlInterval">
            <summary>
            防自成交的時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AntiSelfBuySellCrossCountLimit">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.HedgeOrderCountLimit">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.HedgeOrderSentCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.TradeThroughStartTracingInterval">
            <summary>
            穿價起算秒數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.TradeThroughWarningInterval">
            <summary>
            穿價判定秒數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AbnormalHedgeOrderMatchInterval">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AbnormalHedgeOrderMatchRateInPercentage">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.VolumeInControls">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.NotAutoAdjustCommodities">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.Logs">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.DefaultManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.DefaultSettingFile">
            <summary>
            預設的設定檔
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairManager.DefaultLogFile">
            <summary>
            /
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.HandleTransaction(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            處理成交資料
            </summary>
            <param name="tr"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.DefaultEventCenter_OnSystemHDTimerTick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.DefaultEventCenter_OnSystemTimerTick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.RefreshPositions">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.InitalizeLogFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.PositionSrc_OnPositionSourceChanged(System.Object,CapitalPipe.LiteTrading.LitePositions.LitePositionSourceEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.UpdatePositions">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.UpdatePosition(CapitalPipe.LiteTrading.LitePositions.LitePosition)">
            <summary>
            
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AddTradingPair(CapitalPipe.LiteTrading.Spreads.TradingPair)">
            <summary>
            加入Pair
            </summary>
            <param name="pair"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.RemoveTradingPair(CapitalPipe.LiteTrading.Spreads.TradingPair)">
            <summary>
            移除Pair
            </summary>
            <param name="pair"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.UpdatePositionQuantityInfo(CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo[])">
            <summary>
            
            </summary>
            <param name="qtys"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.UpdatePositionHedgeOrderQuantityInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.CheckAutoAdjustPosition">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.DoAutoAdjustPosition">
            <summary>
            執行調整
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.CheckSpeedLimit(CapitalPipe.LiteTrading.Orders.OrderTerm)">
            <summary>
            如果符合條件 ==> 將ordTerm放到queue中，(滿了的話 ==> 移除第一筆？在第一筆的時間已經逾期才能移除)
            </summary>
            <param name="ordTerm"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.CheckAntiBuySell(CapitalPipe.LiteTrading.Orders.OrderTerm)">
            <summary>
            
            </summary>
            <param name="ordTerm"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.BasketOrder_OnOrderChange(System.Object,CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.Ord_OnOrderChange(System.Object,CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.FireQuantityInfoCollectionChangedEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.AddLogMessage(System.String)">
            <summary>
            加入log訊息，會在前面加上時間
            </summary>
            <param name="strLog"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.LoadFromFile">
            <summary>
            自檔案載入
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.LoadFromFile(System.String)">
            <summary>
            自檔案載入
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.SaveToFile">
            <summary>
            儲存到檔案
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.SaveToFile(System.String)">
            <summary>
            儲存到檔案
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.SumMatchQuantities(System.Collections.Generic.LinkedList{CapitalPipe.LiteTrading.Orders.Transaction},System.String)">
            <summary>
            
            </summary>
            <param name="trs"></param>
            <param name="strCode"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairManager.SumMatchQuantities(System.Collections.Generic.LinkedList{CapitalPipe.LiteTrading.Orders.Transaction})">
            <summary>
            
            </summary>
            <param name="trs"></param>
            <param name="strCode"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.TradingPairRelationship">
            <summary>
            交易組合的數量關係
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairRelationship.FixedRatio">
            <summary>
            固定比率
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairRelationship.MarketValue">
            <summary>
            市值對齊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairRelationship.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.TradingPiarLegEventType">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.TradingPiarLegEventArgs">
            <summary>
            交易Pair的Leg改變事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPiarLegEventArgs.EventLeg">
            <summary>
            發生事件那隻腳
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPiarLegEventArgs.EventCommodity">
            <summary>
            引發事件的商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPiarLegEventArgs.EventType">
            <summary>
            事件類型
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPiarLegEventArgs.#ctor(CapitalPipe.LiteTrading.Spreads.TradingPairLeg,CapitalPipe.LiteTrading.Commodities.CommodityInfo,CapitalPipe.LiteTrading.Spreads.TradingPiarLegEventType)">
            <summary>
            Constructor
            </summary>
            <param name="leg"></param>
            <param name="cmd"></param>
            <param name="evType"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.TradingPiarLegEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.TradingPairLeg">
            <summary>
            交易配對組合的其中一隻腳
            幣別問題
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._alias">
            <summary>
            下單的alias
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._legType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._volumeLastSettle">
            <summary>
            前日收盤的數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._todayVolume">
            <summary>
            當日交易數量
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._basket">
            <summary>
            Basket型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._unitPriceMethod">
            <summary>
            均價計算方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._basketCalType">
            <summary>
            Basket的計算方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._legPriceUseCustomFormula">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._customFormulaAlgoritmObj">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._basketUnderlying">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._basketUnderlyingCode">
            <summary>
            Basket標的商品碼(簡碼/連續碼)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._basketMultiplier">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._basketFixedValue">
            <summary>
            固定金額的basket
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._baseCommodity">
            <summary>
            商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._baseCmdCode">
            <summary>
            商品簡碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._calUseRoundLot">
            <summary>
            計算使用整股單位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._baseCurrency">
            <summary>
            基準幣別(計算使用)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._tradeUseRoundLot">
            <summary>
            交易使用整股單位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._parentPair">
            <summary>
            來源的配對組合
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._listenQuotes">
            <summary>
            目前監聽的quotes
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._manualTrades">
            <summary>
            目前下的手動單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg._isError">
            <summary>
            狀態是否有誤
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.OnTradingPairLegEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.XMLTag_LegType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.XMLTag_LegItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.XMLTag_LegIsBasket">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.XMLTag_LegCommodity">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.XMLTag_LegBasket">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.XMLTag_BasketCalculateType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.XMLTag_LegFixedAmount">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.XMLTag_LegUnderlying">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.XMLTag_LegMultiplier">
            <summary>
            Bakset計算時，使用的乘數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.XMLTag_UnitPriceCalculateMethod">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.XMLTag_CalculateUseRoundLot">
            <summary>
            計算使用整股單位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.XMLTag_TradeUseRoundLot">
            <summary>
            交易使用整股單位
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.XMLTag_UseCustomLegPriceAlgorithm">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.XMLTag_CustomLegPriceAlgorithm">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.ParentPair">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.LegType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.BaseCommodity">
            <summary>
            這個leg的基準商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.BaseCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.BaseBasket">
            <summary>
            這個leg的基準Basket
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.TradeAccountAlias">
            <summary>
            下單帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.BasketCalType">
            <summary>
            Basket的計算方式
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.BasketUnderlying">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.BasketMultiplier">
            <summary>
            Basket的乘數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.BasketFixedAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.TradeUseRoundLot">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.CalculateUseRoundLot">
            <summary>
            若為Basket，這個屬性會被忽略
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.LegItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.BidIndicator">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.AllCommodityInfoCorrect">
            <summary>
            所有商品的資料都是正確的？
            For檢核狀態是否正確時使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.AllQuoteReady">
            <summary>
            所有商品的報價資料是否都到齊了？
            For檢核狀態是否正確時使用
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.AskIndicator">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.LastIndicator">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.IsError">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.UnitMarketValue">
            <summary>
            單位市值 ==> 1單位Leg的市值
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.CalculateBasketPriceIndicatorUseMarketValueWeight(CapitalPipe.LiteTrading.Orders.BidAskSide)">
            <summary>
            計算Basket的單位價格
            </summary>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.CalculateBasketPriceIndicatorUseMarketValueWeight">
            <summary>
            計算Basket的單位價格
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.CalculateUnitPriceUseMarketValue(CapitalPipe.LiteTrading.Orders.BidAskSide)">
            <summary>
            計算Basket的單位價格
            </summary>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.CalculateUnitPriceUseMarketValue">
            <summary>
            計算Basket的單位價格
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.CalculateUnitPriceUseMarketValueChange(CapitalPipe.LiteTrading.Orders.BidAskSide)">
            <summary>
            計算Basket的單位價格
            </summary>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.CalculateUnitPriceUseMarketValueChange">
            <summary>
            計算Basket的單位價格
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.CalculateBasketMarketValueWeight">
            <summary>
            計算Basket市值
            </summary>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.CalculateBasketMarketValueUnit">
            <summary>
            計算Basket市值
            </summary>
            <param name="baSide"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.CalculateBasketMarketValueMktValChange">
            <summary>
            計算Basket的單位價格
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.CheckAccountExistence">
            <summary>
            檢查帳號是否存在？
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.ReleaseCurrentListenQuotes">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.ResetCurrentListenQuotes">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.UpdatePositionInfo(System.Collections.Generic.Dictionary{System.String,CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo},System.Double,System.Int32,System.Boolean)">
            <summary>
            更新數量資訊
            </summary>
            <param name="qtyInfos"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.UpdateQtyInfos(System.Collections.Generic.Dictionary{System.String,CapitalPipe.LiteTrading.Spreads.TradingPair.PairQuantityInfo},System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="qtyInfos"></param>
            <param name="code"></param>
            <param name="iLeg"></param>
            <param name="qty"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.Quote_OnQuoteEvent(System.Object,CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            處理報價事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.SetParentPair(CapitalPipe.LiteTrading.Spreads.TradingPair)">
            <summary>
            設定這個Leg的ParentPair
            </summary>
            <param name="pair"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.SetAsCommodityLeg(System.String)">
            <summary>
            設成是Commodity
            </summary>
            <param name="legCode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.SetAsBasketWithUnderlyingLeg(CapitalPipe.LiteTrading.Baskets.Basket,System.String,System.Double)">
            <summary>
            設成是Basket
            </summary>
            <param name="legBasket"></param>
            <param name="basketUnderlying"></param>
            <param name="factor"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.SetAsBasketUnit(CapitalPipe.LiteTrading.Baskets.Basket,CapitalPipe.LiteTrading.Spreads.UnitPriceCalMethod)">
            <summary>
            
            </summary>
            <param name="legBasket"></param>
            <param name="calMethod"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.SetAsBasketWithFixedValue(CapitalPipe.LiteTrading.Baskets.Basket,System.Decimal)">
            <summary>
            
            </summary>
            <param name="legBasket"></param>
            <param name="valueAmount"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.SetUseCustomLegPriceAlgorithm(System.Boolean)">
            <summary>
            
            </summary>
            <param name="bUse"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.SetCustomLegPriceAlgorithmObj(CapitalPipe.LiteTrading.Spreads.CustomLegPriceAlgoritm)">
            <summary>
            
            </summary>
            <param name="algo"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.FireTradingPairLegEvent(CapitalPipe.LiteTrading.Spreads.TradingPiarLegEventArgs)">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.Destroy">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.ParseFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            從XML節點還原資料
            </summary>
            <param name="xElem">XML節點</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.TradingPairLeg.SaveToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            將資料
            </summary>
            <param name="xElem"></param>        
        </member>
        <member name="T:CapitalPipe.LiteTrading.Spreads.UnitPriceCalMethod">
            <summary>
            Basket單位價格計算方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.UnitPriceCalMethod.MarketValue">
            <summary>
            市值法 ==> 市值 / 單位數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.UnitPriceCalMethod.MarketValueChanged">
            <summary>
            淨值變動胡
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Spreads.UnitPriceCalMethod.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.VolumeControl.Commodity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.VolumeControl.Code">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Spreads.VolumeControl.VolumeInControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Spreads.VolumeControl.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="cmd"></param>
            <param name="volInCtrl"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache">
            <summary>
            跟KeyValue Cache的不同是，每個欄位有timeout值。當啟動時做TimeOut的檢查
            -----------------------------------------------------------------------------
            File Layout
            --------------------------------------------------------
            Header Record Record Record ....
            Contineous no space left
            Header ==> Field2 : Key Size (short)
                       Filed3 : Data Size(short)
            Record ==> Key : Key is a string
                       Value : Value is an byte array with fixed size
            --------------------------------------------------------
            狀態檢查：
            
                資料參數(KeySize,ValueSize)合理才允許開檔
                開檔後不允許修改資料參數
                
            使用方式：
                KeyValueCacheFile file = new KeyValueCacheFile();
                file.KeySize = 32;
                file.DataSize = 512;
                file.FileName = "C:\Projects\Temp\Test.dat";
                file.WriteKeyValueData("MyKey", bytesArray);
                bytesArray = file.GetKeyValueData("MyKey");
            注意：
                同一個cache檔只能有一份!!
                不允許key為空字串    /// </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache._cacheName">
            <summary>
            這個Cache的名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache._sizeOfShort">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache._expireTime">
            <summary>
            到期時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache._filename">
            <summary>
            存檔的位置
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache._keySize">
            <summary>
            Key值的大小
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache._dataSize">
            <summary>
            每筆資料的大小
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache._indices">
            <summary>
            資料索引位置
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache._cacheData">
            <summary>
            資料的Cache
            ==>本物件所有的操作lock以此物件為基準
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache._fileStream">
            <summary>
            目前的檔案stream
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache.CacheName">
            <summary>
            這個Cache的名字
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache.ExpireTime">
            <summary>
            每筆資料的到期時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache.KeySize">
            <summary>
            Key的大小
            若所有參數及檔案設定正確，會打開這個檔案，載回資料，進入可以讀寫的狀態 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache.DataSize">
            <summary>
            資料的大小
            若所有參數及檔案設定正確，會打開這個檔案，載回資料，進入可以讀寫的狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache.FileName">
            <summary>
            存檔的檔案名稱
            若所有參數及檔案設定正確，會打開這個檔案，載回資料，進入可以讀寫的狀態
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="cacheName">這個cache的名字</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache.CloseFile">
            <summary>
            關閉檔案
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache.OpenFileStream">
            <summary>
            開啟檔案
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache.WriteKeyValueData(System.String,System.Byte[])">
            <summary>
            寫入key-value資料
            </summary>
            <param name="key"></param>
            <param name="valueData"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.AdvancedKeyValueCache.GetKeyValueData(System.String)">
            <summary>
            取得某個key值的value值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Storages.DataEntry">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Storages.DataStorageService">
            <summary>
            資料儲存服務，資料可以儲存在雲端亦可以存在Local端，依使用者的設定決定
            提供一個 Key-Value 的儲存/讀取機制
            資料儲存的hierarchy為：
                Spece
                    + Key - Value
            可以指定資料儲存的space
            目前的實做為(1)XML檔；(2)DataService
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.DataStorageService._defaulService">
            <summary>
            預設的DataStorage
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Storages.DataStorageService.DefaultService">
            <summary>
            預設的資料儲存服務
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.DataStorageService.SaveData(System.String,System.String,System.String)">
            <summary>
            儲存資料
            </summary>
            <param name="space">儲存空間</param>
            <param name="key">鍵值</param>
            <param name="data">資料內容</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.DataStorageService.LoadData(System.String,System.String)">
            <summary>
            取出資料
            </summary>
            <param name="space">儲存空間</param>
            <param name="key">鍵值</param>
            <returns>資料內容, 若無鍵值，回傳null</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.DataStorageService.GetKeys(System.String)">
            <summary>
            取得在某個space的kyes
            </summary>
            <param name="space">space的值</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.DataStorageService.SavePrivateData(System.String,System.String,System.String)">
            <summary>
            儲存私人資料
            </summary>
            <param name="space"></param>
            <param name="key"></param>
            <param name="data"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.DataStorageService.LoadPrivateData(System.String,System.String)">
            <summary>
            載入私人資料
            </summary>
            <param name="space"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.DataStorageService.GetPrivateKeys(System.String)">
            <summary>
            取得在某個space的kyes
            </summary>
            <param name="space">space的值</param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile">
            <summary>
            File Layout
            --------------------------------------------------------
            Header Record Record Record ....
            Contineous no space left
            Header ==> Field1 : DateTime ticks(long)
                       Field2 : Key Size (short)
                       Filed3 : Data Size(short)
            Record ==> Key : Key is a string
                       Value : Value is an byte array with fixed size
            --------------------------------------------------------
            狀態檢查：
            
                資料參數(KeySize,ValueSize)合理才允許開檔
                開檔後不允許修改資料參數
                
            使用方式：
                KeyValueCacheFile file = new KeyValueCacheFile();
                file.KeySize = 32;
                file.DataSize = 512;
                file.FileName = "C:\Projects\Temp\Test.dat";
                file.WriteKeyValueData("MyKey", bytesArray);
                bytesArray = file.GetKeyValueData("MyKey");
            注意：
                同一個cache檔只能有一份!!
                不允許key為空字串
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile._sizeOfDateTimeTicks">
            <summary>
            DateTime物件的size
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile._sizeOfShort">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile._expireTime">
            <summary>
            到期時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile._filename">
            <summary>
            存檔的位置
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile._keySize">
            <summary>
            Key值的大小
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile._dataSize">
            <summary>
            每筆資料的大小
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile._indices">
            <summary>
            資料索引位置
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile._cacheData">
            <summary>
            資料的Cache
            ==>本物件所有的操作lock以此物件為基準
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile._fileStream">
            <summary>
            目前的檔案stream
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile.ExpireTime">
            <summary>
            到期時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile.KeySize">
            <summary>
            Key的大小
            若所有參數及檔案設定正確，會打開這個檔案，載回資料，進入可以讀寫的狀態 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile.DataSize">
            <summary>
            資料的大小
            若所有參數及檔案設定正確，會打開這個檔案，載回資料，進入可以讀寫的狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile.FileName">
            <summary>
            存檔的檔案名稱
            若所有參數及檔案設定正確，會打開這個檔案，載回資料，進入可以讀寫的狀態
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile.CloseFile">
            <summary>
            關閉檔案
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile.OpenFileStream">
            <summary>
            開啟檔案
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile.WriteKeyValueData(System.String,System.Byte[])">
            <summary>
            寫入key-value資料
            </summary>
            <param name="key"></param>
            <param name="valueData"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.KeyValueCacheFile.GetKeyValueData(System.String)">
            <summary>
            取得某個key值的value值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Storages.ModuleConfigurationStorageService">
            <summary>
            模組設定的資料儲存服務
            --------------------------------------------
            實做有(1)XML檔；(2)DataService
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.ModuleConfigurationStorageService._defaulService">
            <summary>
            預設的模組設定儲存服務
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Storages.ModuleConfigurationStorageService.DefaultService">
            <summary>
            預設的Config資料儲存服務
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.ModuleConfigurationStorageService.SaveSetting(System.String,System.String,System.String,System.String)">
            <summary>
            儲存設定
            </summary>
            <param name="moduleType">模組類型</param>
            <param name="moduleFile">模組檔案</param>
            <param name="instanceID">模組ID</param>
            <param name="setting">參數設定內容</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.ModuleConfigurationStorageService.GetSetting(System.String,System.String,System.String)">
            <summary>
            取得設定
            </summary>
            <param name="moduleType">模組類型</param>
            <param name="moduleFile">模組檔案</param>
            <param name="instanceID">模組ID</param>
            <returns>參數設定內容</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.ModuleConfigurationStorageService.RemoveSetting(System.String,System.String,System.String)">
            <summary>
            移除模組設定
            </summary>
            <param name="moduleType"></param>
            <param name="moduleFile"></param>
            <param name="instanceID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.ModuleConfigurationStorageService.GetOrderGatewaySettings(System.String)">
            <summary>
            
            </summary>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.ModuleConfigurationStorageService.SaveOrderGatewaySettings(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="userID"></param>
            <param name="setting"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Storages.XMLDataStorageService">
            <summary>
            使用XML檔案來儲存資料，為DataStorageService的一個實做
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.XMLDataStorageService.XML_Tag_PublicSection">
            <summary>
            Public區段的資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.XMLDataStorageService.XML_Tag_PrivateSection">
            <summary>
            Private區段的資料
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLDataStorageService.GetXMLFilename(System.String)">
            <summary>
            設定檔的名稱
            資料會儲存在Application Data\SmartTrading\Data[\UserID]目錄下
            </summary>
            <param name="space"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLDataStorageService.LoadData(System.String,System.String)">
            <summary>
            取出資料
            </summary>
            <param name="space"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLDataStorageService.SaveData(System.String,System.String,System.String)">
            <summary>
            儲存資料
            </summary>
            <param name="space"></param>
            <param name="key"></param>
            <param name="data"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLDataStorageService.GetKeys(System.String)">
            <summary>
            
            </summary>
            <param name="space"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLDataStorageService.LoadPrivateData(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="space"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLDataStorageService.SavePrivateData(System.String,System.String,System.String)">
            <summary>
            儲存私有key-value
            </summary>
            <param name="space"></param>
            <param name="key"></param>
            <param name="data"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLDataStorageService.GetPrivateKeys(System.String)">
            <summary>
            
            </summary>
            <param name="space"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLDataStorageService.Init">
            <summary>
            初始化–將DataStorageService的instance設定成XMLDataStorageService物件
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Storages.XMLModuleConfigurationStorageService">
            <summary>
            使用XML做為資料儲存的管理機制
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.XMLModuleConfigurationStorageService.String_SettingFileName">
            <summary>
            純檔案名稱，不包括路徑。要取得完整路徑，請使用：DefaultSettingFile
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Storages.XMLModuleConfigurationStorageService.XMLTag_GatewaySettingNode">
            <summary>
            連線到Gateway時的xml節點tag值
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Storages.XMLModuleConfigurationStorageService.DefaultSettingFile">
            <summary>
            預設的儲存設定資料的檔案
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLModuleConfigurationStorageService.Init">
            <summary>
            初始化，將default的ModuleConfigurationStorageService設成XMLModuleConfigurationStorageService
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLModuleConfigurationStorageService.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLModuleConfigurationStorageService.GetSetting(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="moduleType">模組類型</param>
            <param name="moduleFile"></param>
            <param name="instanceID"></param>
            <returns>t</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLModuleConfigurationStorageService.GetOrderGatewaySettings(System.String)">
            <summary>
            
            </summary>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLModuleConfigurationStorageService.SaveOrderGatewaySettings(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="userID"></param>
            <param name="setting"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLModuleConfigurationStorageService.SaveSetting(System.String,System.String,System.String,System.String)">
            <summary>
            儲存設定
            </summary>
            <param name="moduleType"></param>
            <param name="moduleFile"></param>
            <param name="instanceID"></param>
            <param name="setting"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLModuleConfigurationStorageService.RemoveSetting(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="moduleType"></param>
            <param name="moduleFile"></param>
            <param name="instanceID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLModuleConfigurationStorageService.FindElement(System.Xml.Linq.XElement,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="rootNode"></param>
            <param name="moduleType"></param>
            <param name="moduleFile"></param>
            <param name="instanceID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLStorageUtilities.CreateGroupsXMLNode(System.Collections.Generic.ICollection{System.String})">
            <summary>
            
            </summary>
            <param name="groups"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLStorageUtilities.ParseOrderSourcesXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLStorageUtilities.CreateOrderSourcesXMLNode(System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.Orders.OrderSource})">
            <summary>
            
            </summary>
            <param name="sources"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLStorageUtilities.ParseCommodityIdentifierXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLStorageUtilities.ParseCommodityIdentifierCollectionXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xElem"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLStorageUtilities.CreateCommodityIdentifierXMLNode(CapitalPipe.LiteTrading.Commodities.CommodityIdentifier)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Storages.XMLStorageUtilities.CreateCommodityIdentifierCollectionXMLNode(System.Collections.Generic.ICollection{CapitalPipe.LiteTrading.Commodities.CommodityIdentifier})">
            <summary>
            
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Strategies.Strategy">
            <summary>
            策略的基礎類別
            提供基本的策略Model能力
            每個策略提供兩個基本欄位：
            (1)StrategyType：策略類型
            (2)StrategyID：策略代碼
            在系統中是以上述兩個欄位來做hirerachy，某個策略類型下會有若干個策略代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.Strategies.Strategy._registedStrategies">
            <summary>
            被註冊的策略類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Strategies.Strategy.StrategyType">
            <summary>
            取得策略類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Strategies.Strategy.StrategyID">
            <summary>
            取得策略代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Strategies.Strategy.StrategyName">
            <summary>
            取得策略名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Strategies.Strategy.StrategyTypes">
            <summary>
            傳回所有的策略類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Strategies.Strategy.FreeInternalTransSeq">
            <summary>
            虛擬成交序號(部位移轉用)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Strategies.Strategy.VirtualAccount">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.Strategy.GetStraregyIDs(System.String)">
            <summary>
            取得某個策略類型下的所有策略IDs
            </summary>
            <param name="strategyType">策略類型</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.Strategy.RegisterStrategy(System.String,System.String)">
            <summary>
            註冊策略
            </summary>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.Strategy.UnregisterStrategy(System.String,System.String)">
            <summary>
            反註冊策略
            </summary>
            <param name="strategyType"></param>
            <param name="strategyID"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.Strategies.StrategyFilter">
            <summary>
            用來過濾某個策略的Filter
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Strategies.StrategyFilter.CheckValidStraegyTypes">
            <summary>
            當CheckValidTypes為true時，只有在ValidTypes裡面的商品才會被選取
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Strategies.StrategyFilter.CheckExcludeStrategyTypes">
            <summary>
            當CheckExcludeCodes為true時，excludeTypes裡面的商品會被排除
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Strategies.StrategyFilter.CheckValidStrategyIDs">
            <summary>
            當CheckValidStrategyIDs為true時，只有在ValidIDs裡面的商品會被選取
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.Strategies.StrategyFilter.CheckExcludeStrategyIDs">
            <summary>
            當CheckExcludeStrategyID為true時，excludeIDs裡面的策略會被排除
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.IsValidStrategyType(System.String)">
            <summary>
            是否為有效的策略類型
            </summary>
            <param name="strategyType">策略類型</param>
            <returns>允許的策略類型：True,反之False</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.RemoveValidStartegyType(System.String)">
            <summary>
            移除有效的策略類型
            </summary>
            <param name="strategyType"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.ClearValidStrategyTypes">
            <summary>
            清空有效的策略類型
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.AddValidStrategyType(System.String)">
            <summary>
            增加有效的策略類型
            </summary>
            <param name="strategyType">策略類型</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.IsValidStrategyID(System.String)">
            <summary>
            是否為有效的策略代碼
            </summary>
            <param name="strategyID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.AddValidStrategyID(System.String)">
            <summary>
            增加一筆允許的策略ID
            </summary>
            <param name="strategyID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.RemoveValidStrategyID(System.String)">
            <summary>
            自允許的策略IDs中移除
            </summary>
            <param name="strategyID">策略代碼</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.ClearValidStrategyIDs">
            <summary>
            清空策略代碼
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.IsExcludeStrategyType(System.String)">
            <summary>
            是否為要排除的策略類型
            </summary>
            <param name="strategyType">策略類型</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.AddExcludeStrategyType(System.String)">
            <summary>
            增加一筆要排除的策略類型
            </summary>
            <param name="strategyType">策略類型</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.RemoveExcludeStrategyType(System.String)">
            <summary>
            自要被排除的策略類型列表中移除指定的類型
            </summary>
            <param name="strategyType">要移除的策略類型</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.ClearExcludeStrategyTypes">
            <summary>
            清空要排除的策略類型列表
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.IsExcludeStrategyID(System.String)">
            <summary>
            是否為需要排除的策略代碼
            </summary>
            <param name="strategyID">策略代碼</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.AddExcludeStrategyID(System.String)">
            <summary>
            增加一筆策略代碼資料到“要被排除的策略代碼表列”
            </summary>
            <param name="strategyID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.RemoveExcludeStrategyID(System.String)">
            <summary>
            自要排除的IDs中移除某個ID
            </summary>
            <param name="strategyID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.ClearExcludeStrategyIDs">
            <summary>
            清空需要排除的策略IDs
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.IsValidOrder(CapitalPipe.LiteTrading.Orders.Order)">
            <summary>
            該筆委託是否為能通過filter
            </summary>
            <param name="ord"></param>
            <returns>true:通過filter，false:要被排除</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.IsValidTransaction(CapitalPipe.LiteTrading.Orders.Transaction)">
            <summary>
            該筆成交是否為能通過filter
            </summary>
            <param name="trans"></param>
            <returns>true:通過filter，false:要被排除</returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.Strategies.StrategyFilter.IsValidTreasury(CapitalPipe.LiteTrading.LitePositions.Treasury)">
            <summary>
            該筆庫存資料是否能通過filter
            </summary>
            <param name="tr">true:通過filter，false:要被排除</param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.StressTest.OrderTester">
            <summary>
            用來執行壓力測試的工具程式
            這個物件會儲存壓力測試的結果
            --------------------------------------------------
            這個物件應該只被執行一次，每次要執行都重新new一次這個物件
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.StressTest.OrderTester.OrderTesterFinishCallback">
            <summary>
            當委託壓力完成後的Callback
            </summary>
            <param name="tester"></param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.StressTest.OrderTester._testerID">
            <summary>
            用來區隔這個tester的代碼，由new這個物件的人負責製做
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.StressTest.OrderTester._bSleep1MS">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.StressTest.OrderTester._testCount">
            <summary>
            測試的repeat次數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.StressTest.OrderTester._ordersByTerms">
            <summary>
            每個OrderTerm的執行結果
            ==>不同次執行的Order會被放在List裡面
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.StressTest.OrderTester._sentOrders">
            <summary>
            已傳送委託
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.StressTest.OrderTester._orderActiveTimeBySeq">
            <summary>
            委託Active時間(依請求序號)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.StressTest.OrderTester._orderActiveTime">
            <summary>
            委託Active時間，key = order id
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.StressTest.OrderTester._ackReceivedTime">
            <summary>
            收到Order Ack的時間，key = order id
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.StressTest.OrderTester._dtBegin">
            <summary>
            開始測試的時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.StressTest.OrderTester._orderCreationTime">
            <summary>
            OrderManager的全部執行時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.StressTest.OrderTester._finishCallback">
            <summary>
            執行測試完成時需要回call的callback
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.StressTest.OrderTester.TesterID">
            <summary>
            這個Tester的代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.StressTest.OrderTester.TestRepeatCount">
            <summary>
            測試腳本的執行次數
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.StressTest.OrderTester.SentOrders">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.StressTest.OrderTester.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.StressTest.OrderTester.ResultSummary">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.StressTest.OrderTester.SendOrderRecords">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.OrderTester.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="testerID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.OrderTester.DoTest">
            <summary>
            執行測試
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.OrderTester.SetTestItems(System.Collections.Generic.List{CapitalPipe.LiteTrading.Orders.OrderTerm})">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.OrderTester.SetFinishCallback(CapitalPipe.LiteTrading.StressTest.OrderTester.OrderTesterFinishCallback)">
            <summary>
            設定callback
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.OrderTester.SingleThreadTestImp">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.OrderTester.QuoteOrder_OnOrderChange(System.Object,CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.OrderTester.GenericOrder_OnOrderChange(System.Object,CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.OrderTester.OutputResults(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.StressTest.OrderRecord">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.StressTest.QuotePriceItem">
            <summary>
            當價格在中間的時侯：move往上或是往下的機率是1/2
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.QuotePriceItem.#ctor(CapitalPipe.LiteTrading.StressTest.QuoteTestEntry.EventType,System.String)">
            <summary>
            
            </summary>
            <param name="evType"></param>
            <param name="code"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.QuotePriceItem.DoTest">
            <summary>
            執行測試
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.QuotePriceItem.GenerateRandomEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.QuotePriceItem.OrderBookTickDown">
            <summary>
            委託簿往下一個Tick
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.QuotePriceItem.OrderBookTickUp">
            <summary>
            委託簿往上一個Tick
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.QuotePriceItem.GenearteRandomMatch">
            <summary>
            產生成交價
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.QuotePriceItem.GenerateBidAskPrice">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.StressTest.QuoteTestEntry.EventType">
            <summary>
            模擬事件類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.StressTest.QuoteTestEntry.Code">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.QuoteTestEntry.CloneQuoteTestEntry">
            <summary>
            複製測試項目
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.QuoteTestEntry.ToOutputCSVString">
            <summary>
            轉成輸出字串
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.QuoteTestEntry.ParseFromCSVString(System.String)">
            <summary>
            從csv字串parse出來
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.StressTest.QuoteTester">
            <summary>
            行情壓測器
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.StressTest.QuoteTester.QuoteTesterFinishCallback">
            <summary>
            當mv hhu 壓力完成後的Callback
            </summary>
            <param name="tester"></param>
        </member>
        <member name="P:CapitalPipe.LiteTrading.StressTest.QuoteTester.TestCount">
            <summary>
            測試次數
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.QuoteTester.DoTest">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.QuoteTester.DoTestImp">
            <summary>
            真正的執行測試
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.QuoteTester.SetTestItems(System.Collections.Generic.List{CapitalPipe.LiteTrading.StressTest.QuoteTestEntry})">
            <summary>
            會copy testItems，所以原本的testitems更動不會對壓測過程造成任何影響
            </summary>
            <param name="testItems"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.StressTest.QuoteTester.SetFinishCallback(CapitalPipe.LiteTrading.StressTest.QuoteTester.QuoteTesterFinishCallback)">
            <summary>
            設定callback
            </summary>
            <param name="callback"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemAlerts.AlarmLevel">
            <summary>
            警示層級
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.AlarmLevel.None">
            <summary>
            如果不是Alarm事件，要設成這個值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.AlarmLevel.Information">
            <summary>
            資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.AlarmLevel.Warning">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.AlarmLevel.Error">
            <summary>
            錯誤
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.AlarmLevel.Fatal">
            <summary>
            嚴重錯誤
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.ConnectionLostAlert.BuilderGUID">
            <summary>
            建造此警示器的BuilderGUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.ConnectionLostAlert.GUID">
            <summary>
            警示器GUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.ConnectionLostAlert.BriefName">
            <summary>
            警示器名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.ConnectionLostAlert.Description">
            <summary>
            警示器描述
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.ConnectionLostAlert.IsWorking">
            <summary>
            是否啟用警示
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.ConnectionLostAlert.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.ConnectionLostAlert.Start">
            <summary>
            啟用警示器
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.ConnectionLostAlert.Stop">
            <summary>
            停用警示器
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.ConnectionLostAlert.ApplySettingsFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.ConnectionLostAlert.WriteSettingsToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            儲存狀態至XML節點
            </summary>
            <param name="alertNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.ConnectionLostAlert.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.ProcessNoRespondingAlert.BuilderGUID">
            <summary>
            建造此警示器的BuilderGUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.ProcessNoRespondingAlert.GUID">
            <summary>
            警示器GUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.ProcessNoRespondingAlert.BriefName">
            <summary>
            警示器名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.ProcessNoRespondingAlert.Description">
            <summary>
            警示器描述
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.ProcessNoRespondingAlert.AdjustNumber">
            <summary>
            時間限制
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.ProcessNoRespondingAlert.IsWorking">
            <summary>
            是否啟用警示
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.ProcessNoRespondingAlert.DefaultEventCenter_OnSystemTimerTick(System.Object,System.EventArgs)">
            <summary>
            固定時間檢查 Process 是否還有回應
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManagerEventType">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManagerEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManagerEventArgs.EventType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManagerEventArgs.EventAlert">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManagerEventArgs.#ctor(CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManagerEventType,CapitalPipe.LiteTrading.SystemAlerts.SystemAlert)">
            <summary>
            
            </summary>
            <param name="evType"></param>
            <param name="evAlert"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert">
            <summary>
            XX商品在時限內成交口數未變化警示器
            若商品不在交易時段內則無法啟動該警示器
            但假日會有問題，未排除非交易日問題
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.BuilderGUID">
            <summary>
            建造此警示器的BuilderGUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.GUID">
            <summary>
            警示器GUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.Code">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.BriefName">
            <summary>
            警示器名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.Description">
            <summary>
            警示器描述
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.IsWorking">
            <summary>
            是否啟用警示
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.AdjustNumber">
            <summary>
            時間限制
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.Unit">
            <summary>
            調整單位
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.Start">
            <summary>
            啟用警示器
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.Stop">
            <summary>
            停用警示器
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.Quote_OnQuoteEvent(System.Object,CapitalPipe.LiteTrading.Quotes.QuoteEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.DefaultEventCenter_OnSystemTimerTick(System.Object,System.EventArgs)">
            <summary>
            時限內成交未變化則請AlertManager發出Event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.ApplySettingsFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.WriteSettingsToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            儲存狀態至XML節點
            </summary>
            <param name="alertNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.NoMatchInPeriodAlert.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert">
            <summary>
            瞬間委託筆數上限警示器
            此警示器具有唯一性，
            瞬間委託筆數達到設定上限則發出警報事件
            故不允許存在多個同類型警示器
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.BuilderGUID">
            <summary>
            建造此警示器的BuilderGUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.GUID">
            <summary>
            警示器GUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.BriefName">
            <summary>
            警示器名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.Description">
            <summary>
            警示器描述
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.IsWorking">
            <summary>
            是否啟用警示
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.AdjustNumber">
            <summary>
            委託筆數限制
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.Time">
            <summary>
            時間限制(秒)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.Unit">
            <summary>
            調整單位
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.Start">
            <summary>
            啟用警示器
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.Stop">
            <summary>
            停用警示器
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.DefaultEventCenter_OnOrderChanged(System.Object,CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            有委託回報發生
            委託時間間隔內(使用者設定時限)、
            如果時限內委託筆數大於筆數限制(使用者設定)
            則請AlertManager發出警報事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.InitWorkingOrders">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.ApplySettingsFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.WriteSettingsToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            儲存狀態至XML節點
            </summary>
            <param name="alertNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderLimitAlert.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert">
            <summary>
            時限內委託未回報警示器
            此警示器具有唯一性，
            在某個時限內委託未回報則發出警報事件
            故不允許存在多個同類型警示器
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert.BuilderGUID">
            <summary>
            建造此警示器的BuilderGUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert.GUID">
            <summary>
            警示器GUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert.BriefName">
            <summary>
            警示器名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert.Description">
            <summary>
            警示器描述
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert.IsWorking">
            <summary>
            是否啟用警示
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert.AdjustNumber">
            <summary>
            時間限制
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert.Unit">
            <summary>
            調整單位
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert.Start">
            <summary>
            啟用警示器
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert.Stop">
            <summary>
            停用警示器
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert.InitNotReplyOrders">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert.DefaultEventCenter_OnSystemTimerTick(System.Object,System.EventArgs)">
            <summary>
            時限內委託未回報則請AlertManager發出Event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert.ApplySettingsFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert.WriteSettingsToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            儲存狀態至XML節點
            </summary>
            <param name="alertNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.OrderNotReplyAlert.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemAlerts.SystemAlert">
            <summary>
            所有的自訂Alert都必須繼承自SystemAlert
            ----------------------------------------------------------
            ※ SystemAlert只能由AlertBuilder來創造
            ※ 每個SystemAlert有自已的GUID，訂閱機制是透過SystemAlertManager
            ※ Alert事件的派發
              SystemAlert --(Fire Evetn)--> SystemAlertManager --(Fire Event)--> AlertListener
            ----------------------------------------------------------
            要實做一組自訂SystemAlert的流程：
            ※ 定義自訂Alert，此
            ※ 新增一個用來create自訂Alert的Builder
            ---------------------------------------------------------
            執行的時侯
            ※ 自訂的AlertBuilder必須向AlertBuilderNanger註冊
            ※ SystemAlertManager會利用SystemAlert的Builder GUID取得Builder來執行
               create自訂Alert的工作
            --------------------------------------------------------
            Preset的定義：
            ※ 一組預設的GUID，代表系統內建的SystemAlert
            --------------------------------------------------------
            Preset的建立：
            ※ Builder ==> 多半是UI-Dependent
            ※ SystemAlert ==> 最好是UI-Independent
            ※ 交易邏輯通常是UI-Independent。因此，Preset最好是UI-Independent
            ※ 暫行的規範：
              (1) 帶有Preset的某個自訂SystemAlert，Preset應跟著SystemAlert一起定義
              (2) Preset的參數儲存也是透過SystemAlertManager
              (3) 可以建出Preset的AlertBuilder應該要通知SystemAlertManager有Preset可以建立
                  換版新增Preset後，SystemAlertManager可以透過這個流程來把新增的Preset建立出來
              (4) 
            ---------------------------------------------------------
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlert.BuilderGUID">
            <summary>
            建立該警示器的BuilderGUID
            由builder來填寫，基本上應該是同一個類型(type)的SystemAlert都會是一樣的(類似static member/constant)
            [必須Override]
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlert.GUID">
            <summary>
            警示器GUID
            警示器會有多個Instance，這個GUID是用來辨識是哪一個Instance時使用的
            [必須Override，這個應該可以在底層實做]
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlert.BriefName">
            <summary>
            警示器名稱，顯示這個顯示器的類型
            對某個子類別而言，這個名稱會是一樣(子類別的static member/constant)
            [必須Override]
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlert.Description">
            <summary>
            警示器描述，顯示這個顯示器的內容
            會依參數內容來調整，做摘要性質的揭示
            preset==>可能會用固定的顯示內容，ex:台灣快市警示....
            [必須Override]
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlert.IsWorking">
            <summary>
            是否啟用此警示器
            為避免系統警示器被個別物件擅自啟用/停用
            僅透過系統>>系統警示設定>>啟用/停用
            [必須Override]
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlert.Removable">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlert.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlert.ForceParentManagerFireEvent(CapitalPipe.LiteTrading.SystemAlerts.AlertEventType,CapitalPipe.LiteTrading.SystemAlerts.AlarmLevel,System.String)">
            <summary>
            如果有啟用某個警示器，
            且觸發設定限制發出警報，
            可向Manager請求發送事件
            [可選擇Override]
            </summary>
            <param name="evType"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlert.ApplySettingsFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="??"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlert.WriteSettingsToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            儲存狀態至XML節點
            [必須Override]
            </summary>
            <param name="elem"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlert.SetIsWorking(System.Boolean)">
            <summary>
            
            </summary>
            <param name="bIsWorking"></param>
        </member>
        <!-- 已忽略成員 "T:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertBuilder" 中格式錯誤的 XML 註解 -->
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertBuilder.GUID">
            <summary>
            Builder GUID
            '===>基本上Builder算是Singleton，某一類型的builder擁有相同的GUID
            類似static member/constant member
            [必須Override]
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertBuilder.BriefName">
            <summary>
            Builder 名稱
            類似static member/constant member
            [必須Override]
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertBuilder.Description">
            <summary>
            Builder 功能描述
            類似static member/constant member
            [必須Override]
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertBuilder.CanCreate">
            <summary>
            Builder是否能生產Alert
            有些Alert具唯一性，若已建立過Alert則禁止生產
            除非被AlertManager刪除後才可再建立。
            [Optional Override]
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertBuilder.ExtraInfo">
            <summary>
            額外的資訊
            [Optional Override]
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertBuilder.Self">
            <summary>
            For Binding
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertBuilder.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertBuilder.CreateSystemAlert">
            <summary>
            建立一個預設的系統警示器(參數未被初始化)       
            [必須Override]
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertBuilder.CreateSystemAlert(System.Xml.Linq.XElement)">
            <summary>
            使用AlertInfo建立警示器
            </summary>
            <param name="alertinfo"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertBuilder.CreateSystemAlertManual">
            <summary>
            建立系統警示器
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertBuilder.ModifySystemAlert(System.String)">
            <summary>
            修改系統警示器
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemAlerts.AlertEventType">
            <summary>
            警示事件類別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.AlertEventType.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.AlertEventType.StatusChanged">
            <summary>
            警示器狀態改變
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.AlertEventType.Alarm">
            <summary>
            觸及警示範圍發出警報
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertEventArgs._eventAlert">
            <summary>
            產生警示的物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertEventArgs._alarmLevel">
            <summary>
            警示的層級
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertEventArgs._evType">
            <summary>
            警示類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertEventArgs._alarmMessage">
            <summary>
            警示訊息
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertEventArgs.EventAlert">
            <summary>
            產生事件的AlertInfo
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertEventArgs.Level">
            <summary>
            警示的Level
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertEventArgs.AlertEventType">
            <summary>
            警示事件的類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertEventArgs.AlertMessage">
            <summary>
            警示訊息
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertEventArgs.#ctor(CapitalPipe.LiteTrading.SystemAlerts.AlertEventType,CapitalPipe.LiteTrading.SystemAlerts.SystemAlert,CapitalPipe.LiteTrading.SystemAlerts.AlarmLevel,System.String)">
            <summary>
            建構式
            </summary>
            <param name="evType">事件類型</param>
            <param name="alert">警示物件</param>
            <param name="alarmLevel">警示水準</param>
            <param name="alarmMessage">警示訊息</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertEventHandler">
            <summary>
            事件的handler
            </summary>
            <param name="sender">事件來源</param>
            <param name="args">事件參數</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager">
            <summary>
            SystemAlert統一由SystemAlertManager管理
              管理內容包含:
                  維護現存SystemAlerts的實體、啟用、停用、刪除
                  (新增、編輯則是由各個SystemAlertBuilder負責)
              派送事件:
                  事件有分為兩種:
                      1.警示器狀態改變:
                        topic為空字元""，有用到SystemAlert的物件"必須"訂閱此類型事件，才能得知SystemAlert狀態
                        如果是個別警示器狀態改變(不含新增、刪除)，可以用args.EventAlertInfo取得是哪個Alert發出來的事件
                      2.警報:
                        topic為該警示器GUID，有訂閱該Alert的物件才會收到事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager._init">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager._isAutoSaving">
            <summary>
            是否有啟動自動儲存？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager._isDirty">
            <summary>
            只有在Dirty狀態下，才會自動儲存!!
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager._saveCounter">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager._systemAlertDict">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager._alertInfoList">
            <summary>
            SystemAlert只有AlertManager可以控制，其他有需使用只提供AlertInfo資訊
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager._topicSubscribedReceivers">
            <summary>
            Key ==> Alert的GUID, Value==>Event Handler
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager._broadcastReceivers">
            <summary>
            接收廣播事件的Event Handlers
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager._alertBuilders">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager._alertLogs">
            <summary>
            log檔
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager._activeAlerts">
            <summary>
            這個變數是用來存目前啟動中的Alerts，用來做重啟的復原使用
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.OnSystemAlertManagerEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager._defaultManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.DefaultSettingFile">
            <summary>
            預設值的檔案
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.AvailableBuilders">
            <summary>
            所有的AlertBuilder
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.AlertLogFile">
            <summary>
            Alert的Log檔
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.DefaultManager">
            <summary>
            預設的系統警示管理員
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.ActiveAutoSaving">
            <summary>
            啟動自動儲存
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.AddEventHandler(System.String,CapitalPipe.LiteTrading.SystemAlerts.SystemAlertEventHandler)">
            <summary>
            
            </summary>
            <param name="topic"></param>
            <param name="handler"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.RemoveEventHandler(System.String,CapitalPipe.LiteTrading.SystemAlerts.SystemAlertEventHandler)">
            <summary>
            
            </summary>
            <param name="topic"></param>
            <param name="handler"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.AddSystemAlert(CapitalPipe.LiteTrading.SystemAlerts.SystemAlert)">
            <summary>
            由SystemAlertManager
            負責維護現有SystemAlert
            </summary>
            <param name="guid"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.RemoveSystemAlert(System.String)">
            <summary>
            移除某個SystemAlert
            </summary>
            <param name="guid"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.GetSystemAlert(System.String)">
            <summary>
            取得目前存在系統的警示器
            盡可能只透過Manager或Builder對Alert做動作
            避免讓個別物件取得Alert
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.StartSystemAlert(System.String)">
            <summary>
            啟用某個警示器
            </summary>
            <param name="guid"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.StartAllSystemAlert">
            <summary>
            啟用全部系統警示器
            功能待實作
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.ActiveWorkingAlerts">
            <summary>
            在啟動時，將先前active的alert啟動
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.InformDirty">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.DefaultEventCenter_OnSystemTimerTick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.StopSystemAlert(System.String)">
            <summary>
            停用某個類型的警示器
            </summary>
            <param name="guid"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.StopAllSystemAlert">
            <summary>
            停用全部系統警示器
            功能待實作
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.GetAllSystemAlerts">
            <summary>
            取得全部現存系統警示器
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.GetAllSystemAlertGUIDs">
            <summary>
            取得全部現存系統警示器GUID
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.ClearSystemAlerts">
            <summary>
            清空系統警示器
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.FireEvent(System.String,CapitalPipe.LiteTrading.SystemAlerts.SystemAlertEventArgs)">
            <summary>
            派送事件
            事件有分為兩種:
            1.警示器狀態改變:
              topic為空字元""，有用到SystemAlert的物件皆須訂閱此類型事件
            2.警報:
              topic為該警示器GUID，有訂閱該Alert的物件才會收到事件
            </summary>
            <param name="topic"></param>
            <param name="args"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.AlertStatusChanged(System.Object,CapitalPipe.LiteTrading.SystemAlerts.SystemAlertEventArgs)">
            <summary>
            AlertStatusChangedHandler
            狀態改變時儲存Alert狀態
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.FireSystemAlertManagerEvent(CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManagerEventType,CapitalPipe.LiteTrading.SystemAlerts.SystemAlert)">
            <summary>
            
            </summary>
            <param name="evType"></param>
            <param name="evAlert"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.SaveSettings(System.String)">
            <summary>
            
            </summary>
            <param name="fn"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.LoadSettings(System.String)">
            <summary>
            
            </summary>
            <param name="fn"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.WriteSettingsToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            儲存設定
            </summary>
            <param name="elem"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.RestoreFromNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.AddSystemAlertBuilder(CapitalPipe.LiteTrading.SystemAlerts.SystemAlertBuilder)">
            <summary>
            由AlertBuilderManager
            負責維護現有SystemAlertBuilder
            同一種功能的Builder只能有一個
            </summary>
            <param name="sa"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.RemoveSystemAlertBuilder(CapitalPipe.LiteTrading.SystemAlerts.SystemAlertBuilder)">
            <summary>
            移除某個SystemAlertBuilder
            </summary>
            <param name="sabuilder"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.GetSystemAlertBuilder(System.String)">
            <summary>
            取得目前存在SystemAlertBuilder
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.GetAllSystemAlertBuilders">
            <summary>
            取得全部現存SystemAlertBuilder
            </summary>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemAlertManager.ClearSystemAlertBuilders">
            <summary>
            清空SystemAlertBuilder
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert">
            <summary>
            瞬間成交筆數上限警示器
            此警示器具有唯一性，
            瞬間成交筆數達到設定上限則發出警報事件
            故不允許存在多個同類型警示器
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert.BuilderGUID">
            <summary>
            建造此警示器的BuilderGUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert.GUID">
            <summary>
            警示器GUID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert.BriefName">
            <summary>
            警示器名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert.Description">
            <summary>
            警示器描述
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert.IsWorking">
            <summary>
            是否啟用警示
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert.AdjustNumber">
            <summary>
            成交筆數限制
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert.Time">
            <summary>
            時間限制(秒)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert.Unit">
            <summary>
            調整單位
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert.Start">
            <summary>
            啟用警示器
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert.Stop">
            <summary>
            停用警示器
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert.DefaultEventCenter_OnTransactionChanged(System.Object,CapitalPipe.LiteTrading.Orders.TransactionEventArgs)">
            <summary>
            當有成交回報發生時，
            成交時間間隔內(使用者設定時限)、
            如果時限內成交筆數大於筆數限制(使用者設定)
            則請AlertManager發出警報事件
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert.ApplySettingsFromXMLNode(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert.WriteSettingsToXMLNode(System.Xml.Linq.XElement)">
            <summary>
            儲存狀態至XML節點
            </summary>
            <param name="alertNode"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.TransactionLimitAlert.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlert">
            <summary>
            跟單發性質的SystemAlert不同，這個Alert是狀態切換性質的
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlert._alertGUID">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlert._alertName">
            <summary>
            警示名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlert._alertDescription">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlert._lastAlertTime">
            <summary>
            前次警示時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlert._lastManualConfirmTime">
            <summary>
            前次手動確認時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlert._currentAlarmLevel">
            <summary>
            要不要顯示在畫面上，由user自已決定是在哪個level才警示!! 
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlert.AlertGUID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlert.AlertName">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlert.AlertDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlert.CurrentAlarmLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlert.LastAlertTime">
            <summary>
            前次警示時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlert.LastAlertTimeString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlert.LastManualConfirmTime">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlert.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="strGUID"></param>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlertManager._alerts">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlertManager._defaultManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlertManager.AllAlerts">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemAlerts.SystemStateAlertManager.DefaultManager">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.ApplicationEventArgs">
            <summary>
            應用程式事件，目前應用程式事件分為三個類型
            <list type="number">
            <item><description>應用程式已完成初始化</description></item>
            <item><description>應用程式發出log訊息(初始化過程)</description></item>
            <item><description>應用程式即將關閉</description></item>
            </list>
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.ApplicationEventArgs._eventType">
            <summary>
            應用程式事件類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.ApplicationEventArgs._message">
            <summary>
            事件相關訊息
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.ApplicationEventArgs._data">
            <summary>
            事件資料物件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.ApplicationEventArgs.EventType">
            <summary>
            事件類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.ApplicationEventArgs.Message">
            <summary>
            事件訊息
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.ApplicationEventArgs.EventData">
            <summary>
            事件資料
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.ApplicationEventArgs.#ctor(CapitalPipe.LiteTrading.SystemEvents.ApplicationEventyType,System.String,System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="evType">事件類型</param>
            <param name="message">事件訊息</param>
            <param name="evData">事件資料</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.ApplicationEventHandler">
            <summary>
            應用程式事件處理程序
            </summary>
            <param name="sender">發送事件的物件</param>
            <param name="args">事件內容</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.ApplicationEventyType">
            <summary>
            應用程式事件類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.ApplicationEventyType.ApplicationInitialized">
            <summary>
            程式初始化已完成(主視窗要顯示出來)
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.ApplicationEventyType.ApplicationInitializingLogMessage">
            <summary>
            初始化過程中的Log訊息
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.ApplicationEventyType.ApplicationWillBeTerminated">
            <summary>
            程式即將關閉，在主視窗要關閉前會產生這個事件
            如果有自動單物件若需要在這時點取消掛單的話，要監聽這個事件，並且取消掛單
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.EventCenter">
            <summary>
            系統事件中心，用途為提供一個廣播事件的機制，並簡化事件的訂閱流程。<para/>
            廣播事件的派送機制分成兩個類型，透過PostXXX類的事件會被傳送到一個獨立的事件thread中做派送，而FireXXX類的事件則是會在呼叫FireXXX時派送<para/>
            Timer/HD Timer會有自已的thread<para/>
            事件類型：
            <list type="number">
            <item><description>成交事件(OnTransactionChanged)，成交事件可以區分兩個類型：<para/>
            <list type="bullet">
            <item><description>新成交，當收到成交回報時會觸發此事件</description></item>
            <item><description>成交資料更新，這個事件發生於成交回報較委託回報早發生時。這時侯會在收到成交回報時，發送一個"新成交"的事件，然後在收到委託回報時，發送一個"成交資料更新"事件。若成交回報比委託回報早接收時，這時侯無法對應到是哪一筆委託，故StreategyType,StrategyID等欄位無法決定。只有待收到委託回報後，才能依原始委託來更新StrategyType、StrategyID與OrderSource等欄位</description></item>
            </list>
            </description></item>
            <item><description>委託事件(OnOrderChanged)，在新增委託或是委託狀態改變時，會派送這個事件</description></item>
            <item><description>系統組態改變(OnSystemConfigurationChanged)，當系統組態改變時，會派送這個事件。使用者可以利用這個事件發送自定的系統組態改變事件。ex：自訂指標/風險參數的組態改變也可利用這個事件來派送</description></item>
            <item><description>委託連線狀態改變(OnOrderConnectionChanged)</description></item>
            <item><description>報價連線狀態改變(OnQuoteConnectionChanged)</description></item>
            <item><description>系統Timer(OnSystemTimerTick)，一秒鐘派送一次</description></item>
            <item><description>系統Timer(高解析度，OnSystemHDTimerTick)，0.05秒派送一次</description></item>
            </list>
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.EventCenter.EventType">
            <summary>
            事件類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.EventCenter.EventType.Order">
            <summary>
            委託事件:當有新的委託或是委託狀態改變時，會拋出此事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.EventCenter.EventType.SysetemConfiguration">
            <summary>
            系統組態變數:當系統組態發生改變時，會拋出此事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.EventCenter.EventType.OrderConnection">
            <summary>
            委託連線:委託連線的狀態改變時，會拋出此事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.EventCenter.EventType.QuoteConnection">
            <summary>
            報價連線:報價連線的狀態改變時，會拋出此事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.EventCenter.EventType.CommodityInfoChange">
            <summary>
            當商品產生新增/移除時
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.EventCenter.EventType.MarketClear">
            <summary>
            市場清盤
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.EventCenter.EventType.SystemNotify">
            <summary>
            系統通知
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.EventCenter.EventType.Custom">
            <summary>
            其他自訂事件
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.EventCenter.QueuedEventData">
            <summary>
            在EventQueue中暫存的事件資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.EventCenter._timer">
            <summary>
            一秒一次的timer
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.EventCenter._timerHD">
            <summary>
            一秒20次的timer
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.EventCenter._queuedEvents">
            <summary>
            待發送的事件佇列
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.EventCenter._eventPostThread">
            <summary>
            發送事件的Thread
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.SystemEvents.EventCenter.OnTransactionChanged">
            <summary>
            成交事件，
            當有新的成交產生／成交資料更新(發生在成交資料比委託早回來，後來又收到委託回報時)，
            會透過這個事件廣播
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.SystemEvents.EventCenter.OnOrderChanged">
            <summary>
            委託事件，
            當某一筆委託資料發生改變時，會透過這個事件廣播出來
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.SystemEvents.EventCenter.OnSystemConfigurationChanged">
            <summary>
            系統組態改變事件
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.SystemEvents.EventCenter.OnOrderConnectionChanged">
            <summary>
            委託連線狀態改變事件
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.SystemEvents.EventCenter.OnQuoteConnectionChanged">
            <summary>
            報價連線狀態改變事件
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.SystemEvents.EventCenter.OnSystemNotify">
            <summary>
            系統Notify事件
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.SystemEvents.EventCenter.OnSystemTimerTick">
            <summary>
            Timer事件，每秒一次
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.SystemEvents.EventCenter.OnSystemHDTimerTick">
            <summary>
            Timer事件，每秒20次(間隔：0.05秒)
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.SystemEvents.EventCenter.OnApplicationEvent">
            <summary>
            應用程式事件(啟動/結束)
            自動交易物件應該要偵測這個事件，在事件類型為ApplicationWillBeTerminated時取消所有掛單!!
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.SystemEvents.EventCenter.OnCommodityInfoChange">
            <summary>
            商品改變事件
            ==>Gateway模式才會一個一個發送，如果是AP模式應該是集中發送
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.SystemEvents.EventCenter.OnGetSystemParameter">
            <summary>
            取得系統參數事件，User透過資料API來查詢某個系統參數值時，會產生這個事件
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.SystemEvents.EventCenter.OnSetSystemParameter">
            <summary>
            設定系統參數事件，User透過資料API來設定某個系統參數時，會產生這個事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.EventCenter._defaultEventCenter">
            <summary>
            預設的事件中心
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.EventCenter.DefaultEventCenter">
            <summary>
            預設的系統事件中心
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.#ctor">
            <summary>
            Constructor，會產生兩個Timer(一般及HD)，並啟用timer
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.TimerHD_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            高解析度(0.05s)的Timer事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.Timer_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            普通的Timer事件(1s)
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.PostOrderConnectionChangedEvent(CapitalPipe.LiteTrading.SystemEvents.OrderConnectionEventArgs)">
            <summary>
            將一個委託連線狀態改變事件放到
            EventQueue中等待派送
            </summary>
            <param name="ev">待派送事件</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.PostQuoteConnectionChangedEvent(CapitalPipe.LiteTrading.SystemEvents.QuoteConnectionEventArgs)">
            <summary>
            將一個行情連線事件放在EventQueue中等待觸發
            </summary>
            <param name="ev">待派送事件</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.PostSystemNotifyEvent(CapitalPipe.LiteTrading.SystemEvents.SystemNotifyEventArgs)">
            <summary>
            Post一個系統Notify事件
            </summary>
            <param name="ev"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.PostCommodityInfoChangeEvent(CapitalPipe.LiteTrading.SystemEvents.CommodityInfoChangeEventArgs)">
            <summary>
            Post
            </summary>
            <param name="ev"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.InitEventThread">
            <summary>
            初始化事件派送Thread
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.DoEventThread">
            <summary>
            事件派送迴圈
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.StopEventThread">
            <summary>
            停止事件派送Thread
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.FireTransactionEvent(CapitalPipe.LiteTrading.Orders.TransactionEventArgs)">
            <summary>
            派送成交事件
            </summary>
            <param name="trEv"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.FireOrderEvent(CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            派送委託事件
            </summary>
            <param name="ordEv"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.FireSystemConfigurationChangedEvent(CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventArgs)">
            <summary>
            派送系統組態改變事件
            </summary>
            <param name="sysEv">系統組待事件</param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.FireApplicationEvent(CapitalPipe.LiteTrading.SystemEvents.ApplicationEventArgs)">
            <summary>
            派送應用程式事件
            </summary>
            <param name="appEv"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.FireCommodityInfoChangeEvent(CapitalPipe.LiteTrading.SystemEvents.CommodityInfoChangeEventArgs)">
            <summary>
            派送商品新增/移除事件
            </summary>
            <param name="ev"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.FireSystemNotifyEvent(CapitalPipe.LiteTrading.SystemEvents.SystemNotifyEventArgs)">
            <summary>
            
            </summary>
            <param name="ev"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.FireOrderConnectionEvent(CapitalPipe.LiteTrading.SystemEvents.OrderConnectionEventArgs)">
            <summary>
            派送委託連線事件
            </summary>
            <param name="ordEv"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.FireQuoteConnectionEvent(CapitalPipe.LiteTrading.SystemEvents.QuoteConnectionEventArgs)">
            <summary>
            派送報價連線事件
            </summary>
            <param name="quoteMEv"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.RequestGetSystemParameterEvent(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="systemID"></param>
            <param name="parameterID"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.EventCenter.RequestSetSystemParameter(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="systemID"></param>
            <param name="parameterID"></param>
            <param name="parameterVal"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEvents">
            <summary>
            用來輔助定義一些常數使用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEvents.CommoditiesUpdated">
            <summary>
            商品資料更新
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEvents.TreasuriesUpdated">
            <summary>
            庫存資料更新
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEvents.BasketEventID">
            <summary>
            Basket事件：新增/移除/修改
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEvents.BasketEntryEventID">
            <summary>
            BasketEntry的事件：新增/移除/修改
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEvents.BasketDerivativeEventID">
            <summary>
            BasketDerivative的事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEvents.YieldCurve">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEvents.VolatilityCurve">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEvents.TheoraticalPLPriceBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEvents.AccountChanged">
            <summary>
            帳號內容改變事件，參數：代表該帳號的物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEvents.AccountAdded">
            <summary>
            帳號新增事件，參數：代表該帳號的物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEvents.AccountRemoved">
            <summary>
            帳號移除事件，參數：代表該帳號的物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEvents.AccountsAdded">
            <summary>
            新增一組帳號，用在KGI/DDSC這種會吐一串帳號回來的Adaptor
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEvents.RiskFactorDisclosureFormatChanged">
            <summary>
            風控參數揭示方式改變
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEditType">
            <summary>
            系統組態事件
            -----------------------------------------------------------
            20140829 修改by Otto
                增加Replace這個事件類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEditType.Add">
            <summary>
            增加
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEditType.ChangeName">
            <summary>
            改名字
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEditType.ChangeValue">
            <summary>
            改資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEditType.Remove">
            <summary>
            移除
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEditType.Replace">
            <summary>
            取代：跟Change的差別是，change是同一個物件的狀態改變，而replace是用後來的物件取代舊物件
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventType">
            <summary>
            系統組態改變事件類型，任何系統組態(beta值/voltatility設定/...)都必須經過以下步驟：<para/>
            <list type="number">
            <item><description>派送系統組態即將改變事件(SystemConfigurationWillApply)</description></item>
            <item><description>套用系統組態的新設定</description></item>
            <item><description>派送系統組態已經改變事件(SystemConfigurationApplied)</description></item>
            </list>
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventType.SystemConfigurationWillApply">
            <summary>
            系統組態即將改變
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventType.SystemConfigurationApplied">
            <summary>
            系統組態已經改變
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventArgs">
            <summary>
            系統組態改變事件，使用者自訂組態也可以透過這個事件來派送：
            <list type="number">
            <item><description>要定義EventType</description></item>
            <item><description>要定義EventData</description></item>
            <item><description>透過EventCenter的PosSystemConfigurationEvent派送</description></item>
            </list>
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventArgs._eventType">
            <summary>
            事件類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventArgs._eventConfig">
            <summary>
            要改變的組態名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventArgs._eventAction">
            <summary>
            事件的動作
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventArgs._eventData">
            <summary>
            事件的資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventArgs.EventType">
            <summary>
            事件類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventArgs.ConfigurationID">
            <summary>
            組態類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventArgs.EventAction">
            <summary>
            編輯類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventArgs.EventData">
            <summary>
            事件資料
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventArgs.#ctor(CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventType,System.String,CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEditType,System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="evType">組態事件類型</param>
            <param name="evConfig">組態名稱</param>
            <param name="action">改變動作類型</param>
            <param name="evData">對應的物件資料</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.OrderConnectionEventArgs">
            <summary>
            委託連線事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.OrderConnectionEventArgs.PhysicalOrderManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.OrderConnectionEventArgs.ConnectionStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.OrderConnectionEventArgs.Message">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.OrderConnectionEventArgs.#ctor(CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager,CapitalPipe.LiteTrading.PhysicalOrders.PhysicalOrderManager.ConnectionStatus,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="mgr"></param>
            <param name="status"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.QuoteConnectionEventArgs">
            <summary>
            行情連線事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.QuoteConnectionEventArgs.QuoteModule">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.QuoteConnectionEventArgs.ConnectionStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.QuoteConnectionEventArgs.Message">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.QuoteConnectionEventArgs.#ctor(CapitalPipe.LiteTrading.Quotes.QuoteAdaptor,CapitalPipe.LiteTrading.Quotes.QuoteAdaptor.ConnectionStatus,System.String)">
            <summary>
            
            </summary>
            <param name="module"></param>
            <param name="connStatus"></param>
            <param name="msg"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.CommodityInfoChangeEventType">
            <summary>
            商品資料改變事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.CommodityInfoChangeEventType.CommodityInfoAdded">
            <summary>
            新增商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.CommodityInfoChangeEventType.CommodityInfoRemoved">
            <summary>
            移除商品
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.CommodityInfoChangeEventArgs">
            <summary>
            商品新增/移除事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.CommodityInfoChangeEventArgs._evType">
            <summary>
            商品資料改變事件類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.CommodityInfoChangeEventArgs._evCmd">
            <summary>
            發生改變的事件商品
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.CommodityInfoChangeEventArgs.EventType">
            <summary>
            事件類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.CommodityInfoChangeEventArgs.EventCommodity">
            <summary>
            事件商品
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.CommodityInfoChangeEventArgs.#ctor(CapitalPipe.LiteTrading.SystemEvents.CommodityInfoChangeEventType,CapitalPipe.LiteTrading.Commodities.CommodityInfo)">
            <summary>
            
            </summary>
            <param name="evType"></param>
            <param name="evCmd"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.CommodityInfoUpdateEventArgs">
            <summary>
            商品資料更新事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.CommodityInfoUpdateEventArgs.UpdateCommodities">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.CommodityInfoUpdateEventArgs.AddedCommodities">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.CommodityInfoUpdateEventArgs.RemovedCommodities">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.CommodityInfoUpdateEventArgs.#ctor(System.Collections.Generic.List{CapitalPipe.LiteTrading.Commodities.CommodityInfo},System.Collections.Generic.List{CapitalPipe.LiteTrading.Commodities.CommodityInfo},System.Collections.Generic.List{CapitalPipe.LiteTrading.Commodities.CommodityInfo},System.Collections.Generic.List{System.String})">
            <summary>
            Constructor
            </summary>
            <param name="updatedCmds">更新的商品</param>
            <param name="addedCmds">新增的商品</param>
            <param name="removedCmds">移除的商品</param>
            <param name="createdNULLCmds"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.SystemNotifyEventArgs">
            <summary>
            系統Notify事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemNotifyEventArgs._notifyID">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemEvents.SystemNotifyEventArgs._notifyData">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.SystemNotifyEventArgs.NotifyID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.SystemNotifyEventArgs.NotifyData">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.SystemNotifyEventArgs.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="notifyID"></param>
            <param name="notifyData"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.GetSystemParameterEventArgs">
            <summary>
            User透過資料API請求取得系統參數的事件資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.GetSystemParameterEventArgs.IsHandled">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.GetSystemParameterEventArgs.SystemID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.GetSystemParameterEventArgs.ParameterID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.GetSystemParameterEventArgs.ParameterValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.GetSystemParameterEventArgs.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="systemID"></param>
            <param name="parameterID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.GetSystemParameterEventArgs.SetParameterValue(System.String)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.SetSystemParameterEventArgs">
            <summary>
            User透過資料API請求設定系統參數的事件資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.SetSystemParameterEventArgs.IsHandled">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.SetSystemParameterEventArgs.SystemID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.SetSystemParameterEventArgs.ParameterID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemEvents.SetSystemParameterEventArgs.ParameterValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemEvents.SetSystemParameterEventArgs.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="systemID"></param>
            <param name="parameterID"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.GetSystemParameterEventHandler">
            <summary>
            User透過資料API請求取得系統參數的事件Handler
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.SetSystemParameterEventHandler">
            <summary>
            User透過資料API請求設定系統參數的事件Handler
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.SystemConfigurationEventHandler">
            <summary>
            系統組態改變的Handler
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.OrderConnectionEventHandler">
            <summary>
            委託連線改變事件的Handler
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.QuoteConnectionEventHandler">
            <summary>
            報價連線改變事件的Handler
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.CommodityInfoEventHandler">
            <summary>
            商品事件的Handler
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemEvents.SystemNotifyEventHandler">
            <summary>
            系統Notify事件的Handler
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemPolicy">
            <summary>
            系統政策
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemPolicy.CanUseMarketOrder">
            <summary>
            是否可以使用市價單
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemPolicy.SetCanUseMarketOrder(System.Boolean)">
            <summary>
            設定是否支援市價單
            </summary>
            <param name="bEnable"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemResources">
            <summary>
            系統XML檔的檔案名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemResources.UserPortfolioUsingDefinationFile">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.DataSavingModel">
            <summary>
            資料儲存模式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.DataSavingModel.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.DataSavingModel.Cloud">
            <summary>
            雲端儲存
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.DataSavingModel.Local">
            <summary>
            本機儲存
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TradingStrategyExecutionType">
            <summary>
            交易執行方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingStrategyExecutionType.Local">
            <summary>
            在本機執行，可以被搖控
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingStrategyExecutionType.Collocation">
            <summary>
            在Collocation執行，本地是用遙控模式
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.SystemVariables">
            <summary>
            交易系統共用的變數
            </summary>
            <remarks>
            交易系統共用的變數，使用時機：
            <list type="number">
            <item><description>需要知道使用者的登入帳號時：SystemVariables.UserID</description></item>
            <item><description>需要知道資料儲存的路徑時：SystemVariables.DataDirectory, SystemVariables.LogDirectory,...</description></item>
            <item><description>需要知道程式是否仍處於執行狀態：SystemVariables.ApplicationIsRunning</description></item>
            <item><description>需要知道目前使用者的資料儲存模式：SystemVariables.DataSavingModel</description></item>
            </list>
            -----------------------------------------------------------------------------
            系統路徑位置：
               使用User+appName時，資料夾會建置在"C:\Users\[UserID]\AppData\Roaming\[appName]\"<para/>
               不使用時，資料夾會被建置在"[應用程式執行檔所在目錄]\" 
            </remarks>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._appInitialized">
            <summary>
            應用程式是否已經完成初始化？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._appTerminatedNormally">
            <summary>
            應用程式不正常結束？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._userLoginTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._appRunning">
            <summary>
            應用程式是否正在執行？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._userID">
            <summary>
            使用者代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._password">
            <summary>
            登入密碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._dataDir">
            <summary>
            Data資料夾位置
            Data資料夾儲存商品檔(CommodityInfo.zip")、Tick_Values.csv這些檔案
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._userDataDir">
            <summary>
            這個變數目前尚無做用
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._localeUsing">
            <summary>
            多語系時用儲存使用語系統的字串
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._configDir">
            <summary>
            Config資料夾位置
            Config用來儲存參數設定，或是系統組態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._logDir">
            <summary>
            系統Log資料夾位置
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._pluginsDir">
            <summary>
            Plugin檔案位置
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._orderManagerType">
            <summary>
            委託管理員類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._extraSettings">
            <summary>
            其他設定資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._monitorSetting">
            <summary>
            監控設定資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._enableDebugUI">
            <summary>
            啟用DebugUI
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._previousTradingDate">
            <summary>
            前一個交易日
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._startTradingDate">
            <summary>
            系統啟動日期
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._smtpServer">
            <summary>
            SMTP Server
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._smtpPort">
            <summary>
            SMTP的Port
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._smtpUserID">
            <summary>
            SMTP的UserID
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._smtpMailFrom">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._smtpPassword">
            <summary>
            SMTP的Password
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._smtpUseSSL">
            <summary>
            SMTP使用SSL
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._tsExecType">
            <summary>
            預設在Local執行
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._applicationID">
            <summary>
            Application的代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._mailList">
            <summary>
            系統警示的Mail List
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._systemCulture">
            <summary>
            系統的Culture
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._isTreasuryUseURPLInfo">
            <summary>
            是否使用庫存資料的未實現損益資訊
            ==> 否，會對齊參考價
            ==> 是，會使用庫存檔的未實現損益
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._isPLIncludePreOpenPL">
            <summary>
            是否
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._availableExchanges">
            <summary>
            允許交易的交易所
            </summary>   
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._dataSavingModel">
            <summary>
            資料儲存模型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._baseCurrency">
            <summary>
            預設計價幣別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._dateChangeCriteria">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._dateChangeTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables._workingDate">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.SystemVariables.CommodityClassesXMLFileName">
            <summary>
            商品分類XML檔檔案名稱(不含路徑)
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.SystemCulture">
            <summary>
            系統的Culture
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.IsApplicationInitilized">
            <summary>
            應用程式是否已經完成初始化
            true:已經完成初始化
            false:尚未完成初始化
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.IsTreasuryUseURPLInfo">
            <summary>
            是否使用庫存資料的未實現損益資訊
            ==> 否，會對齊參考價
            ==> 是，會使用庫存檔的未實現損益
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.IsPLIncludePreOpenPL">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.IsApplicationTerminatedNormally">
            <summary>
            應用程式是否正常關閉？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.UserLoginTime">
            <summary>
            登入時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.UserID">
            <summary>
            使用者代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.Password">
            <summary>
            使用者密碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.ApplicationIsRunning">
            <summary>
            應用程式是否正在運行？
            ==>跟著系統運作的背景Thread可以用這個變數來決定是否繼續執行
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.DataDirectory">
            <summary>
            資料儲存路徑
            </summary>
            <remarks>
            Data資料夾儲存商品檔(CommodityInfo.zip")、Tick_Values.csv這些檔案
            Data與Config的差別：Data比較偏向是大量的，較不依賴使用者的資料
            Config是比較屬於使用者個人設定的資料
            </remarks> 
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.LocalizedDataDirectory">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.UserDataDirectory">
            <summary>
            儲存使用者資料的目錄
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.LogDirectory">
            <summary>
            Log目錄
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.ConfigDirectory">
            <summary>
            ConfigDir設定檔目錄
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.PluginDirectory">
            <summary>
            Plugin模組資料儲存位置
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.PreviousTradingDay">
            <summary>
            前一交易日
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.CurrentTradingDay">
            <summary>
            登入系統日期
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.DataSavingModel">
            <summary>
            資料儲存模式
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.EnableDeubgUI">
            <summary>
            啟用debug UI
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.OrderManagerType">
            <summary>
            委託管理員的類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.ExtraSettings">
            <summary>
            其他設定
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.MonitorSetting">
            <summary>
            監控設定
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.AvailableExchanges">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.SystemMailList">
            <summary>
            系統的email通知清單
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.SMTPServer">
            <summary>
            SMTP的Server Address
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.SMTPPort">
            <summary>
            SMTP的Server Port
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.SMTPMailFrom">
            <summary>
            SMTP寄信時的寄件者
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.SMTPUserID">
            <summary>
            SMTP寄信時的使用者帳號
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.SMTPPassword">
            <summary>
            SMTP寄信時的使用者密碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.SMTPUseSSL">
            <summary>
            SMTP寄信時是否要使用SSL
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.CommodityClassesXMLFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.TradingStrategyExecutionLocation">
            <summary>
            交易策略執行的位置
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.ApplicationID">
            <summary>
            應用程式代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.BaseCurrency">
            <summary>
            預設的基準幣別
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.WorkingDateChangeCriteriaUsing">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.WorkingDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.TimeToChangeWorkingDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.SystemVariables.DefaultSystemMailListSettingFile">
            <summary>
            目前只存email
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetTradingStrategyExecutionLocation(CapitalPipe.LiteTrading.TradingStrategyExecutionType)">
            <summary>
            設定交易策略被執行的地方
            </summary>
            <param name="execType"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetApplicationID(System.String)">
            <summary>
            設定應用程式代碼
            </summary>
            <param name="appID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetApplicationTerminatedNormally">
            <summary>
            將應用程式正常關閉的旗標設成true
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetApplicationClosed">
            <summary>
            將App的執行狀態設成關閉
            此操作不可逆，必須在系統結束前呼叫
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetUserLoginTime(System.String)">
            <summary>
            設定使用者登入時間
            </summary>
            <param name="usrLoginTime"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetDataDirectory(System.String)">
            <summary>
            設定資料目錄
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetLogDirectory(System.String)">
            <summary>
            設定Log檔目錄
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetConfigDirectory(System.String)">
            <summary>
            設定檔目錄
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetPluginDirectory(System.String)">
            <summary>
            設定Plugin檔案路徑
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetLocaleUsing(System.String)">
            <summary>
            
            </summary>
            <param name="loc"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetUserDataDirectory(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetPreviousTradingDay(System.DateTime)">
            <summary>
            設定前一交易日
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetDataSavingModel(CapitalPipe.LiteTrading.DataSavingModel)">
            <summary>
            設定資料儲存模式
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetEnableDebugUI(System.Boolean)">
            <summary>
            設定"是否啟用DebugUI"
            </summary>
            <param name="bDebug"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetOrderManagerType(System.String)">
            <summary>
            
            </summary>
            <param name="omt"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetExtraSettings(System.String)">
            <summary>
            其他設定
            </summary>
            <param name="extra"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetMonitorSetting(System.String)">
            <summary>
            監控設定
            </summary>
            <param name="setting"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetIsUseTreasuryURPL(System.Boolean)">
            <summary>
            設定 ==> 是否使用未實現損益~~~
            </summary>
            <param name="bUse"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetPLIncludePreOpenPL(System.Boolean)">
            <summary>
            
            </summary>
            <param name="bUse"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.UpdateWorkingDate">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetWorkingDate(System.DateTime)">
            <summary>
            設定WorkDate日期
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SetApplicationInitialized(System.Boolean)">
            <summary>
            將應用程式狀態設成已經完成初始化
            </summary>
            <param name="bVal"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.AssignAvailableExchanges(System.String[])">
            <summary>
            
            </summary>
            <param name="exchanges"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.SaveMailList">
            <summary>
            儲存Email List
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.SystemVariables.LoadMailList">
            <summary>
            載入Email List
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter">
            <summary>
            K棒轉換器
            -------------------------------------------------------
            分盤的處理方式：
            若該盤已結束  執行close流程。問題：若當天無任何交易？這情形必須有辦法能知道是哪一個session，才能正確的close
                         原則：若_currentSession未知，不處理。若_currentSession為已知，則close這個session
            
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter._barInterval">
            <summary>
            K棒的區間類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter._intervalValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter._tradingPeriod">
            <summary>
            這個K棒轉換器使用的TradingPeriod
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter._sessionsCache">
            <summary>
            快取的SESSION值
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter._currentSession">
            <summary>
            目前的session
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter._developingBar">
            <summary>
            正在發展中的Bar ==> 如果Bar的時間是DateTime.MinValue，表示目前是歸零狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter._closedBars">
            <summary>
            已收線的k棒們
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter._referencePrice">
            <summary>
            參考價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter._currentPrice">
            <summary>
            目前的價格
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.AllBars">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.#ctor(CapitalPipe.LiteTrading.Commodities.AdvanceTradingPeriod,CapitalPipe.LiteTrading.TechnicalAnalysis.BarIntervalType,System.Int32)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.SetReferencePrice(System.Decimal)">
            <summary>
            
            </summary>
            <param name="pri"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.SetCurrentPrice(System.Decimal)">
            <summary>
            設定目前的價格
            </summary>
            <param name="pri"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.UpdateDevelopingBar(CapitalPipe.LiteTrading.Quotes.TickData)">
            <summary>
            更新發展中的bar(會觸發事件)
            </summary>
            <param name="tick"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.NewDevelopingBar(CapitalPipe.LiteTrading.Quotes.TickData,System.DateTime)">
            <summary>
            新k棒，會觸發事件
            </summary>
            <param name="tick"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.AddTickData(CapitalPipe.LiteTrading.Quotes.TickData)">
            <summary>
            收到新的Tick
            </summary>
            <param name="tick"></param>
        </member>
        <!-- 已忽略成員 "M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.CheckTime(System.DateTime)" 中格式錯誤的 XML 註解 -->
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.RecoverBars(System.DateTime,CapitalPipe.LiteTrading.Commodities.AdvanceSession)">
            <summary>
            
            </summary>
            <param name="barTime"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.CloseThisSession">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.FireBarEvent(CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventType,CapitalPipe.LiteTrading.TechnicalAnalysis.BarData)">
            <summary>
            發送Bar事件
            </summary>
            <param name="evType"></param>
            <param name="bar"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.FireBarsRecorveredEvent(System.Collections.Generic.List{CapitalPipe.LiteTrading.TechnicalAnalysis.BarData})">
            <summary>
            發送Bar回補事件
            </summary>
            <param name="recoveredBars"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.GetSessionPeriod(System.DateTime,CapitalPipe.LiteTrading.Commodities.AdvanceSession[],CapitalPipe.LiteTrading.TechnicalAnalysis.BarIntervalType,System.Int32,CapitalPipe.LiteTrading.Commodities.AdvanceSession@)">
            <summary>
            SessionPeriod要含日期
            </summary>
            <param name="time"></param>
            <param name="sessions"></param>
            <param name="intervalType"></param>
            <param name="intervalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.GetSessionEnd(System.DateTime,CapitalPipe.LiteTrading.Commodities.AdvanceSession,CapitalPipe.LiteTrading.TechnicalAnalysis.BarIntervalType,System.Int32)">
            <summary>
            
            </summary>
            <param name="time"></param>
            <param name="currentSession"></param>
            <param name="intervalType"></param>
            <param name="intervalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.GetSessionPeriod(System.DateTime,CapitalPipe.LiteTrading.Commodities.AdvanceSession,CapitalPipe.LiteTrading.TechnicalAnalysis.BarIntervalType,System.Int32)">
            <summary>
            
            </summary>
            <param name="time"></param>
            <param name="ss"></param>
            <param name="intervalType"></param>
            <param name="intervalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.FindFirstMatchDate(System.DateTime,System.Int16,System.Boolean)">
            <summary>
            找最接近的日期
            </summary>
            <param name="dt">資料時點</param>
            <param name="weekday">是星期xx</param>
            <param name="bForward">true:往前找；false:往後找</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.FindNearestMatchDate(System.DateTime,System.Int16)">
            <summary>
            找最接近且吻合的日期
            </summary>
            <param name="dt"></param>
            <param name="weekday"></param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverter.CalculateTotalSeconds(CapitalPipe.LiteTrading.TechnicalAnalysis.BarIntervalType,System.Int32)">
            <summary>
            
            </summary>
            <param name="intervalType"></param>
            <param name="intervalValue"></param>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventType">
            <summary>
            BarConverter事件類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventType.NewBar">
            <summary>
            新的Bar資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventType.BarUpdate">
            <summary>
            K棒資料更新
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventType.BarsRecover">
            <summary>
            回補K棒資料
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventType.Undefined">
            <summary>
            未定義 ==> Sentinel變數
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventArgs">
            <summary>
            K棒資料事件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventArgs._eventType">
            <summary>
            事件類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventArgs._bar">
            <summary>
            觸發事件的K棒資料物件
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventArgs._bars">
            <summary>
            回補Bar事件時，存放回補的K棒資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventArgs.EventType">
            <summary>
            事件類型
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventArgs.EventBar">
            <summary>
            觸發事件的K棒
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventArgs.RecoveredBars">
            <summary>
            回補回來的K棒資料
            當事件不為BarsRecover時，會是null
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventArgs.#ctor(CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventType,CapitalPipe.LiteTrading.TechnicalAnalysis.BarData)">
            <summary>
            NewBar/BarUpdate事件時，使用的Constructor
            </summary>
            <param name="eventType"></param>
            <param name="bar"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventArgs.#ctor(System.Collections.Generic.List{CapitalPipe.LiteTrading.TechnicalAnalysis.BarData})">
            <summary>
            當回補事件時，用這個Constructor
            </summary>
            <param name="bars"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TechnicalAnalysis.BarConverterEventHandler">
            <summary>
            處理BarConverter事件的delegate
            </summary>
            <param name="sender">事件來源，通常是BarConverter</param>
            <param name="args">事件資料</param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TechnicalAnalysis.BarData">
            <summary>
            K棒資料
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TechnicalAnalysis.BarData.BarTime">
            <summary>
            K棒時點
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TechnicalAnalysis.BarData.Open">
            <summary>
            開盤價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TechnicalAnalysis.BarData.High">
            <summary>
            最高價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TechnicalAnalysis.BarData.Low">
            <summary>
            最低價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TechnicalAnalysis.BarData.Close">
            <summary>
            收盤價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TechnicalAnalysis.BarData.Volume">
            <summary>
            成交量
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarData.Reset">
            <summary>
            重設
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TechnicalAnalysis.BarData.CloneBar">
            <summary>
            複製Bar資料         
            </summary>
            <returns></returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TechnicalAnalysis.BarIntervalType">
            <summary>
            K棒區間類型
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarIntervalType.Second">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarIntervalType.Minute">
            <summary>
            分鐘
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarIntervalType.Hour">
            <summary>
            小時
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarIntervalType.Day">
            <summary>
            日
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarIntervalType.Tick">
            <summary>
            每一個Tick
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TechnicalAnalysis.BarIntervalType.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup">
            <summary>
            部門監控資訊
            採用hierarchy方式
            --------------------------------------------------------------------------------
            ToDo:
            SelectableTrader ==> 可能改成Trader裡面有一個boolean屬性，另外加上實做一個Clone機制!!
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup._groupID">
            <summary>
            部門代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup._name">
            <summary>
            部門名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup._traders">
            <summary>
            部門下轄的所有交易員
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup._subGroups">
            <summary>
            部門下的次部門
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup._sTraders">
            <summary>
            這個設計可能有問題，要跟昕禾check
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup.GroupID">
            <summary>
            部門代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup.GroupName">
            <summary>
            部門名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup.SubGroup">
            <summary>
            部門下轄的次部門
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup.Traders">
            <summary>
            部門下轄的交易員
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup.SelectableTraders">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="groupID"></param>
            <param name="groupName"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup.AddTraders(CapitalPipe.LiteTrading.TradeMonitor.Trader)">
            <summary>
            
            </summary>
            <param name="trader"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup.AddSubGroup(CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup)">
            <summary>
            
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradeMonitor.MonitorGroup.AddSelectableTrader(CapitalPipe.LiteTrading.TradeMonitor.SelectableTrader)">
            <summary>
            
            </summary>
            <param name="st"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TradeMonitor.RiskControlUnitType">
            <summary>
            監控方式：
                By Trader   : 
                    參數：交易市場(ALL,CFFEX,CZCE,...)
                By Account  :
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TradeMonitor.RiskControlFilterType">
            <summary>
            監控單位的過濾方式
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradeMonitor.RiskControlFilterType.NoFilter">
            <summary>
            不過濾
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradeMonitor.RiskControlFilterType.ByCurrency">
            <summary>
            依幣別
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradeMonitor.RiskControlFilterType.ByExchange">
            <summary>
            依交易所
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradeMonitor.RiskControlFilterType.ByCommodityGroup">
            <summary>
            依商品群組
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradeMonitor.RiskControlFilterType.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TradeMonitor.RiskControlSetting">
            <summary>
            指定Account時，參數是交易所
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradeMonitor.RiskControlSetting.RiskCtrlID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradeMonitor.RiskControlSetting.RiskCtrlType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradeMonitor.RiskControlSetting.RiskFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradeMonitor.RiskControlSetting.RiskParameters">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradeMonitor.RiskControlSetting.MarginLimit">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradeMonitor.RiskControlSetting.ProfitLossLimit">
            <summary>
            
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TradeMonitor.Trader">
            <summary>
            交易員的定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradeMonitor.Trader._traderID">
            <summary>
            交易員代碼
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradeMonitor.Trader._name">
            <summary>
            交易員名稱
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradeMonitor.Trader._acounts">
            <summary>
            交易員相關帳號
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradeMonitor.Trader._allTraders">
            <summary>
            所有的交易員列表
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradeMonitor.Trader.TraderID">
            <summary>
            交易員代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradeMonitor.Trader.TraderName">
            <summary>
            交易員名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradeMonitor.Trader.Accounts">
            <summary>
            可使用帳號
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradeMonitor.Trader.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="tID">交易員代碼</param>
            <param name="tName">交易員名稱</param>
            <returns></returns>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradeMonitor.Trader.AddAccount(CapitalPipe.LiteTrading.Orders.AccountInfo)">
            <summary>
            新增帳號
            </summary>
            <param name="accInfo"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradeMonitor.Trader.AddTrader(CapitalPipe.LiteTrading.TradeMonitor.Trader)">
            <summary>
            新增交易員
            </summary>
            <param name="trader"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradeMonitor.Trader.GetTrader(System.String)">
            <summary>
            由交易員代碼取出交易員資料
            </summary>
            <param name="traderID">交易員代碼</param>
            <returns>
            找不到會回傳null
            </returns>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TradeMonitor.SelectableTrader">
            <summary>
            提供選擇屬性的Trader
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution">
            <summary>
            定期執行
            </summary>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.ExecStatus">
            <summary>
            目前的執行狀態
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.ExecStatus.Pending">
            <summary>
            尚未啟動
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.ExecStatus.WaitForActivating">
            <summary>
            等待啟動
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.ExecStatus.OrderActivated">
            <summary>
            委託已啟動，等待追價
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.ExecStatus.Executed">
            <summary>
            委託已執行
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.ExecStatus.Filled">
            <summary>
            已成交
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.ExecStatus.Canceld">
            <summary>
            已刪單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.ExecStatus.Error">
            <summary>
            執行錯誤!!
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.ExecStatus.Expired">
            <summary>
            逾期
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.ExecStatus.Undefined">
            <summary>
            未定義
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._dtToExecute">
            <summary>
            執行時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._isActive">
            <summary>
            是否啟用？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._baseCmd">
            <summary>
            下單商品
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._ordTerm">
            <summary>
            委託內容
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._raisePriceSeconds">
            <summary>
            追價秒數
            ===>若達追價秒數委託仍未就緒？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._raisePriceTickOffset">
            <summary>
            追價時的tick調整數
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._raisePriceUseMarketOrder">
            <summary>
            追價使用市價單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._raisePriceTime">
            <summary>
            委託追價時間
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._execStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._order">
            <summary>
            委託單
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._isRaised">
            <summary>
            是否已追價？
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._thread">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._createTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._statusMessage">
            <summary>
            執行狀態訊息
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._parentGroup">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution._executions">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.CreateTime">
            <summary>
            建立時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.ExecuteTime">
            <summary>
            執行時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.CommodityName">
            <summary>
            商品名稱
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.CommodityCode">
            <summary>
            商品代碼
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.GroupID">
            <summary>
            Group的ID
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.ParentGroup">
            <summary>
            擁有這個排程的群組
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.IsActive">
            <summary>
            是否啟用？
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.IsRaised">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.ExecutionStatus">
            <summary>
            執行狀態
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.StrategyOrder">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.OrderNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.DealQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.MatchedQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.BuySellType">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.RemainQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.AverageMatchPrice">
            <summary>
            平均成交價
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.ExecPrice">
            <summary>
            執行價格
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.OrderPrice">
            <summary>
            委託價格
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.OrderState">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.RaisePriceTime">
            <summary>
            委託追價時間
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.RaisePriceTimeString">
            <summary>
            委託追價時間字串
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.StatusMessage">
            <summary>
            委託狀態訊息
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.ExecutionList">
            <summary>
            預約執行序列
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.Executions">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.#cctor">
            <summary>
            Static Initializer
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.#ctor(CapitalPipe.LiteTrading.Commodities.CommodityInfo,System.DateTime,CapitalPipe.LiteTrading.Orders.OrderTerm,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="strategyID"></param>
            <param name="cmdInfo"></param>
            <param name="accInfo"></param>
            <param name="bs"></param>
            <param name="ordType"></param>
            <param name="orderVolume"></param>
            <param name="delaySeconds"></param>
            <param name="ticksOffset"></param>
            <param name="raisePriceSeconds"></param>
            <param name="raisePriceUseMarketOrder"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.SetParentGroup(CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecutionGroup)">
            <summary>
            
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.InitSendOrder">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.RaisePrice">
            <summary>
            執行追價
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.Order_OnOrderChange(System.Object,CapitalPipe.LiteTrading.Orders.OrderEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.AddScheduledExecutionEntry(CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution)">
            <summary>
            
            </summary>
            <param name="oe"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.DoCheckOrdersThread">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution.CheckScheduledExecutions">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecutionGroup.GroupID">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecutionGroup.Executions">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecutionGroup.#ctor">
            <summary>
            
            </summary>
            <param name="groupID"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecutionGroup.AddExecution(CapitalPipe.LiteTrading.TradingUtilities.ScheduledExecution)">
            <summary>
            
            </summary>
            <param name="se"></param>
        </member>
        <member name="T:CapitalPipe.LiteTrading.TradingUtilities.ScheduledReloadCommodityFileEntry">
            <summary>
            自動重載商品檔的機制
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledReloadCommodityFileEntry.LoadTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledReloadCommodityFileEntry.HasExecuted">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledReloadCommodityFileEntry.CommodityFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledReloadCommodityFileEntry.AllSchedules">
            <summary>
            
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.ScheduledReloadCommodityFileEntry.DefaultSchedulesFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradingUtilities.ScheduledReloadCommodityFileEntry.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:CapitalPipe.LiteTrading.TradingUtilities.SendMailTools._logMessages">
            <summary>
            傳送郵件的Log紀錄
            </summary>
        </member>
        <member name="E:CapitalPipe.LiteTrading.TradingUtilities.SendMailTools.OnLogMessage">
            <summary>
            Log事件
            </summary>
        </member>
        <member name="P:CapitalPipe.LiteTrading.TradingUtilities.SendMailTools.LogMessages">
            <summary>
            Log訊息
            </summary>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradingUtilities.SendMailTools.SendMail(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="strTitle"></param>
            <param name="strBody"></param>
        </member>
        <member name="M:CapitalPipe.LiteTrading.TradingUtilities.SendMailTools.FireLogMessage(System.String)">
            <summary>
            
            </summary>
            <param name="logMsg"></param>
        </member>
    </members>
</doc>
